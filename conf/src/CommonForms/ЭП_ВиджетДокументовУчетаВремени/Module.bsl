#Область ОбработчикиСобытийФормы 
  
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	ОбновитьВиджет();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УчетВремени(Команда)   
	
	СсылкаУчетВремени = ОбновитьВиджет();
	Если ЗначениеЗаполнено(СсылкаУчетВремени) Тогда  
		
		ПараметрыФормы = Новый Структура("Ключ", СсылкаУчетВремени);
		ОткрытьФорму("Документ.УчетВремени.ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Функция ОбновитьВиджет() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	УчетВремени.Ссылка КАК Ссылка,
		|	УчетВремени.Дата КАК Дата,
		|	ЕСТЬNULL(УчетВремени.Длительность, 0) КАК Длительность,
		|	УчетВремени.Пользователь КАК Пользователь
		|ПОМЕСТИТЬ ВТ_УчетВремени
		|ИЗ
		|	Документ.УчетВремени КАК УчетВремени
		|ГДЕ
		|	НЕ УчетВремени.ПометкаУдаления
		|	И УчетВремени.Дата <= &Дата
		|	И УчетВремени.Пользователь = &Пользователь
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_УчетВремени.Ссылка КАК Ссылка,
		|	ВТ_УчетВремени.Длительность / 3600 КАК КоличествоФакт,
		|	ВТ_УчетВремени.Дата КАК ДатаДокумента,
		|	ЕСТЬNULL(ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Часы, 0) КАК КоличествоПлан
		|ИЗ
		|	ВТ_УчетВремени КАК ВТ_УчетВремени
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
		|		ПО ВТ_УчетВремени.Пользователь.ЭП_Сотрудник = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник
		|			И (НАЧАЛОПЕРИОДА(ВТ_УчетВремени.Дата, ДЕНЬ) = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень)";
	
	Запрос.УстановитьПараметр("Дата",ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	РезультатЗапроса = Запрос.Выполнить(); 
	СсылкаУчетВремени = Документы.УчетВремени.ПустаяСсылка();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда  
		
		ПоследнийДокумент = РезультатЗапроса.Выгрузить()[0]; 
		
		Если НЕ ЗначениеЗаполнено(ПоследнийДокумент.КоличествоФакт) и НЕ ПоследнийДокумент.КоличествоФакт = 0 Тогда
			
			Элементы.УчетВремени.Заголовок = "Не обнаружено проведенных документов Учет времени";
			Элементы.УчетВремени.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ПоследнийДокумент.КоличествоПлан) и НЕ ПоследнийДокумент.КоличествоПлан = 0 Тогда
			
			Элементы.УчетВремени.Заголовок = "Не обнаружено записей в регистре Данные табельного учета";
			Элементы.УчетВремени.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;

		Иначе
			
			ДатаДокумента = Формат(ПоследнийДокумент.ДатаДокумента, "ДФ=dd.MM.yyyy");	
			РазницаДат = НачалоДня(ТекущаяДатаСеанса()) - НачалоДня(ПоследнийДокумент.ДатаДокумента); 
			
			НовыйЗаголовок = СтрШаблон("Дата последнего разнесения трудозатрат: %1. Заполнено часов: %2 из %3",
				ДатаДокумента, ПоследнийДокумент.КоличествоФакт, ПоследнийДокумент.КоличествоПлан);
				
			Элементы.УчетВремени.Заголовок = НовыйЗаголовок;
			РазницаВДнях = РазницаДат / (60 * 60 * 24);
			
			Если РазницаВДнях > 7 Тогда
				
				Элементы.УчетВремени.ЦветТекста = WebЦвета.Красный; 
				СсылкаУчетВремени = ПоследнийДокумент.Ссылка;
					
			ИначеЕсли РазницаВДнях = 7 Тогда
				
				Элементы.УчетВремени.ЦветТекста = WebЦвета.Золотой;   
				СсылкаУчетВремени = ПоследнийДокумент.Ссылка;
				
			Иначе   
				
				Элементы.УчетВремени.ЦветТекста = WebЦвета.Зеленый;   
				СсылкаУчетВремени = ПоследнийДокумент.Ссылка;
				
			КонецЕсли; 
			
		КонецЕсли;
		
	Иначе
		
		Элементы.УчетВремени.Заголовок = "Не обнаружено проведенных документов Учет времени"; 
		Элементы.УчетВремени.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
		
	КонецЕсли;
	
	Возврат СсылкаУчетВремени; 
	
КонецФункции

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьВиджет();
	
КонецПроцедуры

#КонецОбласти

