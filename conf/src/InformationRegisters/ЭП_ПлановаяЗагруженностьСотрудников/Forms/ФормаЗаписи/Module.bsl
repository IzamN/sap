#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("РежимФормы", РежимФормы);
	ЗаполнитьЗначенияСвойств(Запись,Параметры.ЗначенияЗаполнения);
	УправлениеФормой(); 
		
	Если Запись.ПлановыйПроцентЗагрузки = 0 Тогда
		Запись.ПлановыйПроцентЗагрузки = 100;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Если РежимФормы = "Сотрудник" Тогда
		Элементы.Период.Доступность = Ложь;
		Элементы.Сотрудник.Доступность = Ложь;
	ИначеЕсли РежимФормы = "Проект" Тогда
		Элементы.Период.Доступность = Ложь;
		Элементы.Проект.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПроверитьПередЗаписью(Отказ); 
	
	Если ТекущийОбъект.ПлановыйПроцентЗагрузки = 0 Тогда
		ТекущийОбъект.ПометкаУдаления = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	УдалитьИсходнуюЗапись(Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры


#КонецОбласти


#Область Служебные

&НаСервере
Процедура ПроверитьПередЗаписью(Отказ)
	
	Если ПустаяСтрока(РежимФормы) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.СрокНахожденияВПроекте)
		И Запись.СрокНахожденияВПроекте < Запись.Период Тогда
		ОбщегоНазначения.СообщитьПользователю("Срок нахождения в проекте меньше текущей даты!",,"СрокНахожденияВПроекте",,Отказ);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ЭП_ПлановаяЗагруженностьСотрудниковСрезПоследних.ПлановыйПроцентЗагрузки), 0) КАК ПлановыйПроцентЗагрузки
	|ИЗ
	|	РегистрСведений.ЭП_ПлановаяЗагруженностьСотрудников.СрезПоследних(
	|			,
	|			Сотрудник = &Сотрудник
	|				И Не Проект В (&Проект, &ПроектДоИзменения)) КАК ЭП_ПлановаяЗагруженностьСотрудниковСрезПоследних
	|ГДЕ
	|	НЕ ЭП_ПлановаяЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Сотрудник", Запись.Сотрудник);
	Запрос.УстановитьПараметр("Проект", Запись.Проект);
	Запрос.УстановитьПараметр("ПроектДоИзменения", Запись.ИсходныйКлючЗаписи.Проект);
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	ВыборкаЗапроса.Следующий();
	
	Если ВыборкаЗапроса.ПлановыйПроцентЗагрузки + Запись.ПлановыйПроцентЗагрузки > 100 Тогда
		ОбщегоНазначения.СообщитьПользователю("Суммарный процент загрузки сотрудника больше 100%!",,"ПлановыйПроцентЗагрузки",,Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьИсходнуюЗапись(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПустаяСтрока(РежимФормы) Тогда 
		Возврат;
	КонецЕсли;
	
	ИсходныйКлючЗаписи = Запись.ИсходныйКлючЗаписи;
	Если ИсходныйКлючЗаписи.Пустой() Тогда
		Возврат;
	ИначеЕсли ИсходныйКлючЗаписи.Проект = ТекущийОбъект.Проект
		И ИсходныйКлючЗаписи.Сотрудник = ТекущийОбъект.Сотрудник Тогда
		Возврат;
	КонецЕсли;
		
	РегЗапись = РегистрыСведений.ЭП_ЗагруженностьСотрудников.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(РегЗапись,ИсходныйКлючЗаписи,"Период,Сотрудник");
	РегЗапись.ПометкаУдаления = Истина;
	РегЗапись.Записать();
		
КонецПроцедуры

&НаСервере
Процедура СотрудникОбработкаВыбораНаСервере(ВыбранныйСотрудник)
	Запись.Департамент = ВыбранныйСотрудник.Департамент;
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	СотрудникОбработкаВыбораНаСервере(ВыбранноеЗначение)
КонецПроцедуры

&НаСервере
Процедура ЭтапОбработкаВыбораНаСервере(ВыбранныйЭтап)
	Запись.СрокНахожденияВПроекте = ВыбранныйЭтап.ДатаОкончания;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	ЭтапОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

#КонецОбласти
