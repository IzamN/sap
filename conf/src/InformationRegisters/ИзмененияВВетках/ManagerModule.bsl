
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Ветка.Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеПереносаИзмененийВВетки(Параметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОшибкиИзмененныеМетаданные.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Ошибки.УдалитьИзмененныеМетаданные КАК ОшибкиИзмененныеМетаданные
	|ГДЕ
	|	ОшибкиИзмененныеМетаданные.Ссылка.ВеткаИсправления.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта), ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаДляИсправленияОшибок))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОшибкиИзмененныеМетаданные.Ссылка
	|ИЗ
	|	Справочник.Ошибки.УдалитьИзмененныеМетаданные КАК ОшибкиИзмененныеМетаданные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Ошибки.ИсправлениеВВетках КАК ОшибкиИсправлениеВВетках
	|		ПО ОшибкиИзмененныеМетаданные.Ссылка = ОшибкиИсправлениеВВетках.Ссылка
	|ГДЕ
	|	ОшибкиИсправлениеВВетках.ВеткаИсправления.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта), ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаДляИсправленияОшибок))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТехническиеПроектыОбъектыМетаданных.Ссылка
	|ИЗ
	|	Справочник.ТехническиеПроекты.УдалитьОбъектыМетаданных КАК ТехническиеПроектыОбъектыМетаданных
	|ГДЕ
	|	ТехническиеПроектыОбъектыМетаданных.Ссылка.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереносаИзмененийВВетки(Параметры) Экспорт
	
	// Ошибки
	
	ПолноеИмяОбъекта = "Справочник.Ошибки";
	
	СписокОшибок = Новый Массив;
	
	ВыборкаОбъектовДляОбработки = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока ВыборкаОбъектовДляОбработки.Следующий() Цикл
		СписокОшибок.Добавить(ВыборкаОбъектовДляОбработки.Ссылка);
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОшибкиИзмененныеМетаданные.Ссылка КАК Ошибка,
	|	ОшибкиИзмененныеМетаданные.Ссылка.ВеткаИсправления КАК Ветка,
	|	ОшибкиИзмененныеМетаданные.ОбъектМетаданных КАК ОбъектМетаданных,
	|	ОшибкиИзмененныеМетаданные.ПодчиненныйОбъект КАК ПодчиненныйОбъект
	|ИЗ
	|	Справочник.Ошибки.УдалитьИзмененныеМетаданные КАК ОшибкиИзмененныеМетаданные
	|ГДЕ
	|	ОшибкиИзмененныеМетаданные.Ссылка В(&СписокОшибок)
	|	И ОшибкиИзмененныеМетаданные.Ссылка.ВеткаИсправления.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта), ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаДляИсправленияОшибок))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОшибкиИзмененныеМетаданные.Ссылка,
	|	ОшибкиИсправлениеВВетках.ВеткаИсправления,
	|	ОшибкиИзмененныеМетаданные.ОбъектМетаданных,
	|	ОшибкиИзмененныеМетаданные.ПодчиненныйОбъект
	|ИЗ
	|	Справочник.Ошибки.УдалитьИзмененныеМетаданные КАК ОшибкиИзмененныеМетаданные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Ошибки.ИсправлениеВВетках КАК ОшибкиИсправлениеВВетках
	|		ПО ОшибкиИзмененныеМетаданные.Ссылка = ОшибкиИсправлениеВВетках.Ссылка
	|ГДЕ
	|	ОшибкиИзмененныеМетаданные.Ссылка В(&СписокОшибок)
	|	И ОшибкиИсправлениеВВетках.ВеткаИсправления.Тип В (ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта), ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаДляИсправленияОшибок))
	|ИТОГИ ПО
	|	Ошибка"
	;
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОшибок", СписокОшибок);
	
	ВыборкаОшибок = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Пока ВыборкаОшибок.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаОшибок.Ошибка) Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			НачатьТранзакцию();
			
			ВыборкаДанныхОшибки = ВыборкаОшибок.Выбрать();
			
			ПеренестиИзмененияВВетку(ВыборкаДанныхОшибки);
			
			ЗафиксироватьТранзакцию();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаОшибок.Ошибка);
			
		Исключение
			
			ОтменитьТранзакцию();
			
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
			
			ТекстСообщения = НСтр("ru = 'Не удалось перенести изменения %ИмяОбъекта%: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяОбъекта%", ПолноеИмяОбъекта);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаОшибок.Ошибка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         ВыборкаОшибок.Ошибка,
			                         ТекстСообщения);
			
		КонецПопытки;
									
	КонецЦикла;	
	
	// Технические проекты
	
	ПолноеИмяОбъекта = "Справочник.ТехническиеПроекты";
	
	СписокТехПроектов = Новый Массив;
	
	ВыборкаОбъектовДляОбработки = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока ВыборкаОбъектовДляОбработки.Следующий() Цикл
		СписокТехПроектов.Добавить(ВыборкаОбъектовДляОбработки.Ссылка);
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТехническиеПроектыОбъектыМетаданных.Ссылка КАК ТехническийПроект,
	|	ТехническиеПроектыОбъектыМетаданных.Ссылка.Ветка КАК Ветка,
	|	ТехническиеПроектыОбъектыМетаданных.Гиперссылка КАК ОбъектМетаданных,
	|	НЕОПРЕДЕЛЕНО КАК ПодчиненныйОбъект,
	|	ТехническиеПроектыОбъектыМетаданных.ОписаниеИзменений КАК ОписаниеИзменений,
	|	ТехническиеПроектыОбъектыМетаданных.ОписаниеИзмененийИзОтчетаОСравнении КАК ПодробноеОписаниеИзменений
	|ИЗ
	|	Справочник.ТехническиеПроекты.УдалитьОбъектыМетаданных КАК ТехническиеПроектыОбъектыМетаданных
	|ГДЕ
	|	ТехническиеПроектыОбъектыМетаданных.Ссылка В(&СписокТехПроектов)
	|	И ТехническиеПроектыОбъектыМетаданных.Ссылка.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта)
	|ИТОГИ ПО
	|	ТехническийПроект"
	;
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокТехПроектов", СписокТехПроектов);
	
	ВыборкаТехПроектов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	Пока ВыборкаТехПроектов.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаТехПроектов.ТехническийПроект) Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			НачатьТранзакцию();
			
			ВыборкаДанныхТехПроектв = ВыборкаТехПроектов.Выбрать();
			
			ПеренестиИзмененияВВетку(ВыборкаДанныхТехПроектв);
			
			ЗафиксироватьТранзакцию();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаТехПроектов.ТехническийПроект);
			
		Исключение
			
			ОтменитьТранзакцию();
			
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
			
			ТекстСообщения = НСтр("ru = 'Не удалось перенести изменения %ИмяОбъекта%: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяОбъекта%", ПолноеИмяОбъекта);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаТехПроектов.ТехническийПроект);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         ВыборкаТехПроектов.ТехническийПроект,
			                         ТекстСообщения);
			
		КонецПопытки;
									
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = 
		Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "Справочник.Ошибки")
		И Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "Справочник.ТехническиеПроекты");
	
КонецПроцедуры

Процедура ПеренестиИзмененияВВетку(ВыборкаДанных)
	
	Пока ВыборкаДанных.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаДанных.Ветка) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.ИзмененияВВетках.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Ветка.Установить(ВыборкаДанных.Ветка, Истина);
		НаборЗаписей.Отбор.ОбъектМетаданных.Установить(ВыборкаДанных.ОбъектМетаданных, Истина);
		НаборЗаписей.Отбор.ПодчиненныйОбъект.Установить(ВыборкаДанных.ПодчиненныйОбъект, Истина);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ВыборкаДанных);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
