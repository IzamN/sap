#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УникальныйИдентификатор", Параметры.ИдентификаторПатча);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВерсииПатчей.Патч КАК Патч,
		|	ВерсииПатчей.Версия КАК Версия,
		|	ВерсииПатчей.НачальнаяСборка КАК НачальнаяСборка,
		|	ВерсииПатчей.КонечнаяСборка КАК КонечнаяСборка,
		|	ВерсииПатчей.ИзменяемыеМетаданные КАК ИзменяемыеМетаданные,
		|	ВерсииПатчей.Состояние КАК Состояние
		|ИЗ
		|	РегистрСведений.ВерсииПатчей КАК ВерсииПатчей
		|ГДЕ
		|	ВерсииПатчей.УникальныйИдентификатор = &УникальныйИдентификатор";
	Результат = Запрос.Выполнить().Выгрузить();
	СвойстваПатча = Результат[0];
	
	Версия = СвойстваПатча.Версия;
	Патч = СвойстваПатча.Патч;
	ИдентификаторПатча   = Параметры.ИдентификаторПатча;
	ИзменяемыеМетаданные = СвойстваПатча.ИзменяемыеМетаданные;
	Если ЗначениеЗаполнено(СвойстваПатча.НачальнаяСборка) Тогда
		НачальнаяСборка = СвойстваПатча.НачальнаяСборка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СвойстваПатча.КонечнаяСборка) Тогда
		КонечнаяСборка = СвойстваПатча.КонечнаяСборка;
	КонецЕсли;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Редактирование патча для ошибки ""%1""'"),
		Строка(Патч));
	
	ДанныеПатча = ПатчиСлужебный.ДвоичныеДанныеПатча(ИдентификаторПатча);
	Если ДанныеПатча = Неопределено Тогда
		Элементы.ФормаСохранитьСозданныйПатч.Видимость = Ложь;
	КонецЕсли;
	
	ПараметрыВыбора = Новый Массив;
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Владелец", Версия));
	ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Опубликована", Истина));
	Элементы.НачальнаяСборка.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	Элементы.КонечнаяСборка.ПараметрыВыбора  = Новый ФиксированныйМассив(ПараметрыВыбора);
	
	ПатчСоздан = Не (СвойстваПатча.Состояние = Перечисления.СтатусыПатчей.ОжиданиеИсправления
		Или СвойстваПатча.Состояние = Перечисления.СтатусыПатчей.СозданиеВручную
		Или СвойстваПатча.Состояние = Перечисления.СтатусыПатчей.СозданиеПатча
		Или ДанныеПатча = Неопределено);
	Элементы.ФормаСохранитьСозданныйПатч.Видимость = ПатчСоздан;
	Элементы.ФормаШаблонПатча.Видимость = Не ПатчСоздан;
	
	// Определение доступных режимов совместимости.
	ЗаполнитьРежимСовместимости();
	
	СозданиеВручную = (СвойстваПатча.Состояние = Перечисления.СтатусыПатчей.СозданиеВручную);
	Если СозданиеВручную Тогда
		Если Не Параметры.РедактированиеПатча Тогда
			Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаДействияСПатчем;
		КонецЕсли;
		Элементы.ДекорацияПояснение.Заголовок = НСтр("ru = '• сохранить шаблон патча по кнопке ""Шаблон патча для ручного создания..."";
			|• внести в него изменения по ошибке;
			|• не допускается редактировать свойства расширения и автоматически созданный макет патча;
			|• определить номер сборки, начиная с которой можно устанавливать патч, а также заполнить поле ""Конечная сборка"";
			|• указать режим совместимости для патча, он должен соответствовать минимальному режиму совместимости конфигурации.'");
		Элементы.ИзмененияНеТребуются.Видимость = Ложь;
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "СозданиеПатчаВручную");
	КонецЕсли;
	
	Если СозданиеВручную И Параметры.РедактированиеПатча Тогда
		Элементы.ВариантДополнить.Видимость = Ложь;
		Элементы.ВариантПрименимость.Видимость = Ложь;
		Варианты = "Пересоздать";
	ИначеЕсли Не СозданиеВручную Тогда
		Варианты = "Пересоздать";
		Элементы.ВариантПродолжитьВручную.Видимость = Ложь;
		СтандартныеПодсистемыСервер.УстановитьКлючНазначенияФормы(ЭтотОбъект, "РедактированиеПатча");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КонечнаяСборкаПриИзменении(Элемент)
	КонечнаяСборкаИзменялась = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьСозданныйПатч(Команда)
	ИнформацияОПатче = ИнформацияОПатче();
	ПолучитьФайл(ИнформацияОПатче.ДанныеПатча, ИнформацияОПатче.ИмяПатча, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьПатч(Команда)
	
	Если Не ЗначениеЗаполнено(НачальнаяСборка) Или Не ЗначениеЗаполнено(КонечнаяСборка) Тогда
		ТекстСообщения = НСтр("ru = 'Перед добавлением патча необходимо заполнить поля
			|""Начальная сборка"" и ""Конечная сборка"".'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПрикрепитьПатчПродолжение", ЭтотОбъект);
	НачатьПодключениеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Если Варианты <> "Пересоздать" И Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Варианты = "Пересоздать" Тогда
		ПересоздатьПатчНаСервере();
		Оповестить("Патчи_ИзменениеСтатуса");
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(АдресФайла) И Не ИзмененияНеТребуются Тогда
		ТекстПредупреждения = НСтр("ru = 'Не приложен файл с исправленным патчем.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ЗаписатьИЗакрытьНаСервере();
	Оповестить("Патчи_РучноеСоздание");
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПатча(Команда)
	Если Не ЗначениеЗаполнено(РежимСовместимости) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнено поле ""Режим совместимости"".'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ИнформацияОПатче = ИнформацияОПатчеПриПолученииШаблона();
	ФайловаяСистемаКлиент.СохранитьФайл(Неопределено, ИнформацияОПатче.ДанныеПатча, ИнформацияОПатче.ИмяПатча);
КонецПроцедуры

&НаКлиенте
Процедура КомандаДалее(Команда)
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаВариантыСоздания Тогда
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаДействияСПатчем;
	Иначе
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаВариантыСоздания;
	КонецЕсли;
	
	УстановитьСостояниеЭлементовФормы();
КонецПроцедуры

&НаКлиенте
Процедура ВариантыПриИзменении(Элемент)
	УстановитьСостояниеЭлементовФормы();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ИнформацияОПатче()
	ДанныеПатча = ПатчиСлужебный.ДвоичныеДанныеПатча(ИдентификаторПатча);
	НомерПатча = ПатчиСлужебный.НомерПатча(ИдентификаторПатча);
	ИмяПатча = ПатчиСлужебный.ИмяПатча(Патч);
	
	Результат = Новый Структура;
	Результат.Вставить("ДанныеПатча", ПоместитьВоВременноеХранилище(ДанныеПатча));
	Результат.Вставить("ИмяПатча", ИмяПатча);
	Возврат Результат;
КонецФункции

&НаСервере
Функция ИнформацияОПатчеПриПолученииШаблона()
	ДанныеПатча = ШаблонПатчаНаСервере();
	НомерПатча = ПатчиСлужебный.НомерПатча(ИдентификаторПатча);
	ИмяПатча = ПатчиСлужебный.ИмяПатча(Патч);
	
	Результат = Новый Структура;
	Результат.Вставить("ДанныеПатча", ПоместитьВоВременноеХранилище(ДанныеПатча));
	Результат.Вставить("ИмяПатча", ИмяПатча);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПрикрепитьПатчПродолжение(Подключено, ДополнительныеПараметры) Экспорт
	
	Если Подключено Тогда
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогВыбора = Новый ДиалогВыбораФайла(Режим);
		ДиалогВыбора.МножественныйВыбор = Ложь;
		ДиалогВыбора.Фильтр = НСтр("ru = 'Файл патча'") + "(*.cfe)|*.cfe";
		ОписаниеОповещения = Новый ОписаниеОповещения("ПрикрепитьПатчЗавершение", ЭтотОбъект);
		
		НачатьПомещениеФайлов(ОписаниеОповещения, , ДиалогВыбора, Истина, УникальныйИдентификатор);
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ПрикрепитьПатчПродолжениеПослеПомещенияФайла", ЭтотОбъект);
		НачатьПомещениеФайла(ОписаниеОповещения,,, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьПатчЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Адрес = Результат[0].Хранение;
	РезультатПроверки = ПроверкаПатча(Адрес);
	Если ЗначениеЗаполнено(РезультатПроверки) Тогда
		ПоказатьПредупреждение(, РезультатПроверки);
		Возврат;
	КонецЕсли;
	АдресФайла = Адрес;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьПатчПродолжениеПослеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПроверки = ПроверкаПатча(Адрес);
	Если ЗначениеЗаполнено(РезультатПроверки) Тогда
		ПоказатьПредупреждение(, РезультатПроверки);
		Возврат;
	КонецЕсли;
	АдресФайла = Адрес;
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИЗакрытьНаСервере()
	
	Если ИзмененияНеТребуются Тогда
		// выгрузить патч из архива
		ИнформацияОПатче = ИнформацияОПатче();
		Адрес = ИнформацияОПатче.ДанныеПатча;
		РезультатПроверки = ПроверкаПатча(Адрес);
		АдресФайла = Адрес;
		Если ЗначениеЗаполнено(РезультатПроверки) Тогда
			Сообщить(РезультатПроверки);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.Патчи");
		ЭлементБлокировкиДанных.УстановитьЗначение("Ссылка", Патч);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		Набор = РегистрыСведений.ВерсииПатчей.СоздатьНаборЗаписей();
		Набор.Отбор.Патч.Установить(Патч);
		Набор.Отбор.Версия.Установить(Версия);
		Набор.Отбор.УникальныйИдентификатор.Установить(ИдентификаторПатча);
		Набор.Прочитать();
		
		ВерсияПатча = Набор[0];
		ВерсияПатча.НачальнаяСборка = НачальнаяСборка;
		ВерсияПатча.КонечнаяСборка  = КонечнаяСборка;
		Если Не ИзмененияНеТребуются Или ВерсияПатча.Состояние <> Перечисления.СтатусыПатчей.СозданПроверен Тогда
			ВерсияПатча.Состояние = Перечисления.СтатусыПатчей.СозданНеПроверен;
		КонецЕсли;
		
		Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Патч, "Владелец");
		ЭтоКонфигурацияБазовая = ПатчиСлужебный.ЭтоКонфигурацияБазовая(Проект);
		
		Если ЭтоКонфигурацияБазовая Тогда
			ВременныйКаталог = ПолучитьИмяВременногоФайла("SignPatch");
			ПатчДляПодписания = ПолучитьИмяВременногоФайла("cfe");
			СоздатьКаталог(ВременныйКаталог);
			
			ИсходныйПатч = ПолучитьИзВременногоХранилища(АдресФайла);
			ИсходныйПатч.Записать(ПатчДляПодписания);
			
			УстановитьПривилегированныйРежим(Истина);
			ЗакрытыйКлюч = ПатчиСлужебный.ЗакрытыйКлючПроекта(Проект);
			УстановитьПривилегированныйРежим(Ложь);
			
			ПараметрыПодписи = Новый Структура;
			ПараметрыПодписи.Вставить("ПутьКПатчу", ПатчДляПодписания);
			ПараметрыПодписи.Вставить("ИмяПатча", ПатчиСлужебный.ИмяПатча(Патч, ПатчиСлужебный.НомерПатча(ИдентификаторПатча), Ложь));
			ПараметрыПодписи.Вставить("Версия", Версия);
			ПараметрыПодписи.Вставить("КаталогВременнойБазы", ВременныйКаталог);
			ПараметрыПодписи.Вставить("ПропуститьЗаменуИдентификатора");
			ПодписанныйПатч = ПатчиСлужебный.ПодписанныйПатч(ПараметрыПодписи, Ложь, ЗакрытыйКлюч);
			ДвоичныеДанные   = Новый ДвоичныеДанные(ПодписанныйПатч);
			
			ВерсияПатча.ДанныеПатча = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
			Попытка
				УдалитьФайлы(ВременныйКаталог);
				УдалитьФайлы(ПатчДляПодписания);
			Исключение
				// Обработка исключения не требуется, каталог будет удален средствами платформы.
			КонецПопытки;
		Иначе
			ВерсияПатча.ДанныеПатча = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресФайла), Новый СжатиеДанных(9));
		КонецЕсли;
		
		Если Не ПатчСоздан Тогда
			СвойстваПатча = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Патч, "ДатаСоздания,Описание");
			ВерсияПатча.ДатаИсправления = СвойстваПатча.ДатаСоздания;
			ВерсияПатча.Описание = СвойстваПатча.Описание;
			ВерсияПатча.РежимСовместимости = РежимСовместимости;
		ИначеЕсли КонечнаяСборкаИзменялась И ЗначениеЗаполнено(ВерсияПатча.КонечнаяСборкаПоХранилищу) Тогда
			НоваяКонечнаяСборка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КонечнаяСборка, "Код");
			ВерсияПатча.КонечнаяСборкаПоХранилищу = НоваяКонечнаяСборка;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НовыйРежимСовместимости) Тогда
			ВерсияПатча.РежимСовместимости = НовыйРежимСовместимости;
		КонецЕсли;
		
		Если Не ИзмененияНеТребуются Тогда
			ДополнитьИзменяемыеМетаданные(ВерсияПатча);
		КонецЕсли;
		
		Шаблон = НСтр("ru = '%1 - Патч изменен вручную пользователем %2'");
		ЗаписьЛога = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон,
			ТекущаяДатаСеанса(), Пользователи.ТекущийПользователь());
		
		ДополнительныеПараметры = ВерсияПатча.Параметры.Получить();
		ДополнительныеПараметры.Лог.Добавить(ЗаписьЛога);
		
		ВерсияПатча.Параметры = Новый ХранилищеЗначения(ДополнительныеПараметры);
		Если Не ЭтоКонфигурацияБазовая Тогда
			ПатчиСлужебный.ПодписатьПатчиДляБазовыхВерсий(ВерсияПатча, Версия, Патч, АдресФайла);
		КонецЕсли;
		
		Набор.Записать();
		
		// Сброс проверки патча, если было установлено.
		Если Не ИзмененияНеТребуются Тогда
			ПатчОбъект = Патч.ПолучитьОбъект();
			ОтборСтрок = Новый Структура;
			ОтборСтрок.Вставить("ВерсияПатча", Версия);
			НайденныеСтроки = ПатчОбъект.СостоянияПроверкиПатча.НайтиСтроки(ОтборСтрок);
			Для Каждого Строка Из НайденныеСтроки Цикл
				ПатчОбъект.СостоянияПроверкиПатча.Удалить(Строка);
			КонецЦикла;
			Если ПатчОбъект.СостоянияПроверкиПатча.Количество() = 0 Тогда
				ПатчОбъект.Проверяющий = Неопределено;
				ПатчОбъект.Аудитор = Неопределено;
			КонецЕсли;
			ПатчОбъект.Записать();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
	Модифицированность = Ложь;
КонецПроцедуры

&НаСервере
Функция ПроверкаПатча(Адрес)
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
	НомерПатча = ПатчиСлужебный.НомерПатча(ИдентификаторПатча);
	ИмяПатча = ПатчиСлужебный.ИмяПатча(Патч, НомерПатча, Ложь);
	
	Проект = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Версия, "Владелец");
	СвойстваПроекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Проект, "Библиотека,ИмяКонфигурации");
	ЭтоБиблиотека   = СвойстваПроекта.Библиотека;
	ИмяКонфигурации = ПатчиСлужебный.ИмяКонфигурации(СвойстваПроекта.ИмяКонфигурации);
	
	СвойстваВерсииПатча = ПатчиСлужебный.ЗначенияСвойствВерсииПатча(ИдентификаторПатча, "РазделПроекта,КонечнаяСборкаПоХранилищу,ДатаИсправления");
	
	РазделПроекта = СвойстваВерсииПатча.РазделПроекта;
	НачальнаяДата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НачальнаяСборка, "ДатаСборки");
	Если ЗначениеЗаполнено(СвойстваВерсииПатча.КонечнаяСборкаПоХранилищу) Тогда
		КонечнаяДата = СвойстваВерсииПатча.ДатаИсправления;
	Иначе
		КонечнаяДата  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КонечнаяСборка, "ДатаСборки");
	КонецЕсли;
	
	ПараметрыРасчета = ПатчиСлужебный.ПараметрыДляРасчетаРоднойПрименимости();
	ПараметрыРасчета.НачальнаяДата = НачальнаяДата;
	ПараметрыРасчета.КонечнаяДата  = КонечнаяДата;
	ПараметрыРасчета.Версия        = Версия;
	ПараметрыРасчета.РазделПроекта = РазделПроекта;
	ПараметрыРасчета.ЭтоБиблиотека = ЭтоБиблиотека;
	ПараметрыРасчета.КонечнаяСборкаПоХранилищу = СвойстваВерсииПатча.КонечнаяСборкаПоХранилищу;
	ИнформацияОПрименимости = ПатчиСлужебный.ПрименимостьДляРоднойКонфигурации(ПараметрыРасчета);
	
	ПараметрыДобавления = Новый Структура;
	ПараметрыДобавления.Вставить("ДвоичныеДанные",       ДвоичныеДанные);
	ПараметрыДобавления.Вставить("ИмяПатча",             ИмяПатча);
	ПараметрыДобавления.Вставить("ИмяКонфигурации",      ИмяКонфигурации);
	ПараметрыДобавления.Вставить("ПрименимДляСборок",    ИнформацияОПрименимости.Сборки);
	ПараметрыДобавления.Вставить("СвязанныеКонфигурации",ИнформацияОПрименимости.СвязанныеКонфигурации);
	ПараметрыДобавления.Вставить("КонечныеСборкиСвязанныхКонфигураций", ИнформацияОПрименимости.КонечныеСборкиСвязанныхКонфигураций);
	ПараметрыДобавления.Вставить("Версия",               Версия);
	ПараметрыДобавления.Вставить("ИдентификаторПатча",   ИдентификаторПатча);
	ПараметрыДобавления.Вставить("ДобавленВручную",      Не ИзмененияНеТребуются);
	ПараметрыДобавления.Вставить("РежимСовместимости",   РежимСовместимости);
	ПараметрыДобавления.Вставить("КонечнаяСборкаПоХранилищу", СвойстваВерсииПатча.КонечнаяСборкаПоХранилищу);
	Если Не ИзмененияНеТребуются Тогда
		ПараметрыДобавления.Вставить("ДвоичныеДанныеИсходные", ПатчиСлужебный.ДвоичныеДанныеПатча(ИдентификаторПатча));
		ПараметрыДобавления.Вставить("ПатчНеСоздан", Элементы.ФормаШаблонПатча.Видимость);
	КонецЕсли;
	
	// Проверка.
	УстановитьПривилегированныйРежим(Истина);
	Результат = ПатчиСлужебный.ПроверкаИДобавлениеПатча(ПараметрыДобавления);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ПараметрыДобавления.Свойство("НовыйРежимСовместимости") Тогда
		Если СтрРазделить(ПараметрыДобавления.НовыйРежимСовместимости, ".", Ложь).Количество() = 3 Тогда
			НовыйРежимСовместимости = ПараметрыДобавления.НовыйРежимСовместимости;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.ТекстОшибок) Тогда
		Возврат Результат.ТекстОшибок;
	КонецЕсли;
	
	ИзменяемыеМетодыВычисленное = СтрСоединить(Результат.ИзменяемыеМетоды, Символы.ПС);
	// Добавление.
	ПоместитьВоВременноеХранилище(Результат.ДанныеПатча, Адрес);
	
	Возврат "";
КонецФункции

&НаСервере
Функция ШаблонПатчаНаСервере()
	
	СвойстваПатча = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Патч, "Ошибка, Описание");
	Если ТипЗнч(СвойстваПатча.Ошибка) = Тип("Строка") Тогда
		ОписаниеПатча = СвойстваПатча.Описание;
	Иначе
		ОписаниеПатча = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СвойстваПатча.Ошибка, "ПубликуемоеОписание");
	КонецЕсли;
	
	НомерПатча = ПатчиСлужебный.НомерПатча(ИдентификаторПатча);
	
	ПередаваемыеПараметры = Новый Структура;
	ПередаваемыеПараметры.Вставить("Версия", Версия);
	ПередаваемыеПараметры.Вставить("НазваниеПатча", ПатчиСлужебный.ИмяПатча(Патч, НомерПатча, Ложь));
	ПередаваемыеПараметры.Вставить("УникальныйИдентификатор", ИдентификаторПатча);
	ПередаваемыеПараметры.Вставить("Описание", ОписаниеПатча);
	ПередаваемыеПараметры.Вставить("ИзменяемыеМетаданные", "");
	ПередаваемыеПараметры.Вставить("ИмяКонфигурации", "");
	ПередаваемыеПараметры.Вставить("ПрименимДляСборок", Новый Массив);
	ПередаваемыеПараметры.Вставить("СвязанныеКонфигурации", Новый Соответствие);
	ПередаваемыеПараметры.Вставить("РежимСовместимости", РежимСовместимости);
	ПередаваемыеПараметры.Вставить("КонечныеСборкиСвязанныхКонфигураций", Новый Соответствие);
	
	ПатчДляРучногоСоздания = ПатчиСлужебный.ПатчДляРучногоСоздания(ПередаваемыеПараметры);
	
	НаборЗаписей = РегистрыСведений.ВерсииПатчей.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Патч.Установить(Патч);
	НаборЗаписей.Отбор.Версия.Установить(Версия);
	НаборЗаписей.Отбор.УникальныйИдентификатор.Установить(ИдентификаторПатча);
	НаборЗаписей.Прочитать();
	
	ВерсияПатча = НаборЗаписей[0];
	ВерсияПатча.ДанныеПатча = Новый ХранилищеЗначения(ПатчДляРучногоСоздания, Новый СжатиеДанных(9));
	ВерсияПатча.РежимСовместимости = РежимСовместимости;
	НаборЗаписей.Записать();
	
	Возврат ПатчДляРучногоСоздания;
	
КонецФункции

&НаСервере
Процедура ДополнитьИзменяемыеМетаданные(ВерсияПатча)
	Исходное = СтрРазделить(ИзменяемыеМетаданные, Символы.ПС, Ложь);
	Вычисленное = СтрРазделить(ИзменяемыеМетодыВычисленное, Символы.ПС, Ложь);
	Результат = Новый Массив;
	Для Каждого ВычисленныйМетод Из Вычисленное Цикл
		Если СтрНайти(ИзменяемыеМетаданные, ВычисленныйМетод) > 0 Тогда
			// Данный метод уже описан.
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(ВычисленныйМетод);
	КонецЦикла;
	
	// Поиск удаленных методов.
	Для Каждого ИсходныйМетод Из Исходное Цикл
		ИсходныйМетодЧастями = СтрРазделить(ИсходныйМетод, " ");
		ПолноеИмяМетода = ИсходныйМетодЧастями[0];
		Если СтрНайти(ИзменяемыеМетодыВычисленное, ПолноеИмяМетода) = 0 Тогда
			// Метод удален при ручном редактировании.
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(ИсходныйМетод);
	КонецЦикла;
	
	ВерсияПатча.ИзменяемыеМетаданные = СтрСоединить(Результат, Символы.ПС);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРежимСовместимости()
	
	Если ПатчСоздан Тогда
		СвойстваПатча = ПатчиСлужебный.ЗначенияСвойствВерсииПатча(ИдентификаторПатча, "РежимСовместимости");
		Если ЗначениеЗаполнено(СвойстваПатча.РежимСовместимости) Тогда
			РежимСовместимости = СвойстваПатча.РежимСовместимости;
		КонецЕсли;
		Элементы.РежимСовместимости.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	КаталогПрограммы = Константы.ПутьКВерсиямПлатформыНаСервере.Получить();
	СписокДоступныхВерсийПлатформы = ОбщегоНазначенияСППР.СписокДоступныхВерсийПлатформы(КаталогПрограммы);
	
	Для Каждого СборкаПлатформы Из СписокДоступныхВерсийПлатформы Цикл
		ВерсияПлатформы = ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(СборкаПлатформы);
		Если ОбщегоНазначенияКлиентСервер.СравнитьВерсииБезНомераСборки(ВерсияПлатформы, "8.3.12") < 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Элементы.РежимСовместимости.СписокВыбора.НайтиПоЗначению(ВерсияПлатформы) = Неопределено Тогда
			Элементы.РежимСовместимости.СписокВыбора.Добавить(ВерсияПлатформы);
		КонецЕсли;
	КонецЦикла;
	
	СвойстваПатча = ПатчиСлужебный.ЗначенияСвойствВерсииПатча(ИдентификаторПатча, "РежимСовместимости");
	Если ЗначениеЗаполнено(СвойстваПатча.РежимСовместимости) Тогда
		РежимСовместимости = СвойстваПатча.РежимСовместимости;
		Возврат;
	КонецЕсли;
	
	ПлатформаИзВерсии = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Версия, "ВерсияПлатформы");
	Если Не ЗначениеЗаполнено(ПлатформаИзВерсии) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрРазделить(ПлатформаИзВерсии, ".").Количество() = 3 Тогда
		РежимСовместимости = ПлатформаИзВерсии;
	ИначеЕсли СтрРазделить(ПлатформаИзВерсии, ".").Количество() = 4 Тогда
		РежимСовместимости = ОбщегоНазначенияКлиентСервер.ВерсияКонфигурацииБезНомераСборки(СборкаПлатформы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСостояниеЭлементовФормы()
	ВыборВарианта = (Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаВариантыСоздания);
	
	Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаДействияСПатчем Тогда
		Элементы.ГруппаКомандыИПояснение.Видимость = (Варианты = "СоздатьВручную") Или (Варианты = "ПродолжитьВручную");
		Элементы.ИзмененияНеТребуются.Видимость    = (Варианты = "СоздатьВручную");
		
		ИзмененияНеТребуются = (Варианты = "ИзменитьПрименимость");
		Элементы.ФормаКомандаДалее.Заголовок = НСтр("ru = '< Назад'");
	Иначе
		Элементы.ФормаКомандаДалее.Заголовок = НСтр("ru = 'Далее >'");
	КонецЕсли;
	
	Элементы.ЗаписатьИЗакрыть.Видимость          = (Варианты = "Пересоздать") Или Не ВыборВарианта;
	Элементы.ФормаКомандаДалее.Видимость         = (Варианты <> "Пересоздать");
	Элементы.ЗаписатьИЗакрыть.КнопкаПоУмолчанию  = (Варианты = "Пересоздать") Или Не ВыборВарианта;
	Элементы.ФормаКомандаДалее.КнопкаПоУмолчанию = Не Элементы.ЗаписатьИЗакрыть.КнопкаПоУмолчанию;
	
КонецПроцедуры

&НаСервере
Процедура ПересоздатьПатчНаСервере()
	ПараметрыПатча = Новый Структура;
	ПараметрыПатча.Вставить("Патч", Патч);
	ПараметрыПатча.Вставить("Версия", Версия);
	ПараметрыПатча.Вставить("УникальныйИдентификатор", ИдентификаторПатча);
	
	ПатчиСлужебный.ПересоздатьПатч(ПараметрыПатча);
КонецПроцедуры

#КонецОбласти