#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	РедактируемыеРеквизиты = Новый Массив;
	
	РедактируемыеРеквизиты.Добавить("Ответственный");
	
	Возврат РедактируемыеРеквизиты;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Владелец.Владелец)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеЗаполненияВеткиИсточника(Параметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МакетыОбъектовМетаданных.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.МакетыОбъектовМетаданных КАК МакетыОбъектовМетаданных
	|ГДЕ
	|	МакетыОбъектовМетаданных.УдалитьТехническийПроектИсточник <> ЗНАЧЕНИЕ(Справочник.ТехническиеПроекты.ПустаяСсылка)
	|	И МакетыОбъектовМетаданных.УдалитьТехническийПроектИсточник.Ветка.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыВеток.ВеткаТехническогоПроекта)
	|	И МакетыОбъектовМетаданных.ВеткаИсточник = ЗНАЧЕНИЕ(Справочник.Ветки.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляЗаполненияВеткиИсточника(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.МакетыОбъектовМетаданных";
	
	СписокОбъектов = Новый Массив;
	
	ВыборкаОбъектовДляОбработки = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока ВыборкаОбъектовДляОбработки.Следующий() Цикл
		СписокОбъектов.Добавить(ВыборкаОбъектовДляОбработки.Ссылка);
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МакетыОбъектовМетаданных.Ссылка КАК Ссылка,
	|	МакетыОбъектовМетаданных.УдалитьТехническийПроектИсточник.Ветка КАК ВеткаИсточник
	|ИЗ
	|	Справочник.МакетыОбъектовМетаданных КАК МакетыОбъектовМетаданных
	|ГДЕ
	|	МакетыОбъектовМетаданных.Ссылка В(&СписокОбъектов)"
	;
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОбъектов", СписокОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Попытка
			
			НачатьТранзакцию();
						
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если Объект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект.ВеткаИсточник) Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Объект);
			Иначе
				Объект.ВеткаИсточник = Выборка.ВеткаИсточник;
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			
		Исключение
			
			ОтменитьТранзакцию();
			
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
			
			ТекстСообщения = НСтр("ru = 'Не удалось указать ветку-источник для объекта %ИмяОбъекта%: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяОбъекта%", ПолноеИмяОбъекта);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         Выборка.Ссылка,
			                         ТекстСообщения);
			
		КонецПопытки;
									
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = 
		Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
