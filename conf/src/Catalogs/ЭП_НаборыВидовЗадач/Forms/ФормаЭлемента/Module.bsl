#Область ПерезаполнениеВидовЗадач

&НаСервере
Процедура ПерезаполнитьВидыЗадачиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ВидыЗадачи.Ссылка КАК ВидЗадачи
		|ИЗ
		|	Справочник.ЭП_ВидыЗадачи КАК ЭП_ВидыЗадачи
		|ГДЕ
		|	ЭП_ВидыЗадачи.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
	РезультатЗапроса = Запрос.Выполнить();
	Объект.ВидыЗадач.Очистить();
	Объект.ВидыЗадач.Загрузить(РезультатЗапроса.Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьВидыЗадачи(Команда) 
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, "Вы уверены что хотите перезаписать заполненные данные?", Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры)  Экспорт
	Если  Результат = КодВозвратаДиалога.Да Тогда
		ПерезаполнитьВидыЗадачиНаСервере();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыВидыЗадач

&НаКлиенте
Процедура ВидыЗадачВидЗадачиСоздание(Элемент, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;
	ДополнительныеПараметры = Новый Структура("НеДобавлятьВидЗадачиВНабор", Истина);
	ДополнительныеПараметры.Вставить("Владелец", Объект.Владелец);
	ДополнительныеПараметры.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("Справочник.ЭП_ВидыЗадачи.Форма.ФормаЭлемента", ДополнительныеПараметры, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыЗадачВидЗадачиНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;  
	ДополнительныеПараметры = Новый Структура("НеДобавлятьВидЗадачиВНабор", Истина);
	ЗначениеОтбора = Новый Структура("Владелец", Объект.Владелец);
	ДополнительныеПараметры.Вставить("Отбор", ЗначениеОтбора);
	ДополнительныеПараметры.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.ЭП_ВидыЗадачи.Форма.ФормаВыбора", ДополнительныеПараметры,
					ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
					
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПараметрыОтбора = Новый Структура("ВидЗадачи", ВыбранноеЗначение); 
	 
	Если Объект.ВидыЗадач.НайтиСтроки(ПараметрыОтбора).Количество() = 0 Тогда 
		Элементы.ВидыЗадач.ТекущиеДанные.ВидЗадачи = ВыбранноеЗначение; 
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю("Выбранный элемент уже находится в таблице выбранных видов задач");	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидыЗадачВидЗадачиПриИзменении(Элемент)
	ПараметрыОтбора = Новый Структура("ВидЗадачи", Элементы.ВидыЗадач.ТекущиеДанные.ВидЗадачи); 
	 
	Если Объект.ВидыЗадач.НайтиСтроки(ПараметрыОтбора).Количество() <> 0 И Объект.ВидыЗадач.Количество() > 1 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Выбранный элемент уже находится в таблице выбранных видов задач");	
		Элементы.ВидыЗадач.ТекущиеДанные.ВидЗадачи = ПредопределенноеЗначение("Справочник.ЭП_ВидыЗадачи.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти