#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция ОсновнойВидСогласуемогоРесурса() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыСогласуемыхРесурсов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыСогласуемыхРесурсов КАК ВидыСогласуемыхРесурсов
	|ГДЕ
	|	ВидыСогласуемыхРесурсов.Основной";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если  Выборка.Следующий() Тогда
	
		Возврат Выборка.Ссылка;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ЕдинственныйВидРесурса() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 2
	|	ВидыСогласуемыхРесурсов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыСогласуемыхРесурсов КАК ВидыСогласуемыхРесурсов
	|ГДЕ
	|	НЕ ВидыСогласуемыхРесурсов.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ВидРесурсаПоУмолчанию() Экспорт
	
	ОсновнойВидРесурса = ОсновнойВидСогласуемогоРесурса();
	
	Если ОсновнойВидРесурса <> Неопределено Тогда
		
		Возврат ОсновнойВидРесурса;
		
	КонецЕсли;
	
	Возврат ЕдинственныйВидРесурса();
	
КонецФункции

Функция ПредставлениеВидаРесурса(ВидРесурса) Экспорт
	
	ПредставлениеВида = "";
	
	Если Не ЗначениеЗаполнено(ВидРесурса) Тогда
		Возврат ПредставлениеВида;
	КонецЕсли;
	
	РеквизитыВида = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидРесурса, "Наименование, ЕдиницаИзмерения");
	
	Возврат ЗадачиПроцессовКлиентСервер.ПредставлениеВидаРесурса(РеквизитыВида.Наименование, РеквизитыВида.ЕдиницаИзмерения);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыСогласуемыхРесурсов.Ссылка                                   КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НастройкиСогласованияРесурсов.Пользователь) КАК КоличествоНастроек
	|ИЗ
	|	Справочник.ВидыСогласуемыхРесурсов КАК ВидыСогласуемыхРесурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСогласованияРесурсов КАК НастройкиСогласованияРесурсов
	|		ПО (НастройкиСогласованияРесурсов.ВидСогласуемогоРесурса = ВидыСогласуемыхРесурсов.Ссылка)
	|ГДЕ
	|	НЕ ВидыСогласуемыхРесурсов.ВыполняетсяСогласование
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыСогласуемыхРесурсов.Ссылка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НастройкиСогласованияРесурсов.Пользователь) > 0";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляУстановкиПризнакаВедетсяСогласование(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.ВидыСогласуемыхРесурсов";
	
	ЭлементыДляОбработки = Новый Массив;
	
	ВыборкаОбъектовДляОбработки = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока ВыборкаОбъектовДляОбработки.Следующий() Цикл
		ЭлементыДляОбработки.Добавить(ВыборкаОбъектовДляОбработки.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВидыСогласуемыхРесурсов.Ссылка                                   КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НастройкиСогласованияРесурсов.Пользователь) КАК КоличествоНастроек,
	|	ВидыСогласуемыхРесурсов.ВыполняетсяСогласование                  КАК ВыполняетсяСогласование
	|ИЗ
	|	Справочник.ВидыСогласуемыхРесурсов КАК ВидыСогласуемыхРесурсов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСогласованияРесурсов КАК НастройкиСогласованияРесурсов
	|		ПО (НастройкиСогласованияРесурсов.ВидСогласуемогоРесурса = ВидыСогласуемыхРесурсов.Ссылка)
	|ГДЕ
	|	ВидыСогласуемыхРесурсов.Ссылка В(&ЭлементыДляОбработки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыСогласуемыхРесурсов.Ссылка,
	|	ВидыСогласуемыхРесурсов.ВыполняетсяСогласование";

	Запрос.УстановитьПараметр("ЭлементыДляОбработки", ЭлементыДляОбработки);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ВыполняетсяСогласование Тогда
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			Продолжить;
		
		КонецЕсли;
			
		Если Выборка.КоличествоНастроек = 0 Тогда
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			Продолжить;
			
		КонецЕсли;
		
		Попытка
			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			Если СправочникОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
			КонецЕсли;
			
			СправочникОбъект.ВыполняетсяСогласование = Истина;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось установить признак выполняется согласование для объекта %1 по причине: %2'"),
			                           Выборка.Ссылка,
			                           ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         Выборка.Ссылка,
			                         ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = 
		Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли 

