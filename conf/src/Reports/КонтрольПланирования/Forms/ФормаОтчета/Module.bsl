
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьДанныеФормы();
	ОбработатьПереданныеПараметры(); 
	СформироватьПредставлениеОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если СформироватьПриОткрытии Тогда
		
		Если Не ЗначениеЗаполнено(ПланЗанятости) 
			Или Не ЗначениеЗаполнено(ПериодОтчета) Тогда
			
			ОпределитьПараметрыФормированияПоУмолчанию();
			
		КонецЕсли;
		
		СформироватьОтчетНаКлиенте();
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НЕАКТУАЛЬНОСТЬ");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)

	Если Параметры.КлючНазначенияИспользования = "ИзРабочегоМестаПланЗанятости" Тогда
		
		Настройки.Удалить("ПланЗанятости");
		
		СохраненныйПериодОтчета = Настройки.Получить("ПериодОтчета");
		Если СохраненныйПериодОтчета <> Неопределено
			И СохраненныйПериодОтчета.ДатаНачала <> Дата(1,1,1) Тогда
			ПериодОтчета.ДатаНачала = СохраненныйПериодОтчета.ДатаНачала;
		КонецЕсли;
		
		Настройки.Удалить("ПериодОтчета");
		
	Иначе
		
		ПланЗанятости = Настройки.Получить("ПланЗанятости");
		Настройки.Удалить("ПланЗанятости");
		
		ПериодОтчета = Настройки.Получить("ПериодОтчета");
		Настройки.Удалить("ПериодОтчета");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = ПериодОтчета;
	Диалог.Показать(ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	ОчиститьСообщения();
	СформироватьОтчетНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ПланЗанятостиПриИзменении(Элемент)
	
	ПриИзмененииВидаПланаНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланЗанятостиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураБыстрогоОтбора = Новый Структура;
	СтруктураБыстрогоОтбора.Вставить("Статус", ПредопределенноеЗначение("Перечисление.СтатусыВидовПланов.Действует"));
	СтруктураБыстрогоОтбора.Вставить("ПоказыватьВидыПланов", "УчастникИлиВладелец");
	СтруктураБыстрогоОтбора.Вставить("ТипПлана", ПредопределенноеЗначение("Перечисление.ТипыПланов.Занятости"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	ОповещениеПослеВыбораПлана = Новый ОписаниеОповещения("ПослеВыбораПланаЗанятости", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ВидыПланов.ФормаВыбора",
	             ПараметрыФормы,
	             ЭтотОбъект,,,, 
	             ОповещениеПослеВыбораПлана, 
	             РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеАктуальность");
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеАктуальность");
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОтбораОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПодборТехПроектов" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОтборТехническиеПроекты", ОтборПоТехническимПроектам);
		
		ОповещениеПослеЗакрытияПодбора = Новый ОписаниеОповещения("ПослеЗакрытияОтбораТехническиеПроекты", ЭтотОбъект);
		ОткрытьФорму("Обработка.Планирование.Форма.ПодборТехническихПроектовПланЗанятости", ПараметрыФормы, ЭтотОбъект,,,,
		             ОповещениеПослеЗакрытияПодбора,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПодборСотрудников" Тогда
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("СписокУчастников", УчастникиВидаПлана);
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПослеЗакрытияВыбораУчастников", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.Планирование.Форма.ОтборПоГруппаРазработки", ПараметрыОткрытия, 
		              ЭтотОбъект,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьОтчетНаКлиенте()
	
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "ФОРМИРОВАНИЕОТЧЕТА");
	
	ПараметрыФормирования = ПланированиеКлиентСервер.НовыйПараметрыФормированияОтчетаКонтрольПланирования();
	
	ПараметрыФормирования.ВариантГруппировки         = ВариантГруппировки;
	ПараметрыФормирования.ПланЗанятости              = ПланЗанятости;
	ПараметрыФормирования.ПериодОтчета               = ПериодОтчета;
	ПараметрыФормирования.ОтборПоУчастникам          = ОтборПоУчастникамВидаПлана;
	ПараметрыФормирования.ОтборПоТехническимПроектам = ОтборПоТехническимПроектам;
	
	ДлительнаяОперация = ДлительнаяОперацияФормированиеОтчета(ПараметрыФормирования, УникальныйИдентификатор);
	
	ДополнительныеПараметры = Новый Структура;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ВывестиПолученныеДанныеВТабличныйДокумент(ДлительнаяОперация, ДополнительныеПараметры);
		
	ИначеЕсли ДлительнаяОперация.Статус = "Выполняется" Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "ФОРМИРОВАНИЕОТЧЕТА");
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ФормированиеОтчетаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиПолученныеДанныеВТабличныйДокумент(Результат, ДополнительныеПараметры)
	
	Если Не ЭтоАдресВременногоХранилища(Результат.АдресРезультата) Тогда 
		Возврат;
	КонецЕсли;
	
	РезультатФормированияОтчета = ДанныеВременногоХранилища(Результат.АдресРезультата);
	
	Если РезультатФормированияОтчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатФормированияОтчета.Успешно Тогда
		ТабличныйДокументОтчета = РезультатФормированияОтчета.ТабличныйДокумент;
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НЕИСПОЛЬЗОВАТЬ");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НЕАКТУАЛЬНОСТЬ");
		Для Каждого СообщениеОбОшибке Из РезультатФормированияОтчета.СообщенияОбОшибках Цикл
			 ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке.ТекстОшибки , , СообщениеОбОшибке.ИмяРеквизита);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеВременногоХранилища(АдресВременногоХранилища)
	
	Возврат ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
КонецФункции

&НаКлиенте
Процедура ФормированиеОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		ВывестиПолученныеДанныеВТабличныйДокумент(Результат, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДлительнаяОперацияФормированиеОтчета(ПараметрыФормирования, УникальныйИдентификатор)
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ПараметрыФормирования", ПараметрыФормирования);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование отчета ""Контроль планирования""'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне("Отчеты.КонтрольПланирования.СформироватьОтчет",
		                                                    ПараметрыПроцедуры, ПараметрыВыполнения);
	Возврат ДлительнаяОперация;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если Не ТипЗнч(РезультатВыбора) = Тип("СтандартныйПериод") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПериодОтчета, РезультатВыбора);
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеАктуальность");

КонецПроцедуры

&НаСервере
Процедура ОбработатьПереданныеПараметры()

	Если ЗначениеЗаполнено(Параметры.ВариантГруппировки) Тогда
		ВариантГруппировки = Параметры.ВариантГруппировки;
	Иначе
		ВариантГруппировки = "ОтСотрудников";
	КонецЕсли;
	
	ПланЗанятости = Параметры.ПланЗанятости;
	
	ЗаполнитьЗначенияСвойств(ПериодОтчета, Параметры.ПериодОтчета);
	ОтборПоУчастникамВидаПлана = Параметры.ОтборПоУчастникам.Скопировать();
	ОтборПоТехническимПроектам = Параметры.ОтборПоТехническимПроектам;
	СформироватьПриОткрытии    = Параметры.СформироватьПриОткрытии;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПланаЗанятости(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПланЗанятости = Результат;
		
	ПриИзмененииВидаПланаНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВидаПланаНаКлиенте()

	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НеАктуальность");

	Если ВариантГруппировки = "ОтСотрудников" Тогда
		
		СформироватьПредставлениеОтбора();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанныеФормы()
	
	ЦветТекстаГиперссылки = ЦветаСтиля.ЦветГиперссылкиЗадачи;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПредставлениеОтбора()

	Если ВариантГруппировки = "ОтСотрудников" Тогда
		
		ДанныеВидаПлана = Справочники.ВидыПланов.ДанныеВидаПлана(ПланЗанятости);
	
		УчастникиВидаПлана.Очистить();
		
		Для Каждого УчастникВидаПлана Из ДанныеВидаПлана.Участники Цикл
			
			ЭлементСписка = УчастникиВидаПлана.Добавить(УчастникВидаПлана);
			
			Если ОтборПоУчастникамВидаПлана.НайтиПоЗначению(УчастникВидаПлана) <> Неопределено Тогда
				ЭлементСписка.Пометка = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		ПодразделенияСотрудники = Планирование.НовыйДеревоПодразделенияСотрудники();
		Планирование.СформироватьПредставлениеОтображаемыхУчастниковПланаНаСервере(ЭтотОбъект, "ПредставлениеОтбора", ПодразделенияСотрудники);
		
	ИначеЕсли ВариантГруппировки = "ОтТехПроектов" Тогда
		
		ПланированиеКлиентСервер.СформироватьПредставлениеОтображаемыхТехПроектов(ОтборПоТехническимПроектам, Элементы.ПредставлениеОтбора, ЦветТекстаГиперссылки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияОтбораТехническиеПроекты(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПланированиеКлиентСервер.СпискиЗначенийИдентичны(Результат, ОтборПоТехническимПроектам) Тогда
		Возврат;
	КонецЕсли;
	
	ОтборПоТехническимПроектам = Результат;
	
	ПланированиеКлиентСервер.СформироватьПредставлениеОтображаемыхТехПроектов(ОтборПоТехническимПроектам, Элементы.ПредставлениеОтбора, ЦветТекстаГиперссылки);
	ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НЕАКТУАЛЬНОСТЬ");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВыбораУчастников(Результат, ДополнительныеПараметры) Экспорт
	
	Если ПланированиеКлиент.ЕстьИзмененияПослеВыбораУчастников(ЭтотОбъект, Результат, "ПредставлениеОтбора") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСостояниеПоляТабличногоДокумента(Элементы.Результат, "НЕАКТУАЛЬНОСТЬ");
		
		ОтборПоУчастникамВидаПлана.Очистить();
		Для Каждого ЭлементСписка Из УчастникиВидаПлана Цикл
			Если ЭлементСписка.Пометка Тогда
				ОтборПоУчастникамВидаПлана.Добавить(ЭлементСписка.Значение); 
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПараметрыФормированияПоУмолчанию()

	Если Не ЗначениеЗаполнено(ПланЗанятости) Тогда
		
		ПланЗанятости = Справочники.ВидыПланов.ВидПланаПользователяПоУмолчанию(Пользователи.ТекущийПользователь(),
		                                                                       Перечисления.ТипыПланов.Занятости);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПланЗанятости)
		И Не ЗначениеЗаполнено(ПериодОтчета) Тогда
		
		ДанныеПланаЗанятости = Справочники.ВидыПланов.ДанныеВидаПлана(ПланЗанятости);
		
		ПараметрыПолученияПлановПоПериоду = Справочники.ВидыПланов.НовыйПараметрыПолученияДанныхПлановПоПериоду();
		ПараметрыПолученияПлановПоПериоду.ВидПлана              = ПланЗанятости;
		ПараметрыПолученияПлановПоПериоду.ДатаНачала            = ТекущаяДатаСеанса();
		ПараметрыПолученияПлановПоПериоду.НастройкиПланирования = ДанныеПланаЗанятости.ВсеНастройкиПланирования[0];
		ПараметрыПолученияПлановПоПериоду.КоличествоПериодов    = 5;
		
		ТаблицаПланов = Справочники.ВидыПланов.ДанныеПлановПоЗаданномуПериоду(ПараметрыПолученияПлановПоПериоду);
		
		ПериодОтчета = Справочники.ВидыПланов.ПериодПлановПоТаблицеПланов(ТаблицаПланов);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


