
&НаСервере
Процедура РезультатОбработкаРасшифровкиНаСервере(Сотрудник)
	
	ПараметрДанных = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период");
	Если НЕ ПараметрДанных = Неопределено Тогда
		ПараметрПользовательскойНастройки = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			ПараметрНачалоПериода = ПараметрПользовательскойНастройки.Значение.Дата;
			
		Иначе
			
			Возврат;
			
		КонецЕсли;
			
	Иначе
		
		Возврат;	
		
	КонецЕсли;
	
	ПериодОценивания = НачалоМесяца(ПараметрНачалоПериода);
	
	ТаблицаДанных = ПолучитьТаблицуДанных(ПериодОценивания, Сотрудник);
		
	ОбъектОтчет = РеквизитФормыВЗначение("Отчет");

	СхемаРасшифровки = ОбъектОтчет.ПолучитьМакет("СхемаРасшифровка");  
	
	НастройкиОСКД = СхемаРасшифровки.НастройкиПоУмолчанию;
		
	ПараметрыДанныхОСКД = НастройкиОСКД.ПараметрыДанных.Элементы;
	
	ЭлементНачалоПериода = ПараметрыДанныхОСКД.Найти("ПериодОценивания");
	
	ЭлементНачалоПериода.Использование = Истина;
	
	ЭлементНачалоПериода.Значение = ПериодОценивания;
	
	ЭлементКонецПериода = ПараметрыДанныхОСКД.Найти("Сотрудник");
	
	ЭлементКонецПериода.Использование = Истина;
	
	ЭлементКонецПериода.Значение = Сотрудник;
	
	КомпоновщикМакетаОСКД = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	Макет = КомпоновщикМакетаОСКД.Выполнить(СхемаРасшифровки, НастройкиОСКД);
	
	ПроцессорКомпоновкиОСКД = Новый ПроцессорКомпоновкиДанных;
	
	ПроцессорКомпоновкиОСКД.Инициализировать(Макет);
	
	РезультатРасшифровка.Очистить();
	
	ПроцессорВыводаОСКД = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ПроцессорВыводаОСКД.УстановитьДокумент(РезультатРасшифровка);
	
	ПроцессорВыводаОСКД.Вывести(ПроцессорКомпоновкиОСКД);	
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)	
	
	Если НЕ ТипЗнч(Расшифровка) = Тип("СправочникСсылка.ЭП_Сотрудники") Тогда
		ПолеРасшифровки = ПолучитьРасшифровкуНаСервере(Расшифровка);	
		Если ПолеРасшифровки.ЗаголовокПоля = "Значение" Тогда
			СтандартнаяОбработка = Ложь;
			РезультатОбработкаРасшифровкиНаСервере(ПолеРасшифровки.Ссылка);
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаРасшифровка;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТаблицуДанных(ПериодОценивания, ТекСотрудник)
	
    Отбор = Новый Структура("Сотрудник", ТекСотрудник);
	ПромежуточныйРезультат = Отчеты.ЭП_РасчетРезультативности.ПолучитьРасчетРезультативности(ПериодОценивания, Отбор);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_ЭффективностьСотрудников.ПрофильРасчета КАК ПрофильРасчета,
	               |	ЭП_ЭффективностьСотрудников.Показатель КАК Показатель,
	               |	ЭП_ЭффективностьСотрудников.Значение КАК Значение,
	               |	ЭП_ЭффективностьСотрудников.Комментарий КАК Комментарий
	               |ИЗ
	               |	РегистрСведений.ЭП_ЭффективностьСотрудников КАК ЭП_ЭффективностьСотрудников
	               |ГДЕ
	               |	ЭП_ЭффективностьСотрудников.Сотрудник = &Сотрудник
	               |	И ЭП_ЭффективностьСотрудников.ПериодОценивания = &ПериодОценивания
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПрофильРасчета";
	Запрос.УстановитьПараметр("Сотрудник", ТекСотрудник);
	Запрос.УстановитьПараметр("ПериодОценивания", ПериодОценивания);
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();	
	Возврат ТаблицаДанных;
	
КонецФункции 

&НаСервере
Функция ПолучитьРасшифровкуНаСервере(Расшифровка)

	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	Поля = Данные.Элементы.Получить(Расшифровка).ПолучитьПоля();

	ИндексТекущегоЭлемента = Число(Расшифровка); 
	
	Пока ИндексТекущегоЭлемента > 0 Цикл
		Поле = Данные.Элементы[ИндексТекущегоЭлемента].ПолучитьПоля();
		Если Поле[0].Поле = "ТабельныйНомер" Тогда
			Ссылка = Поле[0].Значение;
			Прервать;
		КонецЕсли;
		ИндексТекущегоЭлемента = ИндексТекущегоЭлемента-1;
	КонецЦикла;
	
	СсылкаСотрудника = Новый Структура;
	СсылкаСотрудника.Вставить("Ссылка", Ссылка);
	СсылкаСотрудника.Вставить("ЗаголовокПоля", Поля[0].Поле);
	Возврат СсылкаСотрудника;
	
КонецФункции
