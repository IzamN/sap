
Функция ПолучитьРасчетРезультативности(ПериодОценивания, Отбор = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СхемаКомпоновки = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	
	УстановитьПараметрДанных(КомпоновщикНастроек, "ПериодОценивания", ПериодОценивания);
	УстановитьПараметрДанных(КомпоновщикНастроек, "ПолныеПрава", Истина);

	
	КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	Если Отбор <> Неопределено Тогда
		Для Каждого ЭлементОтбора Из Отбор Цикл
			УстановитьОтборКомпоновки(КомпоновщикНастроек, ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
		КонецЦикла;
	КонецЕсли;
	
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновки, КомпоновщикНастроек.ПолучитьНастройки(),,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	//Компоновка данных 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,, Истина, Ложь);
		
	//Вывод результата 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	Результат = Новый ДеревоЗначений;
 	ПроцессорВывода.УстановитьОбъект(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат Результат;
	
КонецФункции

Процедура УстановитьПараметрДанных(КомпоновщикНастроек, ИмяПараметра, Значение)
	
	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	ЗначениеПараметра = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки);
	ЗначениеПараметра.Значение = Значение;
	ЗначениеПараметра.Использование = Истина;

КонецПроцедуры

Процедура УстановитьОтборКомпоновки(КомпоновщикНастроек, ИмяЭлемента, Значение)
	
	ЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяЭлемента);
	ЭлементОтбора.ПравоеЗначение = Значение;
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		Элементотбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	Иначе
		Элементотбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	
КонецПроцедуры


