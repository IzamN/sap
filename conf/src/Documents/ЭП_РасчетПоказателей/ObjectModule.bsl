#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
	
		Возврат;		
	
	КонецЕсли;
	
	Если Дата < Дата(2024,1,1) Тогда
		
		ОбщегоНазначения.СообщитьПользователю("Период 2023 года закрыт");
		Отказ = Истина;		
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.РасчетныйПрофиль КАК РасчетныйПрофиль,
	|	ПРЕДСТАВЛЕНИЕ(ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.РасчетныйПрофиль) КАК РасчетныйПрофильПредставление
	|ИЗ
	|	РегистрСведений.ЭП_ДатыЗакрытияРедактированияПоказателей.СрезПоследних(, РасчетныйПрофиль В (&МассивПрофилей)) КАК ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних
	|ГДЕ
	|	ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Период >= &Период
	|	И НЕ ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Регистратор = &Регистратор";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("МассивПрофилей", РасчетныеПрофили.ВыгрузитьКолонку("РасчетныйПрофиль"));
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Дата));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Невозможно провести документ, так как расчет выполнялся ранее по следующим расчетным профилям: ";        
		Сообщение.Сообщить();                                                                                               
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = Выборка.РасчетныйПрофильПредставление;        
			Сообщение.Сообщить();			
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ДатыЗакрытияРедактированияПроектныхПоказателейСрезПоследних.Показатель КАК Показатель,
	|	ПРЕДСТАВЛЕНИЕ(ЭП_ДатыЗакрытияРедактированияПроектныхПоказателейСрезПоследних.Показатель) КАК ПоказательПредставление
	|ИЗ
	|	РегистрСведений.ЭП_ДатыЗакрытияРедактированияПроектныхПоказателей.СрезПоследних(
	|			,
	|			Показатель В (&МассивПоказателей)
	|				И НЕ Регистратор = &Регистратор) КАК ЭП_ДатыЗакрытияРедактированияПроектныхПоказателейСрезПоследних
	|ГДЕ
	|	ЭП_ДатыЗакрытияРедактированияПроектныхПоказателейСрезПоследних.Период >= &Период";
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("МассивПоказателей", ПроектныеПоказатели.ВыгрузитьКолонку("Показатель"));
	Запрос.УстановитьПараметр("Период", НачалоМесяца(Дата));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Невозможно провести документ, так как расчет выполнялся ранее по следующим проектным показателям: ";        
		Сообщение.Сообщить();                                                                                               
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = Выборка.ПоказательПредставление;        
			Сообщение.Сообщить();			
			
		КонецЦикла;
		
	КонецЕсли;
	
	// регистр ЭП_РассчитанныеКоэффициентыПоСотрудникам
	Движения.ЭП_РассчитанныеКоэффициентыПоСотрудникам.Записывать = Истина;
	Для Каждого ТекСтрокаРассчитанныеКоэффициенты Из ИтоговоеЗначениеПЗКГруп Цикл
		Движение = Движения.ЭП_РассчитанныеКоэффициентыПоСотрудникам.Добавить();
		Движение.Период = Дата;                                          
		Движение.ГруппаРасчетныхПрофилей = ГруппаРасчетныхПрофилей;
		Движение.Сотрудник = ТекСтрокаРассчитанныеКоэффициенты.Сотрудник;
		Движение.Значение = ТекСтрокаРассчитанныеКоэффициенты.Значение;
	КонецЦикла;
	
	// регистр ЭП_ДатыЗакрытияРедактированияПоказателей 
	Движения.ЭП_ДатыЗакрытияРедактированияПоказателей.Записывать = Истина;
	Если ЗакрыватьПериод Тогда
		
		Для Каждого ТекСтрокаРасчетныеПрофили Из РасчетныеПрофили Цикл
			Движение = Движения.ЭП_ДатыЗакрытияРедактированияПоказателей.Добавить();
			Движение.Период = Дата;
			Движение.РасчетныйПрофиль = ТекСтрокаРасчетныеПрофили.РасчетныйПрофиль;
		КонецЦикла; 
		
	КонецЕсли;
	
	// регистр ЭП_РассчитанныеКоэффициентыПоПроектам
	Движения.ЭП_РассчитанныеКоэффициентыПоПроектам.Записывать = Истина;
	// регистр ЭП_ДатыЗакрытияРедактированияПроектныхПоказателей
	Для каждого ТекСтрокаПроектныеПоказатели Из ПроектныеПоказатели Цикл
		Движение = Движения.ЭП_РассчитанныеКоэффициентыПоПроектам.Добавить();
		Движение.Период = Дата;
		Движение.Показатель = ТекСтрокаПроектныеПоказатели.Показатель;
		Движение.Проект = ТекСтрокаПроектныеПоказатели.Проект;
		Движение.Значение = ТекСтрокаПроектныеПоказатели.Значение;
		
	КонецЦикла;
	
	// регистр ЭП_ИтоговыеПоказателиСотрудниковПоПроектам
	Движения.ЭП_ИтоговыеПоказателиСотрудниковПоПроектам.Записывать = Истина;
	Для Каждого ТекСтрокаИтогиПЗК Из ИтогиПЗК Цикл
		Движение = Движения.ЭП_ИтоговыеПоказателиСотрудниковПоПроектам.Добавить();
		Движение.Период = Дата;
		Движение.ГруппаПрофилей = ГруппаРасчетныхПрофилей;
		Движение.Проект = ТекСтрокаИтогиПЗК.Проект;
		Движение.Сотрудник = ТекСтрокаИтогиПЗК.Сотрудник;
		Движение.Значение = ТекСтрокаИтогиПЗК.Значение;
		Движение.КоэффициентЗагрузки = ТекСтрокаИтогиПЗК.КоэффициентЗагрузки;
	КонецЦикла;
	
	// регистр ЭП_УчетПремий
	Движения.ЭП_УчетПремий.Записывать = Истина;
	Для Каждого ТекСтрокаНачислениеПремий Из НачислениеПремий Цикл
		Если ТекСтрокаНачислениеПремий.ОстатокПЗК = 0 И ТекСтрокаНачислениеПремий.ПремияПоЭтапу = 0 И ТекСтрокаНачислениеПремий.ПроектнаяПремия = 0 Тогда
		
			Продолжить;
		
		КонецЕсли;
		Движение = Движения.ЭП_УчетПремий.Добавить();
		Движение.Период = Дата;
		Движение.Пользователь = ТекСтрокаНачислениеПремий.Пользователь;
		Движение.Проект = ТекСтрокаНачислениеПремий.Проект;
		Движение.Этап = ТекСтрокаНачислениеПремий.Этап;
		Движение.ОстатокПЗК = ТекСтрокаНачислениеПремий.ОстатокПЗК;
		Движение.ПремияПоЭтапу = ТекСтрокаНачислениеПремий.ПремияПоЭтапу;
		Движение.ПроектнаяПремия = ТекСтрокаНачислениеПремий.ПроектнаяПремия;
	КонецЦикла;
	
	// регистр ЭП_УчетПремийПоДокументу
	Движения.ЭП_УчетПремийПоДокументам.Записывать = Истина;
	Для Каждого ТекСтрокаНачислениеПремий Из НачислениеПремийПоСопровождению Цикл 
		Если ТекСтрокаНачислениеПремий.ОстатокПЗК = 0 И ТекСтрокаНачислениеПремий.ПремияПоЭтапу = 0 И ТекСтрокаНачислениеПремий.ПроектнаяПремия = 0 Тогда
		
			Продолжить;
		
		КонецЕсли;
		Движение = Движения.ЭП_УчетПремийПоДокументам.Добавить();
		Движение.Период = Дата;
		Движение.Пользователь = ТекСтрокаНачислениеПремий.Пользователь;
		Движение.Проект = ТекСтрокаНачислениеПремий.Проект;
		//Движение.Этап = ТекСтрокаНачислениеПремий.Этап;
		Движение.ТехническийПроект = ТекСтрокаНачислениеПремий.ТехническийПроект;
		Движение.ОстатокПЗК = ТекСтрокаНачислениеПремий.ОстатокПЗК;
		Движение.ПремияПоЭтапу = ТекСтрокаНачислениеПремий.ПремияПоЭтапу;
		Движение.ПроектнаяПремия = ТекСтрокаНачислениеПремий.ПроектнаяПремия;
	КонецЦикла;
	//Если РассчитыватьПереработки Тогда 
		
		Движения.ЭП_РасчитанныйПланФактПоКомпенсациямПоПереработкам.Записывать = Истина;
		//Движения.ЭП_УчетОтгулов.Записывать = Истина;
		Для каждого СтрокаПереработок Из ПереработкиПоСотрудникам Цикл
			
			Если СтрокаПереработок.Отгул Тогда
				Продолжить;	
				//Движение = Движения.ЭП_УчетОтгулов.Добавить();
				//Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				//Движение.Сотрудник = СтрокаПереработок.Сотрудник;
				//Движение.Длительность = СтрокаПереработок.Факт;
				//Движение.Период = Дата;
				//Движение.Проект = СтрокаПереработок.Проект;
				
			Иначе
				
				Движение = Движения.ЭП_РасчитанныйПланФактПоКомпенсациямПоПереработкам.Добавить();
				Движение.Период = Дата;
				Движение.ДеньРегистрации = СтрокаПереработок.Дата;
				Движение.Проект = СтрокаПереработок.Проект;
				Движение.Сотрудник = СтрокаПереработок.Сотрудник;
				Движение.ЧасыПлан = СтрокаПереработок.План;
				Движение.ЧасыФакт = СтрокаПереработок.Факт;	
				
			КонецЕсли;
			
		КонецЦикла;
		
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВсе() Экспорт
	ЗаполнитьПроектыКИсключениюНаСервере();
	ЗаполнитьРасчетныеПрофилиНаСервере();
	ЗаполнитьДетальныеКоэффициентыНаСервере();
	ЗаполнитьКоэффициентыНаСервере();
	ЗаполнитьФормулыНаСервере(); 
	ЗаполнитьПроектныеПоказателиНаСервере();
	ЗаполнитьИтогиПЗКНаСервере();
	ЗаполнитьГруппировкуИтоговПЗК();
	ЗаполнитьНачислениеПремийНаСервере();  
	ЗаполнитьПереработкиПоСотрудникамНаСервере();
КонецПроцедуры

Процедура ЗаполнитьРасчетныеПрофилиНаСервере()
	
	РасчетныеПрофили.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ПрофилиРасчетаРезультативности.Ссылка КАК РасчетныйПрофиль
	|ИЗ
	|	Справочник.ЭП_ПрофилиРасчетаРезультативности КАК ЭП_ПрофилиРасчетаРезультативности
	|ГДЕ
	|	ЭП_ПрофилиРасчетаРезультативности.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", ГруппаРасчетныхПрофилей);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтрока = РасчетныеПрофили.Добавить();		
		ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДетальныеКоэффициентыНаСервере()
		
	ДетальныеКоэффициенты.Очистить();
	
	ПериодОценивания = НачалоМесяца(Дата);
    Отбор = Новый Структура("ПрофильРасчета", РасчетныеПрофили.Выгрузить().ВыгрузитьКолонку("РасчетныйПрофиль"));
	Результат = Отчеты.ЭП_РасчетРезультативности.ПолучитьРасчетРезультативности(ПериодОценивания, Отбор);
	
	// Уровни дерева: Профиль расчета, Сотрудник, Показатель, Детальные записи
	// Нужна детализация по сотруднику
	Для Каждого Строка1 Из Результат.Строки Цикл // Профиль расчета
		Для Каждого Строка2 Из Строка1.Строки Цикл // Сотрудник
			
			НоваяСтрока = ДетальныеКоэффициенты.Добавить();
			НоваяСтрока.РасчетныйПрофиль = Строка2.ПрофильРасчета;
			НоваяСтрока.Сотрудник = Строка2.Сотрудник;
			НоваяСтрока.Значение = Строка2.Индекс;

		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьКоэффициентыНаСервере()
	
	ТаблицаКоэффициентов = ДетальныеКоэффициенты.Выгрузить();
	ТаблицаКоэффициентов.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ТаблицаКоэффициентов.ЗаполнитьЗначения(1, "Количество");
	ТаблицаКоэффициентов.Свернуть("Сотрудник", "Значение, Количество");
	
	Для Каждого СтрокаТаблицы Из ТаблицаКоэффициентов Цикл
		СтрокаТаблицы.Значение = СтрокаТаблицы.Значение/СтрокаТаблицы.Количество;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаКоэффициентов.Сотрудник КАК Сотрудник,
	               |	ТаблицаКоэффициентов.Значение КАК Значение
	               |ПОМЕСТИТЬ ВТ_Сотрудники
	               |ИЗ
	               |	&ТаблицаКоэффициентов КАК ТаблицаКоэффициентов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_Сотрудники.Департамент КАК Департамент,
	               |	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	               |	ВТ_Сотрудники.Значение КАК Значение
	               |ИЗ
	               |	ВТ_Сотрудники КАК ВТ_Сотрудники
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	               |		ПО ВТ_Сотрудники.Сотрудник = ЭП_Сотрудники.Ссылка";
	Запрос.УстановитьПараметр("ТаблицаКоэффициентов", ТаблицаКоэффициентов);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	РассчитанныеКоэффициенты.Загрузить(Выгрузка);	

КонецПроцедуры

Процедура ЗаполнитьФормулыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.Ссылка КАК РасчетныйПрофиль,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.Показатель КАК Показатель,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.ВесовойКоэффициент КАК ВесовойКоэффициент,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.ЦелевоеЗначение КАК ЦелевоеЗначение,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.СпособАгрегации КАК СпособАгрегации
	|ИЗ
	|	Справочник.ЭП_ПрофилиРасчетаРезультативности.Показатели КАК ЭП_ПрофилиРасчетаРезультативностиПоказатели
	|ГДЕ
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.Ссылка В(&МассивПрофилей)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетныйПрофиль,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивПрофилей", РасчетныеПрофили.Выгрузить().ВыгрузитьКолонку("РасчетныйПрофиль"));
	ФормулыПоказателей.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьПроектныеПоказателиНаСервере()
	
	ПроектныеПоказатели.Очистить();
	
	Если ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЭП_КоманднаяРаботаПоПроекту.Проект КАК Проект,
		               |	ЭП_КоманднаяРаботаПоПроекту.Показатель КАК Показатель,
		               |	ЭП_КоманднаяРаботаПоПроекту.Значение КАК Значение
		               |ИЗ
		               |	РегистрСведений.ЭП_КоманднаяРаботаПоПроекту КАК ЭП_КоманднаяРаботаПоПроекту
		               |ГДЕ
		               |	ЭП_КоманднаяРаботаПоПроекту.ПериодОценивания = &ПериодОценивания
		               |	И (ЭП_КоманднаяРаботаПоПроекту.Проект.ЭП_Архивный = ЗНАЧЕНИЕ(Перечисление.ЭП_СтатусПроекта.Действующий)
		               |			ИЛИ НЕ НАЧАЛОПЕРИОДА(ЭП_КоманднаяРаботаПоПроекту.Проект.ЭП_ДатаОтправкиВАрхив, МЕСЯЦ) <= &ПериодОценивания)";
		
		Запрос.УстановитьПараметр("ПериодОценивания", НачалоМесяца(Дата));
		
		Выгрузка = Запрос.Выполнить().Выгрузить();
		ПроектныеПоказатели.Загрузить(Выгрузка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИтогиПЗКНаСервере()
	 
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаИтогиПЗК();	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("КоэффициентыПоПроектам", ПроектныеПоказатели.Выгрузить());
	Запрос.УстановитьПараметр("ТЧКоэффициентыПоСотрудникам", РассчитанныеКоэффициенты.Выгрузить()); 
	Запрос.УстановитьПараметр("ПроектыКИсключению", ПроектыКИсключениюИзРасчета.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ИтогиПЗК.Очистить();
	
	Пока Выборка.Следующий() Цикл
	
		СуммаКоэффициента = 1;
		
		ВыборкаДетальныеЗаписи = Выборка.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
			НовСтрока = ИтогиПЗК.Добавить();			
			ЗаполнитьЗначенияСвойств(НовСтрока,ВыборкаДетальныеЗаписи);
			
			Если СуммаКоэффициента > ВыборкаДетальныеЗаписи.КоэффициентЗагрузки Тогда
			
				СуммаКоэффициента = СуммаКоэффициента - ВыборкаДетальныеЗаписи.КоэффициентЗагрузки;
				
			Иначе
				
				НовСтрока.КоэффициентЗагрузки = СуммаКоэффициента;
				СуммаКоэффициента = 0;
			
			КонецЕсли;
		КонецЦикла;
		Если СуммаКоэффициента > 0 Тогда
			
				НовСтрока.КоэффициентЗагрузки = НовСтрока.КоэффициентЗагрузки + СуммаКоэффициента;					
			
		КонецЕсли;
	
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьГруппировкуИтоговПЗК()
	
	Если ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТЧИтогиПЗК.Департамент КАК Департамент,
		               |	ТЧИтогиПЗК.Сотрудник КАК Сотрудник,
		               |	ТЧИтогиПЗК.Значение КАК Значение,
		               |	ТЧИтогиПЗК.КоэффициентЗагрузки КАК КоэффициентЗагрузки
		               |ПОМЕСТИТЬ ВТ_ИтогиПЗК
		               |ИЗ
		               |	&ТЧИтогиПЗК КАК ТЧИтогиПЗК
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_ИтогиПЗК.Департамент КАК Департамент,
		               |	ВТ_ИтогиПЗК.Сотрудник КАК Сотрудник,
		               |	СУММА(ВТ_ИтогиПЗК.Значение * ВТ_ИтогиПЗК.КоэффициентЗагрузки) КАК Значение
		               |ИЗ
		               |	ВТ_ИтогиПЗК КАК ВТ_ИтогиПЗК
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_ИтогиПЗК.Департамент,
		               |	ВТ_ИтогиПЗК.Сотрудник";
		
		Запрос.УстановитьПараметр("ТЧИтогиПЗК", ИтогиПЗК.Выгрузить());
		ИтоговоеЗначениеПЗКГруп.Загрузить(Запрос.Выполнить().Выгрузить());
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТЧРассчитанныеКоэффициенты.Департамент КАК Департамент,
		               |	ТЧРассчитанныеКоэффициенты.Сотрудник КАК Сотрудник,
		               |	ТЧРассчитанныеКоэффициенты.Значение КАК Значение
		               |ПОМЕСТИТЬ ВТ_РассчитанныеКоэффициенты
		               |ИЗ
		               |	&ТЧРассчитанныеКоэффициенты КАК ТЧРассчитанныеКоэффициенты
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_РассчитанныеКоэффициенты.Департамент КАК Департамент,
		               |	ВТ_РассчитанныеКоэффициенты.Сотрудник КАК Сотрудник,
		               |	СУММА(ВТ_РассчитанныеКоэффициенты.Значение) КАК Значение
		               |ИЗ
		               |	ВТ_РассчитанныеКоэффициенты КАК ВТ_РассчитанныеКоэффициенты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_РассчитанныеКоэффициенты.Департамент,
		               |	ВТ_РассчитанныеКоэффициенты.Сотрудник";
		
		Запрос.УстановитьПараметр("ТЧРассчитанныеКоэффициенты", РассчитанныеКоэффициенты.Выгрузить());
		ИтоговоеЗначениеПЗКГруп.Загрузить(Запрос.Выполнить().Выгрузить());

	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник КАК Сотрудник,
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль.Департамент КАК Департамент,
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль.ТехническаяПоддержка КАК ТехническаяПоддержка
	               |ИЗ
	               |	РегистрНакопления.УчетВремени.Обороты(&НачалоПериода, &КонецПериода, Месяц, НЕ Пользователь.ЭП_Сотрудник В (&ПользователиТЧ)) КАК УчетВремениОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.РасчетныеПрофили КАК ЭП_СотрудникиРасчетныеПрофили
	               |		ПО УчетВремениОбороты.Пользователь.ЭП_Сотрудник = ЭП_СотрудникиРасчетныеПрофили.Ссылка
	               |ГДЕ
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль.ТехническаяПоддержка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник,
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль.Департамент,
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль.ТехническаяПоддержка";  
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ПользователиТЧ", ИтоговоеЗначениеПЗКГруп.ВыгрузитьКолонку("Сотрудник"));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = ИтоговоеЗначениеПЗКГруп.Добавить();
		НоваяСтрока.Департамент = ВыборкаДетальныеЗаписи.Департамент;
		НоваяСтрока.Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		НоваяСтрока.Значение = 1;
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьНачислениеПремийНаСервере()
	
	Если ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель Тогда
		// Запрос возвращает данные для заполнения табличных частей ВводныеДляНачисленияПремий и НачисленияПремий
		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапросаНачисленийПремий();
		
		// Установка параметров запроса
		Запрос.УстановитьПараметр("ВидУчета", Справочники.ЭП_ВидыУчетаВремени.Явка);
		Запрос.УстановитьПараметр("ТЧИтоговоеЗначениеПЗКГруп", ИтоговоеЗначениеПЗКГруп.Выгрузить());
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Рабочий", Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
		Запрос.УстановитьПараметр("Предпраздничный", Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
		Запрос.УстановитьПараметр("ВидДостижения", Справочники.ЭП_ВидыДостиженийСотрудников.ИспытательныйСрок);
		Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
		РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
		КоличествоПакетов = РезультатЗапросаПакет.Количество();		
		// Цикл из выборки запроса для записи данных в табличную часть ВводныеДляНачисленияПремий
		ВыборкаВводныеДляНачисленияПремий = РезультатЗапросаПакет[КоличествоПакетов-2].Выбрать();
		ВыборкаВводныеДляНачисленияПремийПоСопровождению = РезультатЗапросаПакет[КоличествоПакетов-1].Выбрать();
		
		ЗаполнитьТаблицыНачисленияПремий(ВыборкаВводныеДляНачисленияПремий,
			ВводныеДляНачисленияПремий, НачислениеПремий);
		ЗаполнитьТаблицыНачисленияПремий(ВыборкаВводныеДляНачисленияПремийПоСопровождению,
			ВводныеДляНачисленияПремийПоСопровождению, НачислениеПремийПоСопровождению, Истина);

	Иначе
		НачислениеПремий.Очистить();
		ВводныеДляНачисленияПремий.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицыНачисленияПремий(Выборка, ТаблицаВД, ТаблицаНП, ЗаполнятьТехПроект = Ложь)
	
	КонстантаКоэффициентПП = Константы.ЭП_ПроектнаяПремия.Получить();
	КонстантаКоэффициентПЗК = Константы.ЭП_ПремияЗаКачество.Получить();
	КонстантаКоэффициентПремияПоЭтапу = Константы.ЭП_ПремияПоЭтапу.Получить();
	
	ТаблицаНП.Очистить();
	ТаблицаВД.Очистить();
	ТекущийСотрудник = Справочники.ЭП_Сотрудники.ПустаяСсылка();
	ТекущийОстаток = 1;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ТекущийСотрудник = Выборка.Сотрудник Тогда
			
			ТекущийСотрудник = Выборка.Сотрудник;
			ТекущийОстаток = 1;
			Если ЗаполнятьТехПроект Тогда
				КоэфПоСотруднику = ВводныеДляНачисленияПремий.Выгрузить(,"Сотрудник, КоэффициентПоРаспределению");
				КоэфПоСотруднику.Свернуть("Сотрудник","КоэффициентПоРаспределению"); 
				Для Каждого Сотрудник Из КоэфПоСотруднику Цикл
					Если Сотрудник.Сотрудник = Выборка.Сотрудник Тогда	
						ТекущийОстаток = ТекущийОстаток - Сотрудник.КоэффициентПоРаспределению;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
		// Запись данных без вычислений
		НоваяСтрокаВД = ТаблицаВД.Добавить();
		НоваяСтрокаВД.Сотрудник = Выборка.Сотрудник;
		НоваяСтрокаВД.Пользователь = Выборка.Пользователь;
		НоваяСтрокаВД.Оклад = Выборка.Оклад;
		НоваяСтрокаВД.Проект = Выборка.Проект;
		НоваяСтрокаВД.Этап = Выборка.Этап;
		НоваяСтрокаВД.КоличествоДнейВЭтапе = Выборка.КоличествоДнейВЭтапе;
		
		Если ЗаполнятьТехПроект Тогда
			НоваяСтрокаВД.ТехническийПроект = Выборка.ТехническийПроект;
		КонецЕсли;	
		
		// Запись часов в случае имеющихся отработанных за данный период
		Если Выборка.ОтработанноеВремяНаЭтапеЗаТекущийПериод = 0 ИЛИ Выборка.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод = 0 Тогда
			НоваяСтрокаВД.ОтработанныеЧасы = 0;	
			НоваяСтрокаВД.КоэффициентПоРаспределению = 0;
			
		Иначе
			ОтработанныеЧасы = Выборка.ОтработанноеВремяНаЭтапеЗаТекущийПериод / 3600;
			ВремяПоТабелированию = Выборка.КоличествоЧасовПоТабелю;
			НоваяСтрокаВД.ОтработанныеЧасы = ОтработанныеЧасы;
			ОтработанноеВремяНаВсехПроектахЗаТекущийПериод = ?(ВремяПоТабелированию < Выборка.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод/3600, 
															   Выборка.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод/3600, 
															   ВремяПоТабелированию);
			НовыйКоэф = Окр(ОтработанныеЧасы / ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,2);
			Если НовыйКоэф > ТекущийОстаток Тогда
				
				НовыйКоэф = ТекущийОстаток; 
				ТекущийОстаток = 0; 
				
			Иначе
				
				ТекущийОстаток = ТекущийОстаток - НовыйКоэф;
				
			КонецЕсли;
			
			НоваяСтрокаВД.КоэффициентПоРаспределению = НовыйКоэф; 
		КонецЕсли;					
		// Запись всех коэффициентов в табличную часть
		НоваяСтрокаВД.ПроцентПЗК = Выборка.ПроцентПЗК;
		НоваяСтрокаВД.КоэффициентПоПроекту = КонстантаКоэффициентПП;
		НоваяСтрокаВД.КоэффициентПоЭтапу = КонстантаКоэффициентПремияПоЭтапу;
		НоваяСтрокаВД.КоэффициентПЗК = КонстантаКоэффициентПЗК;
		НоваяСтрокаВД.ДнейПоТабелю = Выборка.ОбщееКоличествоОтработанныхДней - Выборка.ОтработанныеДниВнеПериода;
		
		// Расчет дней к премированию, остатка дней на начало периода и дней по табелю
		Если Выборка.Этап.Пустая() ИЛИ Выборка.КоличествоДнейВЭтапе = 0 Тогда	
			НоваяСтрокаВД.ДнейКПремированию = НоваяСтрокаВД.ДнейПоТабелю;
			КоэффициентДнейКПремированию = 1;
			
		Иначе
			НоваяСтрокаВД.ОстатокДнейНаНачалоПериода = Макс(Выборка.КоличествоДнейВЭтапе - Выборка.ОтработанныеДниВнеПериода,0);
			
			Если НЕ Выборка.ОтработанныеДниВнеПериода = 0 Тогда
				НоваяСтрокаВД.ДнейКПремированию = Мин(НоваяСтрокаВД.ОстатокДнейНаНачалоПериода, НоваяСтрокаВД.ДнейПоТабелю);
				
			Иначе
				НоваяСтрокаВД.ДнейКПремированию = Выборка.ОбщееКоличествоОтработанныхДней;
			КонецЕсли;
			
		КонецЕсли;
		
		// Расчет ставки сотрудника
		НормативЧасов = Выборка.КоличествоРабочихЧасов;
		ВремяРаботыСотрудникаПоТабелю = Выборка.КоличествоЧасовПоТабелю;
		Если НормативЧасов <> 0 Тогда
			НоваяСтрокаВД.Ставка = ВремяРаботыСотрудникаПоТабелю / НормативЧасов;
		Иначе
			НоваяСтрокаВД.Ставка = 0;
		КонецЕсли;
		Если НоваяСтрокаВД.Ставка > 1 Тогда
		
			НоваяСтрокаВД.Ставка = 1;			
		
		КонецЕсли;
		// Подготовка к расчету премий
		ОкладСУчетомСтавки = Выборка.Оклад * НоваяСтрокаВД.Ставка;
		
		//Если (НЕ Выборка.Этап.Пустая() И НоваяСтрокаВД.ОстатокДнейНаНачалоПериода = 0 И Выборка.КоличествоДнейВЭтапе > 0) ИЛИ Выборка.Проект.ЭП_НеУчавствуетВПроектномПремировании Тогда	
		//	КоэффициентДнейКПремированию = 0;
		//	
		//ИначеЕсли НЕ Выборка.Этап.Пустая() И НоваяСтрокаВД.ОстатокДнейНаНачалоПериода <= НоваяСтрокаВД.ДнейКПремированию И Выборка.КоличествоДнейВЭтапе > 0 Тогда
		//	
		//	Если НоваяСтрокаВД.ДнейКПремированию > 0 Тогда
		//		КоэффициентДнейКПремированию = НоваяСтрокаВД.ОстатокДнейНаНачалоПериода / НоваяСтрокаВД.ДнейКПремированию;
		//		
		//	Иначе	
		//		КоэффициентДнейКПремированию = 0;
		//	КонецЕсли;
		//	
		//ИначеЕсли Выборка.Этап.Пустая() Тогда
		//	КоэффициентДнейКПремированию = 1;
		//	
		//Иначе
		//	КоэффициентДнейКПремированию = 1;
		//КонецЕсли;	
		КоэффициентДнейКПремированию = 1;
		// Расчет премий сотрудников
		Если ЗначениеЗаполнено(Выборка.Этап) Тогда
			Если Выборка.ПроцентПЗК > 0.7 Тогда
				НоваяСтрокаВД.ОстатокПЗК = Окр(КонстантаКоэффициентПЗК * ОкладСУчетомСтавки * (1 - Выборка.ПроцентПЗК) * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию,
												2,
												РежимОкругления.Окр15как10);	
			Иначе
				НоваяСтрокаВД.ОстатокПЗК = Окр(КонстантаКоэффициентПЗК * ОкладСУчетомСтавки * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию,
												2,
												РежимОкругления.Окр15как10); 	
			КонецЕсли;
			
			НоваяСтрокаВД.ПремияПоЭтапу = Окр(ОкладСУчетомСтавки * КонстантаКоэффициентПремияПоЭтапу * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию,
												2,
												РежимОкругления.Окр15как10);
			Если ЗначениеЗаполнено(Выборка.КлючевыеСотрудники) Тогда
				НоваяСтрокаВД.ПроектнаяПремия = Окр(ОкладСУчетомСтавки  * КонстантаКоэффициентПП * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию,
													2,
													РежимОкругления.Окр15как10);
			Иначе
				НоваяСтрокаВД.ПроектнаяПремия = 0;
			КонецЕсли;
		Иначе 
			НоваяСтрокаВД.ОстатокПЗК = 0;
			НоваяСтрокаВД.ПремияПоЭтапу = 0;
			НоваяСтрокаВД.ПроектнаяПремия = 0;	
		КонецЕсли;
		Если Выборка.ИспытательныйСрок Тогда
		
			НоваяСтрокаВД.ПремияПоЭтапу = 0;
			НоваяСтрокаВД.ПроектнаяПремия = 0;			
		    НоваяСтрокаВД.ОстатокПЗК = 0;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТабличнойЧасти Из ТаблицаВД Цикл
		НоваяСтрокаНП = ТаблицаНП.Добавить();
		НоваяСтрокаНП.Пользователь = СтрокаТабличнойЧасти.Пользователь;
		НоваяСтрокаНП.Сотрудник = СтрокаТабличнойЧасти.Сотрудник;
		НоваяСтрокаНП.Проект = СтрокаТабличнойЧасти.Проект;
		НоваяСтрокаНП.Этап = СтрокаТабличнойЧасти.Этап;
		НоваяСтрокаНП.ОстатокПЗК = СтрокаТабличнойЧасти.ОстатокПЗК;
		НоваяСтрокаНП.ПроектнаяПремия = СтрокаТабличнойЧасти.ПроектнаяПремия;
		НоваяСтрокаНП.ПремияПоЭтапу = СтрокаТабличнойЧасти.ПремияПоЭтапу;
		НоваяСтрокаНП.Сумма = СтрокаТабличнойЧасти.ОстатокПЗК + СтрокаТабличнойЧасти.ПроектнаяПремия + СтрокаТабличнойЧасти.ПремияПоЭтапу;
		Если ЗаполнятьТехПроект Тогда
			НоваяСтрокаНП.ТехническийПроект = СтрокаТабличнойЧасти.ТехническийПроект;
		КонецЕсли;

	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьТаблицуВводныеДанные()

Процедура ЗаполнитьПроектыКИсключениюНаСервере()
	
	// Запрос к Справочнику Проекты, который проверяет заполненность Табличной части ТаблицаОценивания
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |    Проекты.Ссылка КАК Ссылка
    |ИЗ
    |    Справочник.Проекты КАК Проекты
    |
    |СГРУППИРОВАТЬ ПО
    |    Проекты.Ссылка
    |
    |ИМЕЮЩИЕ
    |    КОЛИЧЕСТВО(Проекты.ЭП_ТаблицаОценивания.НомерСтроки) = 0";
    
    Выборка = Запрос.Выполнить().Выбрать();
    ПроектыКИсключениюИзРасчета.Очистить();
    
    Пока Выборка.Следующий() Цикл
        
        НоваяСтрока = ПроектыКИсключениюИзРасчета.Добавить();
        НоваяСтрока.Проект = Выборка.Ссылка;
        
    КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаИтогиПЗК()

	Возврат "ВЫБРАТЬ
	|	ПроектыКИсключению.Проект КАК Проект
	|ПОМЕСТИТЬ ВТ_ПроектыКИсключению
	|ИЗ
	|	&ПроектыКИсключению КАК ПроектыКИсключению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетВремени.Проект КАК Проект,
	|	УчетВремени.Пользователь.ЭП_Сотрудник КАК Сотрудник,
	|	СУММА(УчетВремени.Длительность) КАК Значение
	|ПОМЕСТИТЬ ВТ_ЧасыПоПроектам
	|ИЗ
	|	РегистрНакопления.УчетВремени КАК УчетВремени
	|ГДЕ
	|	УчетВремени.Период >= &НачалоПериода
	|	И УчетВремени.Период <= &КонецПериода
	|	И НЕ УчетВремени.Длительность = 0
	|	И (УчетВремени.Проект.ЭП_Архивный = ЗНАЧЕНИЕ(Перечисление.ЭП_СтатусПроекта.Действующий) ИЛИ НЕ НачалоПериода(УчетВремени.Проект.ЭП_ДатаОтправкиВАрхив, Месяц) <= &НачалоПериода)
	|	И НЕ УчетВремени.Проект В
	|				(ВЫБРАТЬ
	|					ВТ_ПроектыКИсключению.Проект КАК Проект
	|				ИЗ
	|					ВТ_ПроектыКИсключению КАК ВТ_ПроектыКИсключению)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетВремени.Пользователь.ЭП_Сотрудник,
	|	УчетВремени.Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетВремени.Пользователь.ЭП_Сотрудник КАК Сотрудник,
	|	СУММА(УчетВремени.Длительность) КАК Часы
	|ПОМЕСТИТЬ ВТ_ЧасыПоСотрудникам
	|ИЗ
	|	РегистрНакопления.УчетВремени КАК УчетВремени
	|ГДЕ
	|	УчетВремени.Период >= &НачалоПериода
	|	И УчетВремени.Период <= &КонецПериода
	|	И (УчетВремени.Проект.ЭП_Архивный = ЗНАЧЕНИЕ(Перечисление.ЭП_СтатусПроекта.Действующий) ИЛИ НЕ НачалоПериода(УчетВремени.Проект.ЭП_ДатаОтправкиВАрхив, Месяц) <= &НачалоПериода)
	|	И НЕ УчетВремени.Проект В
	|				(ВЫБРАТЬ
	|					ВТ_ПроектыКИсключению.Проект КАК Проект
	|				ИЗ
	|					ВТ_ПроектыКИсключению КАК ВТ_ПроектыКИсключению)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетВремени.Пользователь.ЭП_Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыПоПроектам.Проект КАК Проект,
	|	КоэффициентыПоПроектам.Значение КАК Коэффициент,
	|	КоэффициентыПоПроектам.Показатель КАК Показатель
	|ПОМЕСТИТЬ ВТ_КоэффициентыПоПроектамВРазрезеПоказателей
	|ИЗ
	|	&КоэффициентыПоПроектам КАК КоэффициентыПоПроектам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КоэффициентыПоПроектамВРазрезеПоказателей.Проект КАК Проект,
	|	СУММА(ВТ_КоэффициентыПоПроектамВРазрезеПоказателей.Коэффициент) КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_ИтоговыеЗначенияПоказателейПоПроектам
	|ИЗ
	|	ВТ_КоэффициентыПоПроектамВРазрезеПоказателей КАК ВТ_КоэффициентыПоПроектамВРазрезеПоказателей
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КоэффициентыПоПроектамВРазрезеПоказателей.Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧКоэффициентыПоСотрудникам.Сотрудник КАК Сотрудник,
	|	ТЧКоэффициентыПоСотрудникам.Значение КАК Значение
	|ПОМЕСТИТЬ ВТ_КоэффициентыСотрудников
	|ИЗ
	|	&ТЧКоэффициентыПоСотрудникам КАК ТЧКоэффициентыПоСотрудникам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЧасыПоПроектам.Проект КАК Проект,
	|	ВТ_КоэффициентыСотрудников.Сотрудник КАК Сотрудник,
	|	ВТ_ИтоговыеЗначенияПоказателейПоПроектам.Коэффициент + ВТ_КоэффициентыСотрудников.Значение КАК ИтоговыйКоэффициент
	|ПОМЕСТИТЬ ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов
	|ИЗ
	|	ВТ_КоэффициентыСотрудников КАК ВТ_КоэффициентыСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЧасыПоПроектам КАК ВТ_ЧасыПоПроектам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИтоговыеЗначенияПоказателейПоПроектам КАК ВТ_ИтоговыеЗначенияПоказателейПоПроектам
	|			ПО ВТ_ЧасыПоПроектам.Проект = ВТ_ИтоговыеЗначенияПоказателейПоПроектам.Проект
	|		ПО ВТ_КоэффициентыСотрудников.Сотрудник = ВТ_ЧасыПоПроектам.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЧасыПоСотрудникам.Сотрудник КАК Сотрудник,
	|	ВТ_ЧасыПоПроектам.Проект КАК Проект,
	|	ВЫБОР
	|		КОГДА ВТ_ЧасыПоСотрудникам.Часы = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВТ_ЧасыПоПроектам.Значение / ВТ_ЧасыПоСотрудникам.Часы
	|	КОНЕЦ КАК КоэфициентЧасовНаПроекте
	|ПОМЕСТИТЬ ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте
	|ИЗ
	|	ВТ_ЧасыПоСотрудникам КАК ВТ_ЧасыПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЧасыПоПроектам КАК ВТ_ЧасыПоПроектам
	|		ПО ВТ_ЧасыПоСотрудникам.Сотрудник = ВТ_ЧасыПоПроектам.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Проект КАК Проект,
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Сотрудник КАК Сотрудник,
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.ИтоговыйКоэффициент КАК Значение,
	|	ОКР(ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте.КоэфициентЧасовНаПроекте, 2) КАК КоэффициентЗагрузки,
	|	ЭП_Сотрудники.Департамент КАК Департамент
	|ИЗ
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов КАК ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте КАК ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте
	|		ПО ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Проект = ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте.Проект
	|			И ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Сотрудник = ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	|		ПО ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Сотрудник = ЭП_Сотрудники.Ссылка
	|ИТОГИ ПО
	|	Сотрудник"; 	

КонецФункции

Функция ТекстЗапросаНачисленийПремий()

	Возврат "ВЫБРАТЬ
	        |	ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
	        |	ТЧИтоговоеЗначениеПЗКГруп.Значение КАК ПроцентПЗК
	        |ПОМЕСТИТЬ ВТ_ТЧИтоговоеЗначениеПЗКГруп
	        |ИЗ
	        |	&ТЧИтоговоеЗначениеПЗКГруп КАК ТЧИтоговоеЗначениеПЗКГруп
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ПроектыЭП_ТаблицаОценивания.Ссылка КАК Ссылка,
	        |	КОЛИЧЕСТВО(ПроектыЭП_ТаблицаОценивания.Оценивает) КАК Оценивает
	        |ПОМЕСТИТЬ ВТ_ПроектыКОцениванию
	        |ИЗ
	        |	Справочник.Проекты.ЭП_ТаблицаОценивания КАК ПроектыЭП_ТаблицаОценивания
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ПроектыЭП_ТаблицаОценивания.Ссылка
	        |
	        |ИМЕЮЩИЕ
	        |	КОЛИЧЕСТВО(ПроектыЭП_ТаблицаОценивания.Оценивает) > 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник
	        |ПОМЕСТИТЬ ВТ_СотрудникиНаИспытательномСроке
	        |ИЗ
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.Достижения КАК ЭП_СотрудникиДостижения
	        |		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_СотрудникиДостижения.Ссылка
	        |ГДЕ
	        |	(ЭП_СотрудникиДостижения.ДатаФакт > КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	        |			ИЛИ ЭП_СотрудникиДостижения.ДатаФакт = &ПустаяДата)
	        |	И ЭП_СотрудникиДостижения.ВидДостижения = &ВидДостижения
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	УчетВремениОбороты.Проект КАК Проект,
	        |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник КАК ПользовательЭП_Сотрудник,
	        |	УчетВремениОбороты.ТехническийПроект КАК ТехническийПроект
	        |ПОМЕСТИТЬ ВТ_ПроектыСРазнесеннымиЧасами
	        |ИЗ
	        |	РегистрНакопления.УчетВремени.Обороты(
	        |			НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ),
	        |			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
	        |			,
	        |			Проект В
	        |					(ВЫБРАТЬ
	        |						ВТ_ПроектыКОцениванию.Ссылка КАК Ссылка
	        |					ИЗ
	        |						ВТ_ПроектыКОцениванию КАК ВТ_ПроектыКОцениванию)
	        |				И Пользователь.ЭП_Сотрудник В
	        |					(ВЫБРАТЬ
	        |						ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник
	        |					ИЗ
	        |						ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп)) КАК УчетВремениОбороты
	        |ГДЕ
	        |	НЕ УчетВремениОбороты.ДлительностьОборот = 0
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник КАК Сотрудник,
	        |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень КАК ПериодРегистрацииДень
	        |ПОМЕСТИТЬ ВТ_ДанныеТабеляПоСотрудникам
	        |ИЗ
	        |	РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
	        |ГДЕ
	        |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &ВидУчета
	        |	И ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник В
	        |			(ВЫБРАТЬ
	        |				ВТ_ПроектыСРазнесеннымиЧасами.ПользовательЭП_Сотрудник КАК ПользовательЭП_Сотрудник
	        |			ИЗ
	        |				ВТ_ПроектыСРазнесеннымиЧасами КАК ВТ_ПроектыСРазнесеннымиЧасами)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	УчетВремени.Этап КАК РазделПроекта,
	        |	УчетВремени.Пользователь.ЭП_Сотрудник КАК ПользовательЭП_Сотрудник
	        |ПОМЕСТИТЬ ВТ_РазделыПроектаВТекущемПериоде
	        |ИЗ
	        |	РегистрНакопления.УчетВремени КАК УчетВремени
	        |ГДЕ
	        |	(УчетВремени.Пользователь.ЭП_Сотрудник, НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ)) В
	        |			(ВЫБРАТЬ
	        |				ВТ_ДанныеТабеляПоСотрудникам.Сотрудник КАК Сотрудник,
	        |				ВТ_ДанныеТабеляПоСотрудникам.ПериодРегистрацииДень КАК ПериодРегистрацииДень
	        |			ИЗ
	        |				ВТ_ДанныеТабеляПоСотрудникам КАК ВТ_ДанныеТабеляПоСотрудникам)
	        |	И УчетВремени.Период <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	        |	И УчетВремени.Период >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |	И УчетВремени.Проект В
	        |			(ВЫБРАТЬ
	        |				ВТ_ПроектыСРазнесеннымиЧасами.Проект КАК Проект
	        |			ИЗ
	        |				ВТ_ПроектыСРазнесеннымиЧасами КАК ВТ_ПроектыСРазнесеннымиЧасами)
	        |	И (НЕ НАЧАЛОПЕРИОДА(УчетВремени.Этап.ЭП_ДатаПомещенияВАрхив, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |			ИЛИ НЕ УчетВремени.Этап.ЭП_Архивный)
	        |
	        |ОБЪЕДИНИТЬ ВСЕ
	        |
	        |ВЫБРАТЬ РАЗЛИЧНЫЕ
	        |	ЭП_РеализацияОтгуловДокСотрудники.Этап,
	        |	ЭП_РеализацияОтгуловДокСотрудники.Сотрудник
	        |ИЗ
	        |	Документ.ЭП_РеализацияОтгуловДок.Сотрудники КАК ЭП_РеализацияОтгуловДокСотрудники
	        |ГДЕ
	        |	ЭП_РеализацияОтгуловДокСотрудники.ДатаОтгула <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	        |	И ЭП_РеализацияОтгуловДокСотрудники.ДатаОтгула >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |	И ЭП_РеализацияОтгуловДокСотрудники.Ссылка.Проведен
	        |	И (НЕ НАЧАЛОПЕРИОДА(ЭП_РеализацияОтгуловДокСотрудники.Этап.ЭП_ДатаПомещенияВАрхив, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |			ИЛИ НЕ ЭП_РеализацияОтгуловДокСотрудники.Этап.ЭП_Архивный)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЭП_РеализацияОтгуловДокСотрудники.Сотрудник КАК Сотрудник,
	        |	ЭП_РеализацияОтгуловДокСотрудники.Этап КАК Этап,
	        |	ЭП_РеализацияОтгуловДокСотрудники.ТехническийПроект КАК ТехническийПроект,
	        |	СУММА(8 * 3600) КАК ДлительностьЧасы,
	        |	ЭП_РеализацияОтгуловДокСотрудники.ДатаОтгула КАК ДатаОтгула,
	        |	ЭП_РеализацияОтгуловДокСотрудники.Ссылка.Проект КАК Проект
	        |ПОМЕСТИТЬ ВТ_ЧасыОтгулов
	        |ИЗ
	        |	Документ.ЭП_РеализацияОтгуловДок.Сотрудники КАК ЭП_РеализацияОтгуловДокСотрудники
	        |ГДЕ
	        |	(ЭП_РеализацияОтгуловДокСотрудники.Этап, ЭП_РеализацияОтгуловДокСотрудники.Сотрудник) В
	        |			(ВЫБРАТЬ
	        |				ВТ_РазделыПроектаВТекущемПериоде.РазделПроекта КАК РазделПроекта,
	        |				ВТ_РазделыПроектаВТекущемПериоде.ПользовательЭП_Сотрудник КАК ПользовательЭП_Сотрудник
	        |			ИЗ
	        |				ВТ_РазделыПроектаВТекущемПериоде КАК ВТ_РазделыПроектаВТекущемПериоде)
	        |	И ЭП_РеализацияОтгуловДокСотрудники.ДатаОтгула <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	        |	И ЭП_РеализацияОтгуловДокСотрудники.Ссылка.Проведен
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЭП_РеализацияОтгуловДокСотрудники.Сотрудник,
	        |	ЭП_РеализацияОтгуловДокСотрудники.Этап,
	        |	ЭП_РеализацияОтгуловДокСотрудники.ТехническийПроект,
	        |	ЭП_РеализацияОтгуловДокСотрудники.ДатаОтгула,
	        |	ЭП_РеализацияОтгуловДокСотрудники.Ссылка.Проект
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВложенныйЗапрос.ПользовательЭП_Сотрудник КАК ПользовательЭП_Сотрудник,
	        |	ВложенныйЗапрос.Проект КАК Проект,
	        |	СУММА(ВложенныйЗапрос.Длительность) КАК Длительность,
	        |	ВложенныйЗапрос.РазделПроект КАК РазделПроект,
	        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.ПериодДень) КАК ПериодДень,
	        |	ВложенныйЗапрос.КоличествоРабочихДней КАК КоличествоРабочихДней,
	        |	ВложенныйЗапрос.ТехническийПроект КАК ТехническийПроект,
	        |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.ДеньВнеПериода) КАК ДеньВнеПериода
	        |ПОМЕСТИТЬ ВТ_УчетВремениЗаВсеПериоды
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		УчетВремени.Пользователь.ЭП_Сотрудник КАК ПользовательЭП_Сотрудник,
	        |		УчетВремени.Проект КАК Проект,
	        |		ВЫБОР
	        |			КОГДА НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |				ТОГДА УчетВремени.Длительность
	        |			ИНАЧЕ 0
	        |		КОНЕЦ КАК Длительность,
	        |		УчетВремени.Этап КАК РазделПроект,
	        |		НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ) КАК ПериодДень,
	        |		УчетВремени.Этап.КоличествоРабочихДней КАК КоличествоРабочихДней,
	        |		ЗНАЧЕНИЕ(Справочник.ТехническиеПроекты.ПустаяСсылка) КАК ТехническийПроект,
	        |		ВЫБОР
	        |			КОГДА НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ) <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |				ТОГДА НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ)
	        |		КОНЕЦ КАК ДеньВнеПериода
	        |	ИЗ
	        |		РегистрНакопления.УчетВремени КАК УчетВремени
	        |	ГДЕ
	        |		(УчетВремени.Пользователь.ЭП_Сотрудник, НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ)) В
	        |				(ВЫБРАТЬ
	        |					ВТ_ДанныеТабеляПоСотрудникам.Сотрудник КАК Сотрудник,
	        |					ВТ_ДанныеТабеляПоСотрудникам.ПериодРегистрацииДень КАК ПериодРегистрацииДень
	        |				ИЗ
	        |					ВТ_ДанныеТабеляПоСотрудникам КАК ВТ_ДанныеТабеляПоСотрудникам)
	        |		И УчетВремени.Период <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	        |		И (УчетВремени.Этап, УчетВремени.Пользователь.ЭП_Сотрудник) В
	        |				(ВЫБРАТЬ
	        |					ВТ_РазделыПроектаВТекущемПериоде.РазделПроекта КАК РазделПроекта,
	        |					ВТ_РазделыПроектаВТекущемПериоде.ПользовательЭП_Сотрудник КАК ПользовательЭП_Сотрудник
	        |				ИЗ
	        |					ВТ_РазделыПроектаВТекущемПериоде КАК ВТ_РазделыПроектаВТекущемПериоде)
	        |		И НЕ УчетВремени.Длительность = 0
	        |		И УчетВремени.Проект В
	        |				(ВЫБРАТЬ
	        |					ВТ_ПроектыСРазнесеннымиЧасами.Проект КАК Проект
	        |				ИЗ
	        |					ВТ_ПроектыСРазнесеннымиЧасами КАК ВТ_ПроектыСРазнесеннымиЧасами)
	        |	
	        |	ОБЪЕДИНИТЬ ВСЕ
	        |	
	        |	ВЫБРАТЬ
	        |		ВТ_ЧасыОтгулов.Сотрудник,
	        |		ВТ_ЧасыОтгулов.Проект,
	        |		ВЫБОР
	        |			КОГДА НАЧАЛОПЕРИОДА(ВТ_ЧасыОтгулов.ДатаОтгула, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |				ТОГДА ВТ_ЧасыОтгулов.ДлительностьЧасы
	        |			ИНАЧЕ 0
	        |		КОНЕЦ,
	        |		ВТ_ЧасыОтгулов.Этап,
	        |		ВТ_ЧасыОтгулов.ДатаОтгула,
	        |		ВТ_ЧасыОтгулов.Этап.КоличествоРабочихДней,
	        |		ЗНАЧЕНИЕ(Справочник.ТехническиеПроекты.ПустаяСсылка),
	        |		ВЫБОР
	        |			КОГДА НАЧАЛОПЕРИОДА(ВТ_ЧасыОтгулов.ДатаОтгула, ДЕНЬ) <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |				ТОГДА НАЧАЛОПЕРИОДА(ВТ_ЧасыОтгулов.ДатаОтгула, ДЕНЬ)
	        |		КОНЕЦ
	        |	ИЗ
	        |		ВТ_ЧасыОтгулов КАК ВТ_ЧасыОтгулов
	        |	ГДЕ
	        |		НЕ ВТ_ЧасыОтгулов.Проект.ЭП_ПроектСопровождение) КАК ВложенныйЗапрос
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВложенныйЗапрос.ПользовательЭП_Сотрудник,
	        |	ВложенныйЗапрос.Проект,
	        |	ВложенныйЗапрос.РазделПроект,
	        |	ВложенныйЗапрос.КоличествоРабочихДней,
	        |	ВложенныйЗапрос.ТехническийПроект
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВложенныйЗапрос.ПользовательЭП_Сотрудник КАК ПользовательЭП_Сотрудник,
	        |	ВложенныйЗапрос.Проект КАК Проект,
	        |	СУММА(ВложенныйЗапрос.ОбщееКоличествоОтработанныхЧасов) КАК ОбщееКоличествоОтработанныхЧасов,
	        |	ВложенныйЗапрос.РазделПроект КАК РазделПроект,
	        |	ВложенныйЗапрос.ТехническийПроект КАК ТехническийПроект
	        |ПОМЕСТИТЬ ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		УчетВремени.Пользователь.ЭП_Сотрудник КАК ПользовательЭП_Сотрудник,
	        |		УчетВремени.Проект КАК Проект,
	        |		УчетВремени.Длительность КАК ОбщееКоличествоОтработанныхЧасов,
	        |		УчетВремени.Этап КАК РазделПроект,
	        |		УчетВремени.ТехническийПроект КАК ТехническийПроект
	        |	ИЗ
	        |		РегистрНакопления.УчетВремени КАК УчетВремени
	        |	ГДЕ
	        |		(УчетВремени.Пользователь.ЭП_Сотрудник, НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ)) В
	        |				(ВЫБРАТЬ
	        |					ВТ_ДанныеТабеляПоСотрудникам.Сотрудник КАК Сотрудник,
	        |					ВТ_ДанныеТабеляПоСотрудникам.ПериодРегистрацииДень КАК ПериодРегистрацииДень
	        |				ИЗ
	        |					ВТ_ДанныеТабеляПоСотрудникам КАК ВТ_ДанныеТабеляПоСотрудникам)
	        |		И УчетВремени.Период <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	        |		И (УчетВремени.Этап, УчетВремени.Пользователь.ЭП_Сотрудник) В
	        |				(ВЫБРАТЬ
	        |					ВТ_РазделыПроектаВТекущемПериоде.РазделПроекта КАК РазделПроекта,
	        |					ВТ_РазделыПроектаВТекущемПериоде.ПользовательЭП_Сотрудник КАК ПользовательЭП_Сотрудник
	        |				ИЗ
	        |					ВТ_РазделыПроектаВТекущемПериоде КАК ВТ_РазделыПроектаВТекущемПериоде)
	        |		И НЕ УчетВремени.Длительность = 0
	        |		И УчетВремени.Проект В
	        |				(ВЫБРАТЬ
	        |					ВТ_ПроектыСРазнесеннымиЧасами.Проект КАК Проект
	        |				ИЗ
	        |					ВТ_ПроектыСРазнесеннымиЧасами КАК ВТ_ПроектыСРазнесеннымиЧасами)
	        |		И УчетВремени.Проект.ЭП_ПроектСопровождение
	        |		И УчетВремени.Период >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |	
	        |	ОБЪЕДИНИТЬ ВСЕ
	        |	
	        |	ВЫБРАТЬ
	        |		ВТ_ЧасыОтгулов.Сотрудник,
	        |		ВТ_ЧасыОтгулов.Проект,
	        |		ВТ_ЧасыОтгулов.ДлительностьЧасы,
	        |		ВТ_ЧасыОтгулов.Этап,
	        |		ВТ_ЧасыОтгулов.ТехническийПроект
	        |	ИЗ
	        |		ВТ_ЧасыОтгулов КАК ВТ_ЧасыОтгулов
	        |	ГДЕ
	        |		ВТ_ЧасыОтгулов.ДатаОтгула <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
	        |		И ВТ_ЧасыОтгулов.ДатаОтгула >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |		И ВТ_ЧасыОтгулов.Проект.ЭП_ПроектСопровождение) КАК ВложенныйЗапрос
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВложенныйЗапрос.ПользовательЭП_Сотрудник,
	        |	ВложенныйЗапрос.Проект,
	        |	ВложенныйЗапрос.РазделПроект,
	        |	ВложенныйЗапрос.ТехническийПроект
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЭП_ОкладыСотрудниковСрезПоследних.Оклад КАК Оклад,
	        |	ВТ_УчетВремениЗаВсеПериоды.Проект КАК Проект,
	        |	ВТ_УчетВремениЗаВсеПериоды.РазделПроект КАК Этап,
	        |	ВТ_УчетВремениЗаВсеПериоды.КоличествоРабочихДней КАК КоличествоРабочихДней,
	        |	СУММА(ВТ_УчетВремениЗаВсеПериоды.Длительность) КАК ОтработанноеВремяНаЭтапеЗаТекущийПериод,
	        |	ВТ_УчетВремениЗаВсеПериоды.ПериодДень КАК ОтработанныйДень,
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп.ПроцентПЗК КАК ПроцентПЗК,
	        |	МАКСИМУМ(ВТ_УчетВремениЗаВсеПериоды.ДеньВнеПериода) КАК ОтработанныеДниВнеПериода,
	        |	ВТ_УчетВремениЗаВсеПериоды.ТехническийПроект КАК ТехническийПроект
	        |ПОМЕСТИТЬ ВТ_РасчетПоказателей
	        |ИЗ
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ОкладыСотрудников.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ), ) КАК ЭП_ОкладыСотрудниковСрезПоследних
	        |		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_ОкладыСотрудниковСрезПоследних.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	        |		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_Сотрудники.Ссылка
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетВремениЗаВсеПериоды КАК ВТ_УчетВремениЗаВсеПериоды
	        |		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ВТ_УчетВремениЗаВсеПериоды.ПользовательЭП_Сотрудник
	        |ГДЕ
	        |	НЕ ВТ_УчетВремениЗаВсеПериоды.ПользовательЭП_Сотрудник ЕСТЬ NULL
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТ_УчетВремениЗаВсеПериоды.РазделПроект,
	        |	ВТ_УчетВремениЗаВсеПериоды.Проект,
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп.ПроцентПЗК,
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник,
	        |	ЭП_ОкладыСотрудниковСрезПоследних.Оклад,
	        |	ВТ_УчетВремениЗаВсеПериоды.КоличествоРабочихДней,
	        |	ВТ_УчетВремениЗаВсеПериоды.ПериодДень,
	        |	ВТ_УчетВремениЗаВсеПериоды.ТехническийПроект
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_РасчетПоказателей.Сотрудник КАК Сотрудник,
	        |	СУММА(ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапеЗаТекущийПериод) КАК ОтработанноеВремяНаВсехПроектахЗаТекущийПериод
	        |ПОМЕСТИТЬ ВТ_ОтработанноеВремяЗаТекущийПериод
	        |ИЗ
	        |	ВТ_РасчетПоказателей КАК ВТ_РасчетПоказателей
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТ_РасчетПоказателей.Сотрудник
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
	        |	ПроектыЭП_КлючевыеСотрудники.Ссылка КАК Проект
	        |ПОМЕСТИТЬ ВТ_КлючевыеСотрудники
	        |ИЗ
	        |	Документ.ЭП_РасчетПоказателей.ИтоговоеЗначениеПЗКГруп КАК ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты.ЭП_КлючевыеСотрудники КАК ПроектыЭП_КлючевыеСотрудники
	        |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
	        |			ПО ПроектыЭП_КлючевыеСотрудники.Ссылка = Проекты.Ссылка
	        |		ПО ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник = ПроектыЭП_КлючевыеСотрудники.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетВремени КАК УчетВремени
	        |		ПО ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник = УчетВремени.Пользователь.ЭП_Сотрудник
	        |ГДЕ
	        |	ПроектыЭП_КлючевыеСотрудники.Ссылка = УчетВремени.Проект
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник,
	        |	ПроектыЭП_КлючевыеСотрудники.Ссылка
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
	        |	ЭП_Сотрудники.ГрафикРаботы.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	        |ПОМЕСТИТЬ ВТ_КалендарьСотрудника
	        |ИЗ
	        |	ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	        |		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_Сотрудники.Ссылка
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВЫБОР
	        |		КОГДА ДанныеПроизводственногоКалендаря.ВидДня = &Рабочий
	        |			ТОГДА 8
	        |		КОГДА ДанныеПроизводственногоКалендаря.ВидДня = &Предпраздничный
	        |			ТОГДА 7
	        |	КОНЕЦ КАК НормаЧасовВДень,
	        |	ВТ_КалендарьСотрудника.Сотрудник КАК Сотрудник
	        |ПОМЕСТИТЬ ВТ_ПроизводственныйКалендарьСотрудника
	        |ИЗ
	        |	ВТ_КалендарьСотрудника КАК ВТ_КалендарьСотрудника
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	        |		ПО ВТ_КалендарьСотрудника.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	        |			И (ДанныеПроизводственногоКалендаря.Дата <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ))
	        |			И (ДанныеПроизводственногоКалендаря.Дата >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ))
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	СУММА(ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Часы) КАК КоличествоЧасовПоТабелю,
	        |	КОЛИЧЕСТВО(ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень) КАК КоличествоДнейПоТабелю,
	        |	ВТ_КалендарьСотрудника.Сотрудник КАК Сотрудник
	        |ПОМЕСТИТЬ ВТ_ТабельныйУчетСотрудника
	        |ИЗ
	        |	ВТ_КалендарьСотрудника КАК ВТ_КалендарьСотрудника
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
	        |		ПО ВТ_КалендарьСотрудника.Сотрудник = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник
	        |			И (ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ))
	        |			И (ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ))
	        |ГДЕ
	        |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &ВидУчета
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТ_КалендарьСотрудника.Сотрудник
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_КалендарьСотрудника.Сотрудник КАК Сотрудник,
	        |	КОЛИЧЕСТВО(ВТ_ПроизводственныйКалендарьСотрудника.НормаЧасовВДень) КАК КоличествоРабочихДней,
	        |	ЕСТЬNULL(СУММА(ВТ_ПроизводственныйКалендарьСотрудника.НормаЧасовВДень), 0) КАК КоличествоРабочихЧасов,
	        |	ВТ_ТабельныйУчетСотрудника.КоличествоЧасовПоТабелю КАК КоличествоЧасовПоТабелю,
	        |	ВТ_ТабельныйУчетСотрудника.КоличествоДнейПоТабелю КАК КоличествоДнейПоТабелю
	        |ПОМЕСТИТЬ ВТ_СтавкаСотрудника
	        |ИЗ
	        |	ВТ_КалендарьСотрудника КАК ВТ_КалендарьСотрудника
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабельныйУчетСотрудника КАК ВТ_ТабельныйУчетСотрудника
	        |		ПО ВТ_КалендарьСотрудника.Сотрудник = ВТ_ТабельныйУчетСотрудника.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроизводственныйКалендарьСотрудника КАК ВТ_ПроизводственныйКалендарьСотрудника
	        |		ПО ВТ_КалендарьСотрудника.Сотрудник = ВТ_ПроизводственныйКалендарьСотрудника.Сотрудник
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТ_КалендарьСотрудника.Сотрудник,
	        |	ВТ_ТабельныйУчетСотрудника.КоличествоЧасовПоТабелю,
	        |	ВТ_ТабельныйУчетСотрудника.КоличествоДнейПоТабелю
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Пользователи.Ссылка КАК Пользователь,
	        |	ВТ_РасчетПоказателей.Сотрудник КАК Сотрудник,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.Оклад, 0) КАК Оклад,
	        |	ВТ_РасчетПоказателей.Проект КАК Проект,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.Этап, ЗНАЧЕНИЕ(Справочник.РазделыПроекта.ПустаяСсылка)) КАК Этап,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.КоличествоРабочихДней, 0) КАК КоличествоДнейВЭтапе,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапеЗаТекущийПериод, 0) КАК ОтработанноеВремяНаЭтапеЗаТекущийПериод,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.ПроцентПЗК, 0) КАК ПроцентПЗК,
	        |	ЕСТЬNULL(ВТ_ОтработанноеВремяЗаТекущийПериод.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод, 0) КАК ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,
	        |	ЕСТЬNULL(ВТ_КлючевыеСотрудники.Сотрудник, ЗНАЧЕНИЕ(Справочник.ЭП_Сотрудники.ПустаяСсылка)) КАК КлючевыеСотрудники,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихДней, 0) КАК КоличествоРабочихДней,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихЧасов, 0) КАК КоличествоРабочихЧасов,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоЧасовПоТабелю, 0) КАК КоличествоЧасовПоТабелю,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоДнейПоТабелю, 0) КАК КоличествоДнейПоТабелю,
	        |	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение КАК ПроектСопровождение,
	        |	ВТ_РасчетПоказателей.ОтработанныеДниВнеПериода КАК ОтработанныеДниВнеПериода,
	        |	ВТ_РасчетПоказателей.ОтработанныйДень КАК ОбщееКоличествоОтработанныхДней,
	        |	ВЫБОР
	        |		КОГДА ВТ_СотрудникиНаИспытательномСроке.Сотрудник ЕСТЬ NULL
	        |			ТОГДА ЛОЖЬ
	        |		ИНАЧЕ ИСТИНА
	        |	КОНЕЦ КАК ИспытательныйСрок
	        |ИЗ
	        |	ВТ_РасчетПоказателей КАК ВТ_РасчетПоказателей
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтработанноеВремяЗаТекущийПериод КАК ВТ_ОтработанноеВремяЗаТекущийПериод
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_ОтработанноеВремяЗаТекущийПериод.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КлючевыеСотрудники КАК ВТ_КлючевыеСотрудники
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_КлючевыеСотрудники.Сотрудник
	        |			И ВТ_РасчетПоказателей.Проект = ВТ_КлючевыеСотрудники.Проект
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкаСотрудника КАК ВТ_СтавкаСотрудника
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_СтавкаСотрудника.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = Пользователи.ЭП_Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СотрудникиНаИспытательномСроке КАК ВТ_СотрудникиНаИспытательномСроке
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_СотрудникиНаИспытательномСроке.Сотрудник
	        |ГДЕ
	        |	НЕ ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение
	        |	И НЕ ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапеЗаТекущийПериод = 0
	        |	И (НЕ НАЧАЛОПЕРИОДА(ВТ_РасчетПоказателей.Этап.ЭП_ДатаПомещенияВАрхив, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |			ИЛИ НЕ ВТ_РасчетПоказателей.Этап.ЭП_Архивный)
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Пользователь
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Пользователи.Ссылка КАК Пользователь,
	        |	ВТ_РасчетПоказателей.Сотрудник КАК Сотрудник,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.Оклад, 0) КАК Оклад,
	        |	ВТ_РасчетПоказателей.Проект КАК Проект,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.Этап, ЗНАЧЕНИЕ(Справочник.РазделыПроекта.ПустаяСсылка)) КАК Этап,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.КоличествоРабочихДней, 0) КАК КоличествоДнейВЭтапе,
	        |	ЕСТЬNULL(ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов.ОбщееКоличествоОтработанныхЧасов, 0) КАК ОтработанноеВремяНаЭтапеЗаТекущийПериод,
	        |	ЕСТЬNULL(ВТ_РасчетПоказателей.ПроцентПЗК, 0) КАК ПроцентПЗК,
	        |	ЕСТЬNULL(ВТ_ОтработанноеВремяЗаТекущийПериод.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод, 0) КАК ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,
	        |	ЕСТЬNULL(ВТ_КлючевыеСотрудники.Сотрудник, ЗНАЧЕНИЕ(Справочник.ЭП_Сотрудники.ПустаяСсылка)) КАК КлючевыеСотрудники,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихДней, 0) КАК КоличествоРабочихДней,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихЧасов, 0) КАК КоличествоРабочихЧасов,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоЧасовПоТабелю, 0) КАК КоличествоЧасовПоТабелю,
	        |	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоДнейПоТабелю, 0) КАК КоличествоДнейПоТабелю,
	        |	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение КАК ПроектСопровождение,
	        |	ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов.ТехническийПроект КАК ТехническийПроект,
	        |	ВТ_РасчетПоказателей.ОтработанныеДниВнеПериода КАК ОтработанныеДниВнеПериода,
	        |	ВТ_РасчетПоказателей.ОтработанныйДень КАК ОбщееКоличествоОтработанныхДней,
	        |	ВЫБОР
	        |		КОГДА ВТ_СотрудникиНаИспытательномСроке.Сотрудник ЕСТЬ NULL
	        |			ТОГДА ЛОЖЬ
	        |		ИНАЧЕ ИСТИНА
	        |	КОНЕЦ КАК ИспытательныйСрок
	        |ИЗ
	        |	ВТ_РасчетПоказателей КАК ВТ_РасчетПоказателей
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтработанноеВремяЗаТекущийПериод КАК ВТ_ОтработанноеВремяЗаТекущийПериод
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_ОтработанноеВремяЗаТекущийПериод.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КлючевыеСотрудники КАК ВТ_КлючевыеСотрудники
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_КлючевыеСотрудники.Сотрудник
	        |			И ВТ_РасчетПоказателей.Проект = ВТ_КлючевыеСотрудники.Проект
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкаСотрудника КАК ВТ_СтавкаСотрудника
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_СтавкаСотрудника.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = Пользователи.ЭП_Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов КАК ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов
	        |		ПО ВТ_РасчетПоказателей.Проект = ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов.Проект
	        |			И ВТ_РасчетПоказателей.Этап = ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов.РазделПроект
	        |			И ВТ_РасчетПоказателей.Сотрудник = ВТ_УчетВремениЗаВсеПериодыВРазрезеТехПроектов.ПользовательЭП_Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СотрудникиНаИспытательномСроке КАК ВТ_СотрудникиНаИспытательномСроке
	        |		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_СотрудникиНаИспытательномСроке.Сотрудник
	        |ГДЕ
	        |	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение
	        |	И НЕ ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапеЗаТекущийПериод = 0
	        |	И (НЕ НАЧАЛОПЕРИОДА(ВТ_РасчетПоказателей.Этап.ЭП_ДатаПомещенияВАрхив, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
	        |			ИЛИ НЕ ВТ_РасчетПоказателей.Этап.ЭП_Архивный)
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Пользователь";	

КонецФункции 

Процедура ЗаполнитьПереработкиПоСотрудникамНаСервере()
	
	ПереработкиПоСотрудникам.Очистить();
	Если НЕ ГруппаРасчетныхПрофилей.РассчитываютсяПереработки Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Период КАК Период,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Проект КАК Проект,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Сотрудник КАК Сотрудник,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Отгул КАК Отгул,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.КоличествоОборот КАК План
	               |ПОМЕСТИТЬ ВТ_ПлановыеЧасы
	               |ИЗ
	               |	РегистрНакопления.ЭП_СогласованныеЧасыПереработок.Обороты(&НачалоПериода, &ОкончаниеПериода, День, ) КАК ЭП_СогласованныеЧасыПереработокОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПлановыеЧасы.Период КАК Период,
	               |	ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник,
	               |	МАКСИМУМ(ВТ_ПлановыеЧасы.План) КАК План
	               |ПОМЕСТИТЬ ВТ_МаксимумЧасов
	               |ИЗ
	               |	ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ПлановыеЧасы.Период,
	               |	ВТ_ПлановыеЧасы.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПлановыеЧасы.Период КАК Период,
	               |	ВТ_ПлановыеЧасы.Проект КАК Проект,
	               |	ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник,
	               |	ВТ_ПлановыеЧасы.Отгул КАК Отгул,
	               |	ВТ_МаксимумЧасов.План КАК План
	               |ПОМЕСТИТЬ ВТ_ПроектМаксимумЧасовВДень
	               |ИЗ
	               |	ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаксимумЧасов КАК ВТ_МаксимумЧасов
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_МаксимумЧасов.Период
	               |			И ВТ_ПлановыеЧасы.План = ВТ_МаксимумЧасов.План
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_МаксимумЧасов.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник КАК Сотрудник,
	               |	СУММА(ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Часы) КАК Часы,
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень КАК ПериодРегистрацииДень
	               |ПОМЕСТИТЬ ВТ_Табель
	               |ИЗ
	               |	РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
	               |ГДЕ
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &ВидУчетаВремени
	               |	И ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрации <= &ОкончаниеПериода
	               |	И ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрации >= &НачалоПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник,
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УчетВремениОбороты.Период КАК Период,
	               |	СУММА(УчетВремениОбороты.ДлительностьОборот / 3600) КАК Факт,
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТ_Факт
	               |ИЗ
	               |	РегистрНакопления.УчетВремени.Обороты(
	               |			&НачалоПериода,
	               |			&ОкончаниеПериода,
	               |			День,
	               |			Пользователь.ЭП_Сотрудник В
	               |				(ВЫБРАТЬ
	               |					ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник
	               |				ИЗ
	               |					ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы)) КАК УчетВремениОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УчетВремениОбороты.Период,
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПлановыеЧасы.Период КАК Дата,
	               |	ВТ_ПроектМаксимумЧасовВДень.Проект КАК Проект,
	               |	ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник,
	               |	ВТ_ПлановыеЧасы.Отгул КАК Отгул,
	               |	ВТ_ПлановыеЧасы.План КАК План,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_Факт.Факт, 0) - ЕСТЬNULL(ВТ_Табель.Часы, 0) < 0
	               |			ТОГДА 0
	               |		КОГДА ВТ_ПлановыеЧасы.План < ЕСТЬNULL(ВТ_Факт.Факт, 0) - ЕСТЬNULL(ВТ_Табель.Часы, 0)
	               |			ТОГДА ВТ_ПлановыеЧасы.План
	               |		ИНАЧЕ ЕСТЬNULL(ВТ_Факт.Факт, 0) - ЕСТЬNULL(ВТ_Табель.Часы, 0)
	               |	КОНЕЦ КАК Факт
	               |ИЗ
	               |	ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Табель КАК ВТ_Табель
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_Табель.ПериодРегистрацииДень
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_Табель.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Факт КАК ВТ_Факт
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_Факт.Период
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_Факт.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроектМаксимумЧасовВДень КАК ВТ_ПроектМаксимумЧасовВДень
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_ПроектМаксимумЧасовВДень.Период
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_ПроектМаксимумЧасовВДень.Сотрудник"; 
	Запрос.УстановитьПараметр("ВидУчетаВремени", ПредопределенноеЗначение("Справочник.ЭП_ВидыУчетаВремени.Явка"));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		НовСтр = ПереработкиПоСотрудникам.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли