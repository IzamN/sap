#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если ДатаПоказателейЗакрыта(ТекущийОбъект) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры
 
&НаСервере
Функция ДатаПоказателейЗакрыта(ТекущийОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.РасчетныйПрофиль КАК РасчетныйПрофиль
	|ИЗ
	|	РегистрСведений.ЭП_ДатыЗакрытияРедактированияПоказателей.СрезПоследних(, РасчетныйПрофиль В (&МассивПрофилей)) КАК ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних
	|ГДЕ
	|	ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Период >= &Дата
	|	И НЕ ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Регистратор = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ТекущийОбъект.Ссылка);
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(ТекущийОбъект.Дата));
	Запрос.УстановитьПараметр("МассивПрофилей", ТекущийОбъект.РасчетныеПрофили.ВыгрузитьКолонку("РасчетныйПрофиль"));
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандПоЗаполнениюТабличныхЧастейФормы

&НаКлиенте
Процедура ЗаполнитьВсе(Команда)
	ЗаполнитьВсеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
    ДокументОбъект.ЗаполнитьВсе();
    ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРасчетныеПрофили(Команда)
	ЗаполнитьРасчетныеПрофилиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРасчетныеПрофилиНаСервере()
	
	Объект.РасчетныеПрофили.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ПрофилиРасчетаРезультативности.Ссылка КАК РасчетныйПрофиль
	|ИЗ
	|	Справочник.ЭП_ПрофилиРасчетаРезультативности КАК ЭП_ПрофилиРасчетаРезультативности
	|ГДЕ
	|	ЭП_ПрофилиРасчетаРезультативности.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Объект.ГруппаРасчетныхПрофилей);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НовСтрока = Объект.РасчетныеПрофили.Добавить();		
		ЗаполнитьЗначенияСвойств(НовСтрока, Выборка);
	КонецЦикла;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ЗаполнитьДетальныеКоэффициенты(Команда)
	ЗаполнитьДетальныеКоэффициентыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДетальныеКоэффициентыНаСервере()
	
	Объект.ДетальныеКоэффициенты.Очистить();
	
	ПериодОценивания = НачалоМесяца(Объект.Дата);
    Отбор = Новый Структура("ПрофильРасчета", Объект.РасчетныеПрофили.Выгрузить().ВыгрузитьКолонку("РасчетныйПрофиль"));
	Результат = Отчеты.ЭП_РасчетРезультативности.ПолучитьРасчетРезультативности(ПериодОценивания, Отбор);
	
	// Уровни дерева: Профиль расчета, Сотрудник, Показатель, Детальные записи
	// Нужна детализация по сотруднику
	Для Каждого Строка1 Из Результат.Строки Цикл // Профиль расчета
		Для Каждого Строка2 Из Строка1.Строки Цикл // Сотрудник
			
			НоваяСтрока = Объект.ДетальныеКоэффициенты.Добавить();
			НоваяСтрока.РасчетныйПрофиль = Строка2.ПрофильРасчета;
			НоваяСтрока.Сотрудник = Строка2.Сотрудник;
			НоваяСтрока.Значение = Строка2.Индекс;

		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоэффициенты(Команда)
	ЗаполнитьКоэффициентыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоэффициентыНаСервере()
	
	ТаблицаКоэффициентов = Объект.ДетальныеКоэффициенты.Выгрузить();
	ТаблицаКоэффициентов.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ТаблицаКоэффициентов.ЗаполнитьЗначения(1, "Количество");
	ТаблицаКоэффициентов.Свернуть("Сотрудник", "Значение, Количество");
	
	Для Каждого СтрокаТаблицы Из ТаблицаКоэффициентов Цикл
		СтрокаТаблицы.Значение = СтрокаТаблицы.Значение/СтрокаТаблицы.Количество;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаКоэффициентов.Сотрудник КАК Сотрудник,
	               |	ТаблицаКоэффициентов.Значение КАК Значение
	               |ПОМЕСТИТЬ ВТ_Сотрудники
	               |ИЗ
	               |	&ТаблицаКоэффициентов КАК ТаблицаКоэффициентов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_Сотрудники.Департамент КАК Департамент,
	               |	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	               |	ВТ_Сотрудники.Значение КАК Значение
	               |ИЗ
	               |	ВТ_Сотрудники КАК ВТ_Сотрудники
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	               |		ПО ВТ_Сотрудники.Сотрудник = ЭП_Сотрудники.Ссылка";
	Запрос.УстановитьПараметр("ТаблицаКоэффициентов", ТаблицаКоэффициентов);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Объект.РассчитанныеКоэффициенты.Загрузить(Выгрузка);	

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФормулы(Команда)
	ЗаполнитьФормулыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормулыНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.Ссылка КАК РасчетныйПрофиль,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.Показатель КАК Показатель,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.ВесовойКоэффициент КАК ВесовойКоэффициент,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.ЦелевоеЗначение КАК ЦелевоеЗначение,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.СпособАгрегации КАК СпособАгрегации
	|ИЗ
	|	Справочник.ЭП_ПрофилиРасчетаРезультативности.Показатели КАК ЭП_ПрофилиРасчетаРезультативностиПоказатели
	|ГДЕ
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.Ссылка В(&МассивПрофилей)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетныйПрофиль,
	|	ЭП_ПрофилиРасчетаРезультативностиПоказатели.НомерСтроки";
	
	Запрос.УстановитьПараметр("МассивПрофилей", Объект.РасчетныеПрофили.Выгрузить().ВыгрузитьКолонку("РасчетныйПрофиль"));
	Объект.ФормулыПоказателей.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроектныеПоказатели(Команда)
	ЗаполнитьПроектныеПоказателиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПроектныеПоказателиНаСервере()
	
	Объект.ПроектныеПоказатели.Очистить();
	
	Если Объект.ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЭП_КоманднаяРаботаПоПроекту.Проект КАК Проект,
		               |	ЭП_КоманднаяРаботаПоПроекту.Показатель КАК Показатель,
		               |	ЭП_КоманднаяРаботаПоПроекту.Значение КАК Значение
		               |ИЗ
		               |	РегистрСведений.ЭП_КоманднаяРаботаПоПроекту КАК ЭП_КоманднаяРаботаПоПроекту
		               |ГДЕ
		               |	ЭП_КоманднаяРаботаПоПроекту.ПериодОценивания = &ПериодОценивания
		               |	И ЭП_КоманднаяРаботаПоПроекту.Проект.ЭП_Архивный = ЗНАЧЕНИЕ(Перечисление.ЭП_СтатусПроекта.Действующий)
		               |			И НЕ НАЧАЛОПЕРИОДА(ЭП_КоманднаяРаботаПоПроекту.Проект.ЭП_ДатаОтправкиВАрхив, МЕСЯЦ) <= &ПериодОценивания";
		
		Запрос.УстановитьПараметр("ПериодОценивания", НачалоМесяца(Объект.Дата));
		
		Выгрузка = Запрос.Выполнить().Выгрузить();
		Объект.ПроектныеПоказатели.Загрузить(Выгрузка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИтогиПЗК(Команда)
	ЗаполнитьИтогиПЗКНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИтогиПЗКНаСервере()
	
	//Исправлен второй запрос по порядку их следования, старая часть запроса внизу процедуры  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПроектыКИсключению.Проект КАК Проект
	|ПОМЕСТИТЬ ВТ_ПроектыКИсключению
	|ИЗ
	|	&ПроектыКИсключению КАК ПроектыКИсключению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетВремени.Проект КАК Проект,
	|	УчетВремени.Пользователь.ЭП_Сотрудник КАК Сотрудник,
	|	СУММА(УчетВремени.Длительность) КАК Значение
	|ПОМЕСТИТЬ ВТ_ЧасыПоПроектам
	|ИЗ
	|	РегистрНакопления.УчетВремени КАК УчетВремени
	|ГДЕ
	|	УчетВремени.Период >= &НачалоПериода
	|	И УчетВремени.Период <= &КонецПериода
	|	И НЕ УчетВремени.Длительность = 0
	|	И (УчетВремени.Проект.ЭП_Архивный = ЗНАЧЕНИЕ(Перечисление.ЭП_СтатусПроекта.Действующий) И НЕ НачалоПериода(УчетВремени.Проект.ЭП_ДатаОтправкиВАрхив, Месяц) <= &НачалоПериода)	
	|	И НЕ УчетВремени.Проект В
	|				(ВЫБРАТЬ
	|					ВТ_ПроектыКИсключению.Проект КАК Проект
	|				ИЗ
	|					ВТ_ПроектыКИсключению КАК ВТ_ПроектыКИсключению)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетВремени.Пользователь.ЭП_Сотрудник,
	|	УчетВремени.Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчетВремени.Пользователь.ЭП_Сотрудник КАК Сотрудник,
	|	СУММА(УчетВремени.Длительность) КАК Часы
	|ПОМЕСТИТЬ ВТ_ЧасыПоСотрудникам
	|ИЗ
	|	РегистрНакопления.УчетВремени КАК УчетВремени
	|ГДЕ
	|	УчетВремени.Период >= &НачалоПериода
	|	И УчетВремени.Период <= &КонецПериода
	|	И (ЭП_КоманднаяРаботаПоПроекту.Проект.ЭП_Архивный = ЗНАЧЕНИЕ(Перечисление.ЭП_СтатусПроекта.Действующий) И НЕ НачалоПериода(ЭП_КоманднаяРаботаПоПроекту.Проект.ЭП_ДатаОтправкиВАрхив, Месяц) <= &ПериодОценивания) 
	|	И НЕ УчетВремени.Проект В
	|				(ВЫБРАТЬ
	|					ВТ_ПроектыКИсключению.Проект КАК Проект
	|				ИЗ
	|					ВТ_ПроектыКИсключению КАК ВТ_ПроектыКИсключению)
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетВремени.Пользователь.ЭП_Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыПоПроектам.Проект КАК Проект,
	|	КоэффициентыПоПроектам.Значение КАК Коэффициент,
	|	КоэффициентыПоПроектам.Показатель КАК Показатель
	|ПОМЕСТИТЬ ВТ_КоэффициентыПоПроектамВРазрезеПоказателей
	|ИЗ
	|	&КоэффициентыПоПроектам КАК КоэффициентыПоПроектам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КоэффициентыПоПроектамВРазрезеПоказателей.Проект КАК Проект,
	|	СУММА(ВТ_КоэффициентыПоПроектамВРазрезеПоказателей.Коэффициент) КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_ИтоговыеЗначенияПоказателейПоПроектам
	|ИЗ
	|	ВТ_КоэффициентыПоПроектамВРазрезеПоказателей КАК ВТ_КоэффициентыПоПроектамВРазрезеПоказателей
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КоэффициентыПоПроектамВРазрезеПоказателей.Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧКоэффициентыПоСотрудникам.Сотрудник КАК Сотрудник,
	|	ТЧКоэффициентыПоСотрудникам.Значение КАК Значение
	|ПОМЕСТИТЬ ВТ_КоэффициентыСотрудников
	|ИЗ
	|	&ТЧКоэффициентыПоСотрудникам КАК ТЧКоэффициентыПоСотрудникам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЧасыПоПроектам.Проект КАК Проект,
	|	ВТ_КоэффициентыСотрудников.Сотрудник КАК Сотрудник,
	|	ВТ_ИтоговыеЗначенияПоказателейПоПроектам.Коэффициент + ВТ_КоэффициентыСотрудников.Значение КАК ИтоговыйКоэффициент
	|ПОМЕСТИТЬ ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов
	|ИЗ
	|	ВТ_КоэффициентыСотрудников КАК ВТ_КоэффициентыСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЧасыПоПроектам КАК ВТ_ЧасыПоПроектам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИтоговыеЗначенияПоказателейПоПроектам КАК ВТ_ИтоговыеЗначенияПоказателейПоПроектам
	|			ПО ВТ_ЧасыПоПроектам.Проект = ВТ_ИтоговыеЗначенияПоказателейПоПроектам.Проект
	|		ПО ВТ_КоэффициентыСотрудников.Сотрудник = ВТ_ЧасыПоПроектам.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЧасыПоСотрудникам.Сотрудник КАК Сотрудник,
	|	ВТ_ЧасыПоПроектам.Проект КАК Проект,
	|	ВЫБОР
	|		КОГДА ВТ_ЧасыПоСотрудникам.Часы = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВТ_ЧасыПоПроектам.Значение / ВТ_ЧасыПоСотрудникам.Часы
	|	КОНЕЦ КАК КоэфициентЧасовНаПроекте
	|ПОМЕСТИТЬ ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте
	|ИЗ
	|	ВТ_ЧасыПоСотрудникам КАК ВТ_ЧасыПоСотрудникам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЧасыПоПроектам КАК ВТ_ЧасыПоПроектам
	|		ПО ВТ_ЧасыПоСотрудникам.Сотрудник = ВТ_ЧасыПоПроектам.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Проект КАК Проект,
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Сотрудник КАК Сотрудник,
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.ИтоговыйКоэффициент КАК Значение,
	|	ОКР(ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте.КоэфициентЧасовНаПроекте, 2) КАК КоэффициентЗагрузки,
	|	ЭП_Сотрудники.Департамент КАК Департамент
	|ИЗ
	|	ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов КАК ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте КАК ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте
	|		ПО ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Проект = ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте.Проект
	|			И ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Сотрудник = ВТ_РазбиениеЗагрузкиСотрудниковНаПроекте.Сотрудник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	|		ПО ВТ_ИтоговыеКоэффициентыПоСотрудникамВРазрезеПроектов.Сотрудник = ЭП_Сотрудники.Ссылка
	|ИТОГИ ПО
	|	Сотрудник"; 
	
	//Запрос.УстановитьПараметр("ПериодОценивания", НачалоМесяца(Объект.Дата));
	
	//Добавленны параметры
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.Дата));
	////////////////////////////////////////////
	
	//Запрос.УстановитьПараметр("Показатель", Константы.ЭП_ПоказательПоУмолчанию.Получить());  
	Запрос.УстановитьПараметр("КоэффициентыПоПроектам", Объект.ПроектныеПоказатели.Выгрузить());
	Запрос.УстановитьПараметр("ТЧКоэффициентыПоСотрудникам", Объект.РассчитанныеКоэффициенты.Выгрузить()); 
	Запрос.УстановитьПараметр("ПроектыКИсключению", Объект.ПроектыКИсключениюИзРасчета.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Объект.ИтогиПЗК.Очистить();
	
	Пока Выборка.Следующий() Цикл
	
		СуммаКоэффициента = 1;
		
		ВыборкаДетальныеЗаписи = Выборка.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
			НовСтрока = Объект.ИтогиПЗК.Добавить();			
			ЗаполнитьЗначенияСвойств(НовСтрока,ВыборкаДетальныеЗаписи);
			
			Если СуммаКоэффициента > ВыборкаДетальныеЗаписи.КоэффициентЗагрузки Тогда
			
				СуммаКоэффициента = СуммаКоэффициента - ВыборкаДетальныеЗаписи.КоэффициентЗагрузки;
				
			Иначе
				
				НовСтрока.КоэффициентЗагрузки = СуммаКоэффициента;
			
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИтоговуюТаблицуПЗК(Команда)
	ЗаполнитьГруппировкуИтоговПЗК();
КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьГруппировкуИтоговПЗК()
	
	Если Объект.ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТЧИтогиПЗК.Департамент КАК Департамент,
		               |	ТЧИтогиПЗК.Сотрудник КАК Сотрудник,
		               |	ТЧИтогиПЗК.Значение КАК Значение,
		               |	ТЧИтогиПЗК.КоэффициентЗагрузки КАК КоэффициентЗагрузки
		               |ПОМЕСТИТЬ ВТ_ИтогиПЗК
		               |ИЗ
		               |	&ТЧИтогиПЗК КАК ТЧИтогиПЗК
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_ИтогиПЗК.Департамент КАК Департамент,
		               |	ВТ_ИтогиПЗК.Сотрудник КАК Сотрудник,
		               |	СУММА(ВТ_ИтогиПЗК.Значение * ВТ_ИтогиПЗК.КоэффициентЗагрузки) КАК Значение
		               |ИЗ
		               |	ВТ_ИтогиПЗК КАК ВТ_ИтогиПЗК
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_ИтогиПЗК.Департамент,
		               |	ВТ_ИтогиПЗК.Сотрудник";
		Запрос.УстановитьПараметр("ТЧИтогиПЗК", Объект.ИтогиПЗК.Выгрузить());
		Объект.ИтоговоеЗначениеПЗКГруп.Загрузить(Запрос.Выполнить().Выгрузить());
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТЧРассчитанныеКоэффициенты.Департамент КАК Департамент,
		               |	ТЧРассчитанныеКоэффициенты.Сотрудник КАК Сотрудник,
		               |	ТЧРассчитанныеКоэффициенты.Значение КАК Значение
		               |ПОМЕСТИТЬ ВТ_РассчитанныеКоэффициенты
		               |ИЗ
		               |	&ТЧРассчитанныеКоэффициенты КАК ТЧРассчитанныеКоэффициенты
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_РассчитанныеКоэффициенты.Департамент КАК Департамент,
		               |	ВТ_РассчитанныеКоэффициенты.Сотрудник КАК Сотрудник,
		               |	СУММА(ВТ_РассчитанныеКоэффициенты.Значение) КАК Значение
		               |ИЗ
		               |	ВТ_РассчитанныеКоэффициенты КАК ВТ_РассчитанныеКоэффициенты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_РассчитанныеКоэффициенты.Департамент,
		               |	ВТ_РассчитанныеКоэффициенты.Сотрудник";
		
		Запрос.УстановитьПараметр("ТЧРассчитанныеКоэффициенты", Объект.РассчитанныеКоэффициенты.Выгрузить());
		Объект.ИтоговоеЗначениеПЗКГруп.Загрузить(Запрос.Выполнить().Выгрузить());

	КонецЕсли;

КонецПроцедуры

// Заполняет табличные части ВводныеДляНачисленияПремий и НачисленияПремий
&НаСервере
Процедура ЗаполнитьНачислениеПремийНаСервере()
	
	Если Объект.ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель Тогда
		// Запрос возвращает данные для заполнения табличных частей ВводныеДляНачисленияПремий и НачисленияПремий
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
		|	ТЧИтоговоеЗначениеПЗКГруп.Значение КАК ПроцентПЗК
		|ПОМЕСТИТЬ ВТ_ТЧИтоговоеЗначениеПЗКГруп
		|ИЗ
		|	&ТЧИтоговоеЗначениеПЗКГруп КАК ТЧИтоговоеЗначениеПЗКГруп
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПроектыЭП_ТаблицаОценивания.Ссылка КАК Ссылка,
		|	КОЛИЧЕСТВО(ПроектыЭП_ТаблицаОценивания.Оценивает) КАК Оценивает
		|ПОМЕСТИТЬ ВТ_ПроектыКОцениванию
		|ИЗ
		|	Справочник.Проекты.ЭП_ТаблицаОценивания КАК ПроектыЭП_ТаблицаОценивания
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроектыЭП_ТаблицаОценивания.Ссылка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(ПроектыЭП_ТаблицаОценивания.Оценивает) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_СотрудникиНаИспытательномСроке
		|ИЗ
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.Достижения КАК ЭП_СотрудникиДостижения
		|		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_СотрудникиДостижения.Ссылка
		|ГДЕ
		|	(ЭП_СотрудникиДостижения.ДатаФакт > КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|			ИЛИ ЭП_СотрудникиДостижения.ДатаФакт = &ПустаяДата)
		|	И ЭП_СотрудникиДостижения.ВидДостижения = &ВидДостижения	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	УчетВремениОбороты.Проект КАК Проект,
		|	УчетВремениОбороты.Пользователь.ЭП_Сотрудник КАК ПользовательЭП_Сотрудник,
		|	УчетВремениОбороты.ТехническийПроект КАК ТехническийПроект
		|ПОМЕСТИТЬ ВТ_ПроектыСРазнесеннымиЧасами
		|ИЗ
		|	РегистрНакопления.УчетВремени.Обороты(
		|			НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ),
		|			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
		|			,
		|			Проект В
		|					(ВЫБРАТЬ
		|						ВТ_ПроектыКОцениванию.Ссылка КАК Ссылка
		|					ИЗ
		|						ВТ_ПроектыКОцениванию КАК ВТ_ПроектыКОцениванию)
		|				И Пользователь.ЭП_Сотрудник В
		|					(ВЫБРАТЬ
		|						ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник
		|					ИЗ
		|						ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп)) КАК УчетВремениОбороты
		|ГДЕ
		|	НЕ УчетВремениОбороты.ДлительностьОборот = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭП_ОкладыСотрудниковСрезПоследних.Оклад КАК Оклад,
		|	УчетВремени.Проект КАК Проект,
		|	УчетВремени.ТехническийПроект.РазделПроекта.Ссылка КАК Этап,
		|	УчетВремени.ТехническийПроект.РазделПроекта.КоличествоРабочихДней КАК КоличествоРабочихДней,
		|	СУММА(ВЫБОР
		|			КОГДА УчетВремени.Период >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
		|				ТОГДА УчетВремени.Длительность
		|		КОНЕЦ) КАК ОтработанноеВремяНаЭтапеЗаТекущийПериод,
		|	СУММА(УчетВремени.Длительность) КАК ОтработанноеВремяНаЭтапе,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ)) КАК ОтработанныйДень,
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп.ПроцентПЗК КАК ПроцентПЗК,
		|	ВЫБОР
		|		КОГДА УчетВремени.Период < НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
		|			ТОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ УчетВремени.Период)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтработанныеДниВнеПериода,
		|	УчетВремени.ТехническийПроект КАК ТехническийПроект
		|ПОМЕСТИТЬ ВТ_РасчетПоказателей
		|ИЗ
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ОкладыСотрудников.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ), ) КАК ЭП_ОкладыСотрудниковСрезПоследних
		|		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_ОкладыСотрудниковСрезПоследних.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
		|		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_Сотрудники.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетВремени КАК УчетВремени
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
		|			ПО УчетВремени.Пользователь.ЭП_Сотрудник = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник
		|				И (НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ) = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень)
		|		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = УчетВремени.Пользователь.ЭП_Сотрудник
		|			И (УчетВремени.Длительность <> 0)
		|			И (УчетВремени.Период <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ))
		|ГДЕ
		|	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &ВидУчета
		|	 И (УчетВремени.Проект, УчетВремени.Пользователь.ЭП_Сотрудник, УчетВремени.ТехническийПроект) В
		|			(ВЫБРАТЬ
		|				ВТ_ПроектыСРазнесеннымиЧасами.Проект КАК Проект,
		|				ВТ_ПроектыСРазнесеннымиЧасами.ПользовательЭП_Сотрудник КАК ПользовательЭП_Сотрудник,
		|				ВТ_ПроектыСРазнесеннымиЧасами.ТехническийПроект КАК ТехническийПроект
		|			ИЗ
		|				ВТ_ПроектыСРазнесеннымиЧасами КАК ВТ_ПроектыСРазнесеннымиЧасами)
		|	И НЕ ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник В
		|				(ВЫБРАТЬ
		|					ВТ_СотрудникиНаИспытательномСроке.Сотрудник КАК Сотрудник
		|				ИЗ
		|					ВТ_СотрудникиНаИспытательномСроке КАК ВТ_СотрудникиНаИспытательномСроке)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭП_ОкладыСотрудниковСрезПоследних.Оклад,
		|	УчетВремени.Проект,
		|	УчетВремени.ТехническийПроект.РазделПроекта.Ссылка,
		|	УчетВремени.ТехническийПроект.РазделПроекта.КоличествоРабочихДней,
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник,
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп.ПроцентПЗК,
		|	НАЧАЛОПЕРИОДА(УчетВремени.Период, ДЕНЬ),
		|	УчетВремени.Период,
		|	УчетВремени.ТехническийПроект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РасчетПоказателей.Сотрудник КАК Сотрудник,
		|	СУММА(ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапеЗаТекущийПериод) КАК ОтработанноеВремяНаВсехПроектахЗаТекущийПериод
		|ПОМЕСТИТЬ ВТ_ОтработанноеВремяЗаТекущийПериод
		|ИЗ
		|	ВТ_РасчетПоказателей КАК ВТ_РасчетПоказателей
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_РасчетПоказателей.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
		|	ПроектыЭП_КлючевыеСотрудники.Ссылка КАК Проект
		|ПОМЕСТИТЬ ВТ_КлючевыеСотрудники
		|ИЗ
		|	Документ.ЭП_РасчетПоказателей.ИтоговоеЗначениеПЗКГруп КАК ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты.ЭП_КлючевыеСотрудники КАК ПроектыЭП_КлючевыеСотрудники
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|			ПО ПроектыЭП_КлючевыеСотрудники.Ссылка = Проекты.Ссылка
		|		ПО ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник = ПроектыЭП_КлючевыеСотрудники.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УчетВремени КАК УчетВремени
		|		ПО ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник = УчетВремени.Пользователь.ЭП_Сотрудник
		|ГДЕ
		|	ПроектыЭП_КлючевыеСотрудники.Ссылка = УчетВремени.Проект
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭП_РасчетПоказателейИтоговоеЗначениеПЗКГруп.Сотрудник,
		|	ПроектыЭП_КлючевыеСотрудники.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник КАК Сотрудник,
		|	ЭП_Сотрудники.ГрафикРаботы.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
		|ПОМЕСТИТЬ ВТ_КалендарьСотрудника
		|ИЗ
		|	ВТ_ТЧИтоговоеЗначениеПЗКГруп КАК ВТ_ТЧИтоговоеЗначениеПЗКГруп
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
		|		ПО ВТ_ТЧИтоговоеЗначениеПЗКГруп.Сотрудник = ЭП_Сотрудники.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ДанныеПроизводственногоКалендаря.ВидДня = &Рабочий
		|			ТОГДА 8
		|		КОГДА ДанныеПроизводственногоКалендаря.ВидДня = &Предпраздничный
		|			ТОГДА 7
		|	КОНЕЦ КАК НормаЧасовВДень,
		|	ВТ_КалендарьСотрудника.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ПроизводственныйКалендарьСотрудника
		|ИЗ
		|	ВТ_КалендарьСотрудника КАК ВТ_КалендарьСотрудника
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
		|		ПО ВТ_КалендарьСотрудника.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
		|			И (ДанныеПроизводственногоКалендаря.Дата <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ))
		|			И (ДанныеПроизводственногоКалендаря.Дата >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Часы) КАК КоличествоЧасовПоТабелю,
		|	КОЛИЧЕСТВО(ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень) КАК КоличествоДнейПоТабелю,
		|	ВТ_КалендарьСотрудника.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_ТабельныйУчетСотрудника
		|ИЗ
		|	ВТ_КалендарьСотрудника КАК ВТ_КалендарьСотрудника
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
		|		ПО ВТ_КалендарьСотрудника.Сотрудник = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник
		|			И (ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ))
		|			И (ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень >= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ))
		|ГДЕ
		|	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &ВидУчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_КалендарьСотрудника.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_КалендарьСотрудника.Сотрудник КАК Сотрудник,
		|	КОЛИЧЕСТВО(ВТ_ПроизводственныйКалендарьСотрудника.НормаЧасовВДень) КАК КоличествоРабочихДней,
		|	ЕСТЬNULL(СУММА(ВТ_ПроизводственныйКалендарьСотрудника.НормаЧасовВДень), 0) КАК КоличествоРабочихЧасов,
		|	ВТ_ТабельныйУчетСотрудника.КоличествоЧасовПоТабелю КАК КоличествоЧасовПоТабелю,
		|	ВТ_ТабельныйУчетСотрудника.КоличествоДнейПоТабелю КАК КоличествоДнейПоТабелю
		|ПОМЕСТИТЬ ВТ_СтавкаСотрудника
		|ИЗ
		|	ВТ_КалендарьСотрудника КАК ВТ_КалендарьСотрудника
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабельныйУчетСотрудника КАК ВТ_ТабельныйУчетСотрудника
		|		ПО ВТ_КалендарьСотрудника.Сотрудник = ВТ_ТабельныйУчетСотрудника.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроизводственныйКалендарьСотрудника КАК ВТ_ПроизводственныйКалендарьСотрудника
		|		ПО ВТ_КалендарьСотрудника.Сотрудник = ВТ_ПроизводственныйКалендарьСотрудника.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_КалендарьСотрудника.Сотрудник,
		|	ВТ_ТабельныйУчетСотрудника.КоличествоЧасовПоТабелю,
		|	ВТ_ТабельныйУчетСотрудника.КоличествоДнейПоТабелю
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь,
		|	ВТ_РасчетПоказателей.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.Оклад, 0) КАК Оклад,
		|	ВТ_РасчетПоказателей.Проект КАК Проект,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.Этап, ЗНАЧЕНИЕ(Справочник.РазделыПроекта.ПустаяСсылка)) КАК Этап,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.КоличествоРабочихДней, 0) КАК КоличествоДнейВЭтапе,
		|	ЕСТЬNULL(СУММА(ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапеЗаТекущийПериод), 0) КАК ОтработанноеВремяНаЭтапеЗаТекущийПериод,
		|	СУММА(ЕСТЬNULL(ВТ_РасчетПоказателей.ОтработанныйДень, 0)) КАК ОбщееКоличествоОтработанныхДней,
		|	СУММА(ЕСТЬNULL(ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапе, 0)) КАК ОтработанноеВремяНаЭтапе,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.ПроцентПЗК, 0) КАК ПроцентПЗК,
		|	ЕСТЬNULL(СУММА(ВТ_РасчетПоказателей.ОтработанныеДниВнеПериода), 0) КАК ОтработанныеДниВнеПериода,
		|	ЕСТЬNULL(ВТ_ОтработанноеВремяЗаТекущийПериод.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод, 0) КАК ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,
		|	ЕСТЬNULL(ВТ_КлючевыеСотрудники.Сотрудник, ЗНАЧЕНИЕ(Справочник.ЭП_Сотрудники.ПустаяСсылка)) КАК КлючевыеСотрудники,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихДней, 0) КАК КоличествоРабочихДней,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихЧасов, 0) КАК КоличествоРабочихЧасов,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоЧасовПоТабелю, 0) КАК КоличествоЧасовПоТабелю,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоДнейПоТабелю, 0) КАК КоличествоДнейПоТабелю,
		|	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение КАК ПроектСопровождение
		|ИЗ
		|	ВТ_РасчетПоказателей КАК ВТ_РасчетПоказателей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтработанноеВремяЗаТекущийПериод КАК ВТ_ОтработанноеВремяЗаТекущийПериод
		|		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_ОтработанноеВремяЗаТекущийПериод.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КлючевыеСотрудники КАК ВТ_КлючевыеСотрудники
		|		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_КлючевыеСотрудники.Сотрудник
		|			И ВТ_РасчетПоказателей.Проект = ВТ_КлючевыеСотрудники.Проект
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкаСотрудника КАК ВТ_СтавкаСотрудника
		|		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_СтавкаСотрудника.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ВТ_РасчетПоказателей.Сотрудник = Пользователи.ЭП_Сотрудник
		|ГДЕ
		|	НЕ ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение
		|
		|СГРУППИРОВАТЬ ПО
		|	Пользователи.Ссылка,
		|	ВТ_РасчетПоказателей.Оклад,
		|	ВТ_РасчетПоказателей.Этап,
		|	ВТ_ОтработанноеВремяЗаТекущийПериод.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,
		|	ВТ_КлючевыеСотрудники.Сотрудник,
		|	ВТ_СтавкаСотрудника.КоличествоРабочихДней,
		|	ВТ_СтавкаСотрудника.КоличествоРабочихЧасов,
		|	ВТ_СтавкаСотрудника.КоличествоЧасовПоТабелю,
		|	ВТ_СтавкаСотрудника.КоличествоДнейПоТабелю,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.ПроцентПЗК, 0),
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.КоличествоРабочихДней, 0),
		|	ВТ_РасчетПоказателей.Сотрудник,
		|	ВТ_РасчетПоказателей.Проект,
		|	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь,
		|	ВТ_РасчетПоказателей.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.Оклад, 0) КАК Оклад,
		|	ВТ_РасчетПоказателей.Проект КАК Проект,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.Этап, ЗНАЧЕНИЕ(Справочник.РазделыПроекта.ПустаяСсылка)) КАК Этап,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.КоличествоРабочихДней, 0) КАК КоличествоДнейВЭтапе,
		|	ЕСТЬNULL(СУММА(ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапеЗаТекущийПериод), 0) КАК ОтработанноеВремяНаЭтапеЗаТекущийПериод,
		|	СУММА(ЕСТЬNULL(ВТ_РасчетПоказателей.ОтработанныйДень, 0)) КАК ОбщееКоличествоОтработанныхДней,
		|	СУММА(ЕСТЬNULL(ВТ_РасчетПоказателей.ОтработанноеВремяНаЭтапе, 0)) КАК ОтработанноеВремяНаЭтапе,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.ПроцентПЗК, 0) КАК ПроцентПЗК,
		|	ЕСТЬNULL(СУММА(ВТ_РасчетПоказателей.ОтработанныеДниВнеПериода), 0) КАК ОтработанныеДниВнеПериода,
		|	ЕСТЬNULL(ВТ_ОтработанноеВремяЗаТекущийПериод.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод, 0) КАК ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,
		|	ЕСТЬNULL(ВТ_КлючевыеСотрудники.Сотрудник, ЗНАЧЕНИЕ(Справочник.ЭП_Сотрудники.ПустаяСсылка)) КАК КлючевыеСотрудники,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихДней, 0) КАК КоличествоРабочихДней,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоРабочихЧасов, 0) КАК КоличествоРабочихЧасов,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоЧасовПоТабелю, 0) КАК КоличествоЧасовПоТабелю,
		|	ЕСТЬNULL(ВТ_СтавкаСотрудника.КоличествоДнейПоТабелю, 0) КАК КоличествоДнейПоТабелю,
		|	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение КАК ПроектСопровождение,
		|	ВТ_РасчетПоказателей.ТехническийПроект КАК ТехническийПроект
		|ИЗ
		|	ВТ_РасчетПоказателей КАК ВТ_РасчетПоказателей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтработанноеВремяЗаТекущийПериод КАК ВТ_ОтработанноеВремяЗаТекущийПериод
		|		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_ОтработанноеВремяЗаТекущийПериод.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КлючевыеСотрудники КАК ВТ_КлючевыеСотрудники
		|		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_КлючевыеСотрудники.Сотрудник
		|			И ВТ_РасчетПоказателей.Проект = ВТ_КлючевыеСотрудники.Проект
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкаСотрудника КАК ВТ_СтавкаСотрудника
		|		ПО ВТ_РасчетПоказателей.Сотрудник = ВТ_СтавкаСотрудника.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ВТ_РасчетПоказателей.Сотрудник = Пользователи.ЭП_Сотрудник
		|ГДЕ
		|	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение
		|
		|СГРУППИРОВАТЬ ПО
		|	Пользователи.Ссылка,
		|	ВТ_РасчетПоказателей.Оклад,
		|	ВТ_РасчетПоказателей.Этап,
		|	ВТ_ОтработанноеВремяЗаТекущийПериод.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,
		|	ВТ_КлючевыеСотрудники.Сотрудник,
		|	ВТ_СтавкаСотрудника.КоличествоРабочихДней,
		|	ВТ_СтавкаСотрудника.КоличествоРабочихЧасов,
		|	ВТ_СтавкаСотрудника.КоличествоЧасовПоТабелю,
		|	ВТ_СтавкаСотрудника.КоличествоДнейПоТабелю,
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.ПроцентПЗК, 0),
		|	ЕСТЬNULL(ВТ_РасчетПоказателей.КоличествоРабочихДней, 0),
		|	ВТ_РасчетПоказателей.Сотрудник,
		|	ВТ_РасчетПоказателей.Проект,
		|	ВТ_РасчетПоказателей.Проект.ЭП_ПроектСопровождение,
		|	ВТ_РасчетПоказателей.ТехническийПроект";
		
		// Установка параметров запроса
		Запрос.УстановитьПараметр("ВидУчета", Справочники.ЭП_ВидыУчетаВремени.Явка);
		Запрос.УстановитьПараметр("ТЧИтоговоеЗначениеПЗКГруп", Объект.ИтоговоеЗначениеПЗКГруп.Выгрузить());
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("Рабочий", Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий);
		Запрос.УстановитьПараметр("Предпраздничный", Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
		Запрос.УстановитьПараметр("ВидДостижения", Справочники.ЭП_ВидыДостиженийСотрудников.ИспытательныйСрок);
		Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
		РезультатЗапросаПакет = Запрос.ВыполнитьПакет();
		
		// Цикл из выборки запроса для записи данных в табличную часть ВводныеДляНачисленияПремий
		ВыборкаВводныеДляНачисленияПремий = РезультатЗапросаПакет[11].Выбрать();
		ВыборкаВводныеДляНачисленияПремийПоСопровождению = РезультатЗапросаПакет[12].Выбрать();
		
		ЗаполнитьТаблицыНачисленияПремий(ВыборкаВводныеДляНачисленияПремий,
			Объект.ВводныеДляНачисленияПремий, Объект.НачислениеПремий);
		ЗаполнитьТаблицыНачисленияПремий(ВыборкаВводныеДляНачисленияПремийПоСопровождению,
			Объект.ВводныеДляНачисленияПремийПоСопровождению, Объект.НачислениеПремийПоСопровождению, Истина);

	Иначе
		Объект.НачислениеПремий.Очистить();
		Объект.ВводныеДляНачисленияПремий.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыНачисленияПремий(Выборка, ТаблицаВД, ТаблицаНП, ЗаполнятьТехПроект = Ложь)
	
	КонстантаКоэффициентПП = Константы.ЭП_ПроектнаяПремия.Получить();
	КонстантаКоэффициентПЗК = Константы.ЭП_ПремияЗаКачество.Получить();
	КонстантаКоэффициентПремияПоЭтапу = Константы.ЭП_ПремияПоЭтапу.Получить();
	
	ТаблицаНП.Очистить();
	ТаблицаВД.Очистить();
	ТекущийСотрудник = Справочники.ЭП_Сотрудники.ПустаяСсылка();
	ТекущийОстаток = 1;
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ТекущийСотрудник = Выборка.Сотрудник Тогда
			
			ТекущийСотрудник = Выборка.Сотрудник;
			ТекущийОстаток = 1;
			Если ЗаполнятьТехПроект Тогда
				КоэфПоСотруднику = Объект.ВводныеДляНачисленияПремий.Выгрузить(,"Сотрудник, КоэффициентПоРаспределению");
				КоэфПоСотруднику.Свернуть("Сотрудник","КоэффициентПоРаспределению"); 
				Для Каждого Сотрудник Из КоэфПоСотруднику Цикл
					Если Сотрудник.Сотрудник = Выборка.Сотрудник Тогда	
						ТекущийОстаток = ТекущийОстаток-Сотрудник.КоэффициентПоРаспределению;
					КонецЕсли;
				КонецЦикла;	
			КонецЕсли;	
		КонецЕсли;
		// Запись данных без вычислений
		НоваяСтрокаВД = ТаблицаВД.Добавить();
		НоваяСтрокаВД.Сотрудник = Выборка.Сотрудник;
		НоваяСтрокаВД.Пользователь = Выборка.Пользователь;
		НоваяСтрокаВД.Оклад = Выборка.Оклад;
		НоваяСтрокаВД.Проект = Выборка.Проект;
		НоваяСтрокаВД.Этап = Выборка.Этап;
		НоваяСтрокаВД.КоличествоДнейВЭтапе = Выборка.КоличествоДнейВЭтапе;
		
		Если ЗаполнятьТехПроект Тогда
			НоваяСтрокаВД.ТехническийПроект = Выборка.ТехническийПроект;
		КонецЕсли;	
		
		// Запись часов в случае имеющихся отработанных за данный период
		Если Выборка.ОтработанноеВремяНаЭтапеЗаТекущийПериод = 0 ИЛИ Выборка.ОтработанноеВремяНаВсехПроектахЗаТекущийПериод = 0 Тогда
			НоваяСтрокаВД.ОтработанныеЧасы = 0;	
			НоваяСтрокаВД.КоэффициентПоРаспределению = 0;
			
		Иначе
			ОтработанныеЧасы = Выборка.ОтработанноеВремяНаЭтапеЗаТекущийПериод / 3600;
			ВремяПоТабелированию = Выборка.КоличествоЧасовПоТабелю;
			НоваяСтрокаВД.ОтработанныеЧасы = ОтработанныеЧасы;
			ОтработанноеВремяНаВсехПроектахЗаТекущийПериод = ?(ВремяПоТабелированию < ОтработанныеЧасы, ОтработанныеЧасы, ВремяПоТабелированию);
			НовыйКоэф = Окр(ОтработанныеЧасы / ОтработанноеВремяНаВсехПроектахЗаТекущийПериод,2);
			Если НовыйКоэф > ТекущийОстаток Тогда
				
				НовыйКоэф = ТекущийОстаток; 
				ТекущийОстаток = 0; 
				
			Иначе
				
				ТекущийОстаток = ТекущийОстаток - НовыйКоэф;
				
			КонецЕсли;
			НоваяСтрокаВД.КоэффициентПоРаспределению = НовыйКоэф; 
			
		КонецЕсли;
		
		// Запись всех коэффициентов в табличную часть
		НоваяСтрокаВД.ПроцентПЗК = Выборка.ПроцентПЗК;
		НоваяСтрокаВД.КоэффициентПоПроекту = КонстантаКоэффициентПП;
		НоваяСтрокаВД.КоэффициентПоЭтапу = КонстантаКоэффициентПремияПоЭтапу;
		НоваяСтрокаВД.КоэффициентПЗК = КонстантаКоэффициентПЗК;
		НоваяСтрокаВД.ДнейПоТабелю = Выборка.ОбщееКоличествоОтработанныхДней - Выборка.ОтработанныеДниВнеПериода;
		
		// Расчет дней к премированию, остатка дней на начало периода и дней по табелю
		Если Выборка.Этап.Пустая() ИЛИ Выборка.КоличествоДнейВЭтапе = 0 Тогда	
			НоваяСтрокаВД.ДнейКПремированию = НоваяСтрокаВД.ДнейПоТабелю;
			КоэффициентДнейКПремированию = 1;
			
		Иначе
			НоваяСтрокаВД.ОстатокДнейНаНачалоПериода = Макс(Выборка.КоличествоДнейВЭтапе - Выборка.ОтработанныеДниВнеПериода,0);
			
			Если НЕ Выборка.ОтработанныеДниВнеПериода = 0 Тогда
				НоваяСтрокаВД.ДнейКПремированию = Мин(НоваяСтрокаВД.ОстатокДнейНаНачалоПериода, НоваяСтрокаВД.ДнейПоТабелю);
				
			Иначе
				НоваяСтрокаВД.ДнейКПремированию = Выборка.ОбщееКоличествоОтработанныхДней;
			КонецЕсли;
			
		КонецЕсли;
		
		// Расчет ставки сотрудника
		НормативЧасов = Выборка.КоличествоРабочихЧасов;
		ВремяРаботыСотрудникаПоТабелю = Выборка.КоличествоЧасовПоТабелю;
		Если НормативЧасов <> 0 Тогда
			НоваяСтрокаВД.Ставка = ВремяРаботыСотрудникаПоТабелю / НормативЧасов;
		Иначе
			НоваяСтрокаВД.Ставка = 0;
		КонецЕсли;
		
		// Подготовка к расчету премий
		ОкладСУчетомСтавки = Выборка.Оклад * НоваяСтрокаВД.Ставка;
		
		Если НЕ Выборка.Этап.Пустая() И НоваяСтрокаВД.ОстатокДнейНаНачалоПериода = 0 И Выборка.КоличествоДнейВЭтапе > 0 Тогда	
			КоэффициентДнейКПремированию = 0;
			
		ИначеЕсли НЕ Выборка.Этап.Пустая() И НоваяСтрокаВД.ОстатокДнейНаНачалоПериода <= НоваяСтрокаВД.ДнейКПремированию И Выборка.КоличествоДнейВЭтапе > 0 Тогда
			
			Если НоваяСтрокаВД.ДнейКПремированию > 0 Тогда
				КоэффициентДнейКПремированию = НоваяСтрокаВД.ОстатокДнейНаНачалоПериода / НоваяСтрокаВД.ДнейКПремированию;
				
			Иначе	
				КоэффициентДнейКПремированию = 0;
			КонецЕсли;
			
		ИначеЕсли Выборка.Этап.Пустая() Тогда
			КоэффициентДнейКПремированию = 1;
			
		Иначе
			КоэффициентДнейКПремированию = 1;
		КонецЕсли;	
		
		// Расчет премий сотрудников
		Если ЗначениеЗаполнено(Выборка.Этап) Тогда
			Если Выборка.ПроцентПЗК > 0.7 Тогда
				НоваяСтрокаВД.ОстатокПЗК = КонстантаКоэффициентПЗК * ОкладСУчетомСтавки * (1 - Выборка.ПроцентПЗК) * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию;	
			Иначе
				НоваяСтрокаВД.ОстатокПЗК = КонстантаКоэффициентПЗК * ОкладСУчетомСтавки * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию; 	
			КонецЕсли;
			
			НоваяСтрокаВД.ПремияПоЭтапу = ОкладСУчетомСтавки * КонстантаКоэффициентПремияПоЭтапу * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию;
			Если ЗначениеЗаполнено(Выборка.КлючевыеСотрудники) Тогда
				НоваяСтрокаВД.ПроектнаяПремия = ОкладСУчетомСтавки  * КонстантаКоэффициентПП * НоваяСтрокаВД.КоэффициентПоРаспределению * КоэффициентДнейКПремированию;
			Иначе
				НоваяСтрокаВД.ПроектнаяПремия = 0;
			КонецЕсли;
		Иначе 
			НоваяСтрокаВД.ОстатокПЗК = 0;
			НоваяСтрокаВД.ПремияПоЭтапу = 0;
			НоваяСтрокаВД.ПроектнаяПремия = 0;	
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТабличнойЧасти Из ТаблицаВД Цикл
		НоваяСтрокаНП = ТаблицаНП.Добавить();
		НоваяСтрокаНП.Пользователь = СтрокаТабличнойЧасти.Пользователь;
		НоваяСтрокаНП.Сотрудник = СтрокаТабличнойЧасти.Сотрудник;
		НоваяСтрокаНП.Проект = СтрокаТабличнойЧасти.Проект;
		НоваяСтрокаНП.Этап = СтрокаТабличнойЧасти.Этап;
		НоваяСтрокаНП.ОстатокПЗК = СтрокаТабличнойЧасти.ОстатокПЗК;
		НоваяСтрокаНП.ПроектнаяПремия = СтрокаТабличнойЧасти.ПроектнаяПремия;
		НоваяСтрокаНП.ПремияПоЭтапу = СтрокаТабличнойЧасти.ПремияПоЭтапу;
		НоваяСтрокаНП.Сумма = СтрокаТабличнойЧасти.ОстатокПЗК + СтрокаТабличнойЧасти.ПроектнаяПремия + СтрокаТабличнойЧасти.ПремияПоЭтапу;
		Если ЗаполнятьТехПроект Тогда
			НоваяСтрокаНП.ТехническийПроект = Выборка.ТехническийПроект;
		КонецЕсли;	
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьТаблицуВводныеДанные()

// Команда заполнения табличных частей ВводныеДляНачисленияПремия и НачисленияПремий
&НаКлиенте
Процедура ЗаполнитьНачислениеПремий(Команда)
	
	ЗаполнитьНачислениеПремийНаСервере()
	
КонецПроцедуры

// Заполняет табличную часть ПроектыКИсключениюИзРасчета
&НаСервере
Процедура ЗаполнитьПроектыКИсключениюНаСервере()
	
	// Запрос к Справочнику Проекты, который проверяет заполненность Табличной части ТаблицаОценивания
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |    Проекты.Ссылка КАК Ссылка
    |ИЗ
    |    Справочник.Проекты КАК Проекты
    |
    |СГРУППИРОВАТЬ ПО
    |    Проекты.Ссылка
    |
    |ИМЕЮЩИЕ
    |    КОЛИЧЕСТВО(Проекты.ЭП_ТаблицаОценивания.НомерСтроки) = 0";
    
    Выборка = Запрос.Выполнить().Выбрать();
    Объект.ПроектыКИсключениюИзРасчета.Очистить();
    
    Пока Выборка.Следующий() Цикл
        
        НоваяСтрока = Объект.ПроектыКИсключениюИзРасчета.Добавить();
        НоваяСтрока.Проект = Выборка.Ссылка;
        
    КонецЦикла;
	
КонецПроцедуры

// Команда заполнения табличной части ПроектыКИсключениюИзРасчета
&НаКлиенте
Процедура ЗаполнитьПроектыКИсключению(Команда)
	
	ЗаполнитьПроектыКИсключениюНаСервере();

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПереработкиПоСотрудникам(Команда)
	ЗаполнитьПереработкиПоСотрудникамНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПереработкиПоСотрудникамНаСервере()
	
	Объект.ПереработкиПоСотрудникам.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Период КАК Период,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Проект КАК Проект,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Сотрудник КАК Сотрудник,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.Отгул КАК Отгул,
	               |	ЭП_СогласованныеЧасыПереработокОбороты.КоличествоОборот КАК План
	               |ПОМЕСТИТЬ ВТ_ПлановыеЧасы
	               |ИЗ
	               |	РегистрНакопления.ЭП_СогласованныеЧасыПереработок.Обороты(&НачалоПериода, &ОкончаниеПериода, День, ) КАК ЭП_СогласованныеЧасыПереработокОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПлановыеЧасы.Период КАК Период,
	               |	ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник,
	               |	МАКСИМУМ(ВТ_ПлановыеЧасы.План) КАК План
	               |ПОМЕСТИТЬ ВТ_МаксимумЧасов
	               |ИЗ
	               |	ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ПлановыеЧасы.Период,
	               |	ВТ_ПлановыеЧасы.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПлановыеЧасы.Период КАК Период,
	               |	ВТ_ПлановыеЧасы.Проект КАК Проект,
	               |	ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник,
	               |	ВТ_ПлановыеЧасы.Отгул КАК Отгул,
	               |	ВТ_МаксимумЧасов.План КАК План
	               |ПОМЕСТИТЬ ВТ_ПроектМаксимумЧасовВДень
	               |ИЗ
	               |	ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МаксимумЧасов КАК ВТ_МаксимумЧасов
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_МаксимумЧасов.Период
	               |			И ВТ_ПлановыеЧасы.План = ВТ_МаксимумЧасов.План
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_МаксимумЧасов.Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник КАК Сотрудник,
	               |	СУММА(ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Часы) КАК Часы,
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень КАК ПериодРегистрацииДень
	               |ПОМЕСТИТЬ ВТ_Табель
	               |ИЗ
	               |	РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
	               |ГДЕ
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ВидУчетаВремени = &ВидУчетаВремени
	               |	И ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрации <= &ОкончаниеПериода
	               |	И ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрации >= &НачалоПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник,
	               |	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	УчетВремениОбороты.Период КАК Период,
	               |	СУММА(УчетВремениОбороты.ДлительностьОборот / 3600) КАК Факт,
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТ_Факт
	               |ИЗ
	               |	РегистрНакопления.УчетВремени.Обороты(
	               |			&НачалоПериода,
	               |			&ОкончаниеПериода,
	               |			День,
	               |			Пользователь.ЭП_Сотрудник В
	               |				(ВЫБРАТЬ
	               |					ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник
	               |				ИЗ
	               |					ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы)) КАК УчетВремениОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	УчетВремениОбороты.Период,
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПлановыеЧасы.Период КАК Дата,
	               |	ВТ_ПроектМаксимумЧасовВДень.Проект КАК Проект,
	               |	ВТ_ПлановыеЧасы.Сотрудник КАК Сотрудник,
	               |	ВТ_ПлановыеЧасы.Отгул КАК Отгул,
	               |	ВТ_ПлановыеЧасы.План КАК План,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_Факт.Факт, 0) - ЕСТЬNULL(ВТ_Табель.Часы, 0) < 0
	               |			ТОГДА 0
	               |		КОГДА ВТ_ПлановыеЧасы.План < ЕСТЬNULL(ВТ_Факт.Факт, 0) - ЕСТЬNULL(ВТ_Табель.Часы, 0)
	               |			ТОГДА ВТ_ПлановыеЧасы.План
	               |		ИНАЧЕ ЕСТЬNULL(ВТ_Факт.Факт, 0) - ЕСТЬNULL(ВТ_Табель.Часы, 0)
	               |	КОНЕЦ КАК Факт
	               |ИЗ
	               |	ВТ_ПлановыеЧасы КАК ВТ_ПлановыеЧасы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Табель КАК ВТ_Табель
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_Табель.ПериодРегистрацииДень
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_Табель.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Факт КАК ВТ_Факт
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_Факт.Период
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_Факт.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроектМаксимумЧасовВДень КАК ВТ_ПроектМаксимумЧасовВДень
	               |		ПО ВТ_ПлановыеЧасы.Период = ВТ_ПроектМаксимумЧасовВДень.Период
	               |			И ВТ_ПлановыеЧасы.Сотрудник = ВТ_ПроектМаксимумЧасовВДень.Сотрудник"; 
	Запрос.УстановитьПараметр("ВидУчетаВремени", ПредопределенноеЗначение("Справочник.ЭП_ВидыУчетаВремени.Явка"));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецМесяца(Объект.Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		НовСтр = Объект.ПереработкиПоСотрудникам.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
	
	КонецЦикла;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
#КонецОбласти
