
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Статус.Доступность = ПроверкаРоли();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы 

 // Установка оформления документа 
 &НаКлиенте
Процедура РежимРаботыПриИзменении(Элемент) 
	
	УстановитьУсловноеОформление(); 

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСписокНоменклатура 

// Заполнение строки ТЧ по данным инвентарного номера
  &НаКлиенте
Процедура СписокНоменклатурыИнвентарныйНомерОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
		
	ЗагрузитьНоменклатуру(ВыбранноеЗначение, Элементы.СписокНоменклатуры.ТекущаяСтрока);

КонецПроцедуры   

// Подбор инвентарного номера при вводе
&НаКлиенте
Процедура СписокНоменклатурыИнвентарныйНомерАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Текст) Тогда 
		
		ДанныеВыбора = ПолучитьДанныеВыбораПоИнвентарномуНомеру(Элемент, Элементы.СписокНоменклатуры.ТекущиеДанные.ИнвентарныйНомер,
		Элементы.СписокНоменклатуры.ТекущиеДанные.Номенклатура, 
		Объект.Склад, Элементы.СписокНоменклатуры.ТекущиеДанные.ВидНоменклатуры, 
		СтандартнаяОбработка); 
		
	Иначе
		
		ДанныеВыбора = ПолучитьДанныеВыбораПоИнвентарномуНомеру(Элемент, Текст, Элементы.СписокНоменклатуры.ТекущиеДанные.Номенклатура, 
		Объект.Склад, Элементы.СписокНоменклатуры.ТекущиеДанные.ВидНоменклатуры, СтандартнаяОбработка);	
		
	КонецЕсли;	                 
																		
КонецПроцедуры 

&НаКлиенте
Процедура ПодобратьНоменклатуру(Команда)
	
	ПодобратьНоменклатуруНаСервере(); 
		
КонецПроцедуры  

 #КонецОбласти      
                                                  
#Область ОбработчикиКомандФормы
 
// Заполняент ТЧ по кнопке "Подобрать номенклатуру" в соответствии с значениями элементов шапки формы
 &НаСервере
Процедура ПодобратьНоменклатуруНаСервере()
	
	Если Объект.РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу Тогда
		
		Объект.СписокНоменклатуры.Очистить();  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура КАК Номенклатура,
		|	ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЭП_Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ИЗ
		|	РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(, Организация = &Организация) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(, Склад = &Склад) КАК ЭП_ОстаткиНаСкладеОстатки
		|		ПО ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура = ЭП_ОстаткиНаСкладеОстатки.Номенклатура
		|			И ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер = ЭП_ОстаткиНаСкладеОстатки.ИнвентарныйНомер
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Номенклатура КАК ЭП_Номенклатура
		|		ПО ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура = ЭП_Номенклатура.Ссылка
		|ГДЕ
		|	ЭП_ОстаткиНаСкладеОстатки.КоличествоОстаток > 0";
		
		Запрос.УстановитьПараметр("Склад", Объект.Склад);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
			
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			Номенкклатура = Выборка.Номенклатура;
			ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
			Количество = Выборка.КоличествоОстаток;  
			ВидНоменклатуры = Выборка.ВидНоменклатуры;
			НовСтр = Объект.СписокНоменклатуры.Добавить();
			НовСтр.Номенклатура = Номенкклатура;
			НовСтр.ИнвентарныйНомер = ИнвентарныйНомер; 
			НовСтр.ВидНоменклатуры = ВидНоменклатуры; 
			НовСтр.ПланФакт = Количество; 
			НовСтр.КачествоНоменклатуры = РегистрыСведений.ЭП_КачествоНоменклатуры.ПолучитьПоследнее(ТекущаяДатаСеанса(), 
							Новый Структура("Номенклатура, ИнвентарныйНомер",Номенкклатура,ИнвентарныйНомер)).КачествоНоменклатуры;
			ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
			
		КонецЦикла; 
		
	Иначе
		
		Объект.СписокНоменклатуры.Очистить();  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура КАК Номенклатура,
		|	ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЭП_Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ИЗ
		|	РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(, Организация = &Организация) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки(, Сотрудник = &Сотрудник) КАК ЭП_ОстаткиНаСотрудникахОстатки
		|		ПО ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура = ЭП_ОстаткиНаСотрудникахОстатки.Номенклатура
		|			И ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер = ЭП_ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Номенклатура КАК ЭП_Номенклатура
		|		ПО ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура = ЭП_Номенклатура.Ссылка
		|ГДЕ
		|	ЭП_ОстаткиНаСотрудникахОстатки.КоличествоОстаток > 0";
		
		Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
			
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			Номенкклатура = Выборка.Номенклатура;
			ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
			Количество = Выборка.КоличествоОстаток;
			ВидНоменклатуры = Выборка.ВидНоменклатуры;
			НовСтр = Объект.СписокНоменклатуры.Добавить();
			НовСтр.Номенклатура = Номенкклатура;
			НовСтр.ИнвентарныйНомер = ИнвентарныйНомер;
			НовСтр.ВидНоменклатуры = ВидНоменклатуры;
			НовСтр.ПланФакт = Количество;
			НовСтр.КачествоНоменклатуры = РегистрыСведений.ЭП_КачествоНоменклатуры.ПолучитьПоследнее(ТекущаяДатаСеанса(), 
							Новый Структура("Номенклатура, ИнвентарныйНомер",Номенкклатура,ИнвентарныйНомер)).КачествоНоменклатуры;
			ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
			
		КонецЦикла; 
		
	КонецЕсли;	
	
КонецПроцедуры

// Передает значения элементов формы для работы автоподбора
&НаКлиенте
Функция ПолучитьДанныеВыбораПоИнвентарномуНомеру(Элемент, Склад, Номенклатура, ИнвентарныйНомер, ВидНоменклатуры, СтандартнаяОбработка)
	
	РежимРаботы = ПолучениеДанныхРежимаРаботы(Объект.РежимРаботы);
	
	Если РежимРаботы Тогда
		
	    СтандартнаяОбработка = Ложь;
	                                                             
	    ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов",
	                                Новый Структура(),                                 "",                                               
									ПредопределенноеЗначение("ИспользованиеГруппИЭлементов.Элементы"));
	                                
	    ПараметрыПодбора.Вставить("ДополнительныеПараметры", Новый Структура("Склад, Номенклатура, ИнвентарныйНомер, РежимРаботы, Сотрудник, ВидНоменклатуры",
	                                                                           	Склад, 
	                                                                            Номенклатура,
																				ИнвентарныйНомер, РежимРаботы, Ложь, ВидНоменклатуры));
	    
	    Возврат	ПолучитьДанныеВыбора(Тип("СправочникСсылка.ЭП_Номенклатура"), ПараметрыПодбора);  
		
	Иначе 
				
		СтандартнаяОбработка = Ложь;
	                                                             
	    ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов",
	                                Новый Структура(),                                 "",                                               
									ПредопределенноеЗначение("ИспользованиеГруппИЭлементов.Элементы"));
	                                
	    ПараметрыПодбора.Вставить("ДополнительныеПараметры", Новый Структура("Склад, Номенклатура, ИнвентарныйНомер, РежимРаботы, Сотрудник, ВидНоменклатуры",
	                                                                           	Склад, 
	                                                                            Номенклатура,
																				ИнвентарныйНомер, РежимРаботы, Объект.Сотрудник, ВидНоменклатуры));
	    
	    Возврат	ПолучитьДанныеВыбора(Тип("СправочникСсылка.ЭП_Номенклатура"), ПараметрыПодбора); 
		
	КонецЕсли;

КонецФункции

// Получает данные для заполнения строки ТЧ по инвентарному номеру 
 &НаСервере
Процедура ЗагрузитьНоменклатуру(Текст, ИндексСтроки)
	
	Если Объект.РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНаСкладеОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНаСкладеОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ЭП_Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ИЗ
		|	РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(
		|			,
		|			ИнвентарныйНомер = &ИнвентарныйНомер
		|				И Склад = &Склад) КАК ОстаткиНаСкладеОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Номенклатура КАК ЭП_Номенклатура
		|		ПО ОстаткиНаСкладеОстатки.Номенклатура = ЭП_Номенклатура.Ссылка
		|ГДЕ
		|	ОстаткиНаСкладеОстатки.КоличествоОстаток > 0";
		
		Запрос.УстановитьПараметр("ИнвентарныйНомер", Текст);
		Запрос.УстановитьПараметр("Склад", Объект.Склад);
		
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СтрокаТЧ = Объект.СписокНоменклатуры.НайтиПоИдентификатору(ИндексСтроки);
			СтрокаТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура; 
			СтрокаТЧ.ПланФакт = ВыборкаДетальныеЗаписи.КоличествоОстаток;
			СтрокаТЧ.ВидНоменклатуры = ВыборкаДетальныеЗаписи.ВидНоменклатуры;
			
		КонецЦикла;
		
	Иначе  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиНаСотрудникахОстатки.Номенклатура КАК Номенклатура,
		|	ОстаткиНаСотрудникахОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ЭП_Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ИЗ
		|	РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки(
		|			,
		|			ИнвентарныйНомер = &ИнвентарныйНомер
		|				И Сотрудник = &Сотрудник) КАК ОстаткиНаСотрудникахОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Номенклатура КАК ЭП_Номенклатура
		|		ПО ОстаткиНаСотрудникахОстатки.Номенклатура = ЭП_Номенклатура.Ссылка
		|ГДЕ
		|	ОстаткиНаСотрудникахОстатки.КоличествоОстаток > 0";
		
		Запрос.УстановитьПараметр("ИнвентарныйНомер", Текст);
		Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);
		
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СтрокаТЧ = Объект.СписокНоменклатуры.НайтиПоИдентификатору(ИндексСтроки);
			СтрокаТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура; 
			СтрокаТЧ.ПланФакт = ВыборкаДетальныеЗаписи.КоличествоОстаток;
			СтрокаТЧ.ВидНоменклатуры = ВыборкаДетальныеЗаписи.ВидНоменклатуры;
			
		КонецЦикла; 
		
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти  
 
#Область СлужебныеПроцедурыИФункции

 // Проверяет наличие роли 
  &НаСервере
Функция ПроверкаРоли() 
	
	Возврат Пользователи.РолиДоступны("ЭП_СогласованиеДокументовСклада",,);
	 	
КонецФункции

// Передает значение в зависимости от выбора значение в поле "РежимРаботы"
&НаСервереБезКонтекста
Функция ПолучениеДанныхРежимаРаботы(РежимРаботы)
	
	Если РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;	

КонецФункции

// Устанавливает видимость полей 
 &НаСервере
Процедура УстановитьУсловноеОформление()

	Если Объект.РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу Тогда
		Элементы.Сотрудник.Видимость = Ложь; 
		Элементы.Склад.Видимость = Истина 
	Иначе
		Элементы.Сотрудник.Видимость = Истина;
		Элементы.Склад.Видимость = Ложь; 
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ВидНоменклатурыАвтоПодборНаСервере(СтрокаПоиска) 
	
	Возврат Справочники.ЭП_ВидНоменлкатуры.ПолучитьДанныеВыбора(Новый Структура("СтрокаПоиска, ВводПоСтрокеРасширенный", СтрокаПоиска, Истина));

КонецФункции

&НаКлиенте
Процедура ВидНоменклатурыАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВидНоменклатурыАвтоПодборНаСервере(Текст);

КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПередачи = Элементы.СписокНоменклатуры.ТекущиеДанные.Номенклатура;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОтборПоВиду", ПараметрыПередачи);
	ОткрытьФорму("Справочник.ЭП_ВидНоменлкатуры.ФормаВыбора",ПараметрыФормы, Элемент);    
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)  
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПередачи = Элементы.СписокНоменклатуры.ТекущиеДанные.ВидНоменклатуры;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОтборПоВиду", ПараметрыПередачи);
	ОткрытьФорму("Справочник.ЭП_Номенклатура.ФормаВыбора",ПараметрыФормы, Элемент); 
	
КонецПроцедуры

 #КонецОбласти  
 
 #Область АвтоматическоеЗаполнениеПоляКачествоНоменклатуры
 
 &НаСервере
Функция ПолучитьКачествоНоменклатуры(Номенклатура, ИнвентарныйНомер)   
	 Отбор = Новый Структура("Номенклатура, ИнвентарныйНомер", Номенклатура, ИнвентарныйНомер);
	 Возврат РегистрыСведений.ЭП_КачествоНоменклатуры.ПолучитьПоследнее(ТекущаяДатаСеанса(), Отбор).КачествоНоменклатуры;
КонецФункции

&НаКлиенте
Процедура УстановитьКачествоНоменклатуры()
	СтрокаСписокНоменклатуры = Элементы.СписокНоменклатуры.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаСписокНоменклатуры.Номенклатура) И ЗначениеЗаполнено(СтрокаСписокНоменклатуры.ИнвентарныйНомер) Тогда
		КачествоНоменклатуры = ПолучитьКачествоНоменклатуры(СтрокаСписокНоменклатуры.Номенклатура, СтрокаСписокНоменклатуры.ИнвентарныйНомер);
		Если КачествоНоменклатуры.Пустая() Тогда
			СтрокаСписокНоменклатуры.КачествоНоменклатуры = ПредопределенноеЗначение("Справочник.ЭП_КачествоНоменклатуры.Новый");
		Иначе
			СтрокаСписокНоменклатуры.КачествоНоменклатуры = КачествоНоменклатуры; 
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыНоменклатураПриИзменении(Элемент) 
	УстановитьКачествоНоменклатуры();
КонецПроцедуры 

&НаКлиенте
Процедура СписокНоменклатурыИнвентарныйНомерПриИзменении(Элемент)
	УстановитьКачествоНоменклатуры();
КонецПроцедуры 

 #КонецОбласти 
