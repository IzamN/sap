#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если НЕ СтатусДокумента Тогда		
		Отказ = Истина; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Документ может быть проведен только после согласования";
		Сообщение.Сообщить();
		Возврат;		
	
	КонецЕсли;
	
	Движения.ЭП_ОстаткиНаСкладе.Очистить();
	Движения.ЭП_ОстаткиНаСкладе.Записывать = Истина;
	Движения.ЭП_ОстаткиНаСкладе.Записать(); 
	
	Движения.ЭП_ОстаткиНаСотрудниках.Очистить();
	Движения.ЭП_ОстаткиНаСотрудниках.Записывать = Истина;
	Движения.ЭП_ОстаткиНаСотрудниках.Записать(); 
	
	Движения.ЭП_ОстаткиПоОрганизации.Очистить();
	Движения.ЭП_ОстаткиПоОрганизации.Записывать = Истина; 
	Движения.ЭП_ОстаткиПоОрганизации.Записать(); 
	
	Движения.ЭП_СтоимостьНоменклатуры.Очистить();	
	Движения.ЭП_СтоимостьНоменклатуры.Записывать = Истина;
	Движения.ЭП_СтоимостьНоменклатуры.Записать(); 
	
	Движения.ЭП_ОстаткиПоОрганизацииРН.Очистить();	
	Движения.ЭП_ОстаткиПоОрганизацииРН.Записывать = Истина;
	Движения.ЭП_ОстаткиПоОрганизацииРН.Записать(); 	

	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Склад", Склад);

	Если Поступление = Перечисления.ЭП_ВидыПоступлений.ПоСотруднику Тогда 
		
		Запрос.Текст = ТекстЗапросаДвиженийПоСотруднику();						
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.КоличествоОстатокСотрудник > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя записать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером" + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которая есть на сотруднике";
				Сообщение.Сообщить();
				
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокПоСкладу > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя записать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером" + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которая уже есть на складе";
				Сообщение.Сообщить(); 
								
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокПоОрганизации > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя записать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером" + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которая уже есть на организации";
				Сообщение.Сообщить();
				
			Иначе
				
				Движение = Движения.ЭП_ОстаткиНаСотрудниках.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Дата;
				Движение.Сотрудник = Сотрудник;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
				Движение.Количество = 1; 
				
				Движение = Движения.ЭП_ОстаткиПоОрганизацииРН.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
				Движение.Количество = 1;
				
				МенеджерЗаписи = Движения.ЭП_СтоимостьНоменклатуры.Добавить();
				МенеджерЗаписи.Период = Дата;
				МенеджерЗаписи.Организация = Организация; 
				МенеджерЗаписи.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
				МенеджерЗаписи.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				МенеджерЗаписи.Стоимость = ВыборкаДетальныеЗаписи.Стоимость;
								
			КонецЕсли;		
		КонецЦикла;
		
	Иначе 
		
		Запрос.Текст = ТекстЗапросаОстатковПоСкладу();
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если  ВыборкаДетальныеЗаписи.КоличествоОстатокСотрудник > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя записать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером " + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которая уже есть на сотруднике";
				Сообщение.Сообщить();

			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокСклад > 0 Тогда
					
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя записать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером " + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которая уже есть на складе";
				Сообщение.Сообщить()
				
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокПоОрганизации > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя записать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером " + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которая уже есть на организации";
				Сообщение.Сообщить(); 
				
			Иначе	
				
				Движение = Движения.ЭП_ОстаткиНаСкладе.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Дата;
				Движение.Склад = Склад;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
				Движение.Количество = 1;
				
				Движение = Движения.ЭП_ОстаткиПоОрганизацииРН.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
				Движение.Количество = 1;
				
				МенеджерЗаписи = Движения.ЭП_СтоимостьНоменклатуры.Добавить();
				МенеджерЗаписи.Период = Дата;
				МенеджерЗаписи.Организация = Организация; 
				МенеджерЗаписи.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомер;
				МенеджерЗаписи.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				МенеджерЗаписи.Стоимость = ВыборкаДетальныеЗаписи.Стоимость;
				
			КонецЕсли;		
		КонецЦикла;	
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ЭП_КачествоНоменклатуры.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ПоступлениеТовараНоменклатура.Номенклатура КАК Номенклатура,
	|	ЭП_ПоступлениеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ЭП_ПоступлениеТовараНоменклатура.КачествоНоменклатуры КАК КачествоНоменклатуры
	|ИЗ
	|	Документ.ЭП_ПоступлениеТовара.Номенклатура КАК ЭП_ПоступлениеТовараНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_КачествоНоменклатуры.СрезПоследних(&Дата, ) КАК ЭП_КачествоНоменклатурыСрезПоследних
	|		ПО ЭП_ПоступлениеТовараНоменклатура.Номенклатура = ЭП_КачествоНоменклатурыСрезПоследних.Номенклатура
	|			И ЭП_ПоступлениеТовараНоменклатура.ИнвентарныйНомер = ЭП_КачествоНоменклатурыСрезПоследних.ИнвентарныйНомер
	|ГДЕ
	|	ЭП_ПоступлениеТовараНоменклатура.Ссылка = &Ссылка
	|	И (ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры ЕСТЬ NULL
	|			ИЛИ ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры <> ЭП_ПоступлениеТовараНоменклатура.КачествоНоменклатуры)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);                                                                        
	
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ЭП_КачествоНоменклатуры.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура; 
		Движение.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
		Движение.КачествоНоменклатуры = Выборка.КачествоНоменклатуры;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Поступление = Перечисления.ЭП_ВидыПоступлений.ПоСкладу;
	
	Если Ответственный.Ссылка.Пустая() ИЛИ НЕ ЗначениеЗаполнено(Ответственный) Тогда
        Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
    КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Поступление = Перечисления.ЭП_ВидыПоступлений.ПоСотруднику Тогда
		ПроверяемыеРеквизиты.Добавить("Сотрудник");
	Иначе
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;
	
КонецПроцедуры 

Процедура ПриЗаписи(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Номенклатура.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	|	ТабЧасть.Номенклатура КАК Номенклатура,
	|	ТабЧасть.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТабЧасть.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТабЧасть.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ТабЧасть
	|ИЗ
	|	&Таблица КАК ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабЧасть.Номенклатура КАК Номенклатура,
	|	ВТ_ТабЧасть.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВТ_ТабЧасть.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ВТ_ТабЧасть.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_ТабЧасть КАК ВТ_ТабЧасть
	|ГДЕ
	|	(ВТ_ТабЧасть.Номенклатура, ВТ_ТабЧасть.ИнвентарныйНомер, ВТ_ТабЧасть.ВидНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ВТ.Номенклатура,
	|				ВТ.ИнвентарныйНомер,
	|				ВТ.ВидНоменклатуры
	|			ИЗ
	|				ВТ_ТабЧасть КАК ВТ
	|			СГРУППИРОВАТЬ ПО
	|				ВТ.Номенклатура,
	|				ВТ.ИнвентарныйНомер,
	|				ВТ.ВидНоменклатуры
	|			ИМЕЮЩИЕ
	|				КОЛИЧЕСТВО(ВТ.НомерСтроки) > 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	Номенклатура";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выб_Номенклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выб_Номенклатура.Следующий() Цикл
			Выборка = Выб_Номенклатура.Выбрать();
			Сообщение = "";
			Пока Выборка.Следующий() Цикл
				Сообщение = Сообщение + ?(ПустаяСтрока(Сообщение), "", ", ") + Выборка.НомерСтроки;
			КонецЦикла;
			Сообщение = "Обнаружено дублирование строк: " + Сообщение;
			Сообщить(Сообщение);
		КонецЦикла;
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаДвиженийПоСотруднику()

	Возврат "ВЫБРАТЬ
	        |	ПоступлениеТовараНоменклатура.Номенклатура КАК Номенклатура,
	        |	ПоступлениеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	ПоступлениеТовараНоменклатура.Стоимость КАК Стоимость
	        |ПОМЕСТИТЬ Вт_Таб
	        |ИЗ
	        |	Документ.ЭП_ПоступлениеТовара.Номенклатура КАК ПоступлениеТовараНоменклатура
	        |ГДЕ
	        |	ПоступлениеТовараНоменклатура.Ссылка = &Ссылка
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Номенклатура,
	        |	ИнвентарныйНомер
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Вт_Таб.Номенклатура КАК Номенклатура,
	        |	Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	Вт_Таб.Стоимость КАК Стоимость,
	        |	ЕСТЬNULL(ОстаткиНаСотрудникахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокСотрудник,
	        |	Вт_Таб.Номенклатура.Представление КАК НоменклатураПредставление,
	        |	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокПоОрганизации,
	        |	ЕСТЬNULL(ОстаткиНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокПоСкладу
	        |ИЗ
	        |	Вт_Таб КАК Вт_Таб
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ОстаткиНаСотрудникахОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСотрудникахОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ОстаткиНаСкладеОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСкладеОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСкладеОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						Вт_Таб.Номенклатура КАК Номенклатура,
	        |						Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |					ИЗ
	        |						Вт_Таб КАК Вт_Таб)) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер";	

КонецФункции

Функция ТекстЗапросаОстатковПоСкладу()

	Возврат "ВЫБРАТЬ
	        |	ПоступлениеТовараНоменклатура.Номенклатура КАК Номенклатура,
	        |	ПоступлениеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	ПоступлениеТовараНоменклатура.Стоимость КАК Стоимость
	        |ПОМЕСТИТЬ Вт_Таб
	        |ИЗ
	        |	Документ.ЭП_ПоступлениеТовара.Номенклатура КАК ПоступлениеТовараНоменклатура
	        |ГДЕ
	        |	ПоступлениеТовараНоменклатура.Ссылка = &Ссылка
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Номенклатура,
	        |	ИнвентарныйНомер
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Вт_Таб.Номенклатура КАК Номенклатура,
	        |	Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	Вт_Таб.Стоимость КАК Стоимость,
	        |	ЕСТЬNULL(ОстаткиНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокСклад,
	        |	Вт_Таб.Номенклатура.Представление КАК НоменклатураПредставление,
	        |	ЕСТЬNULL(ОстаткиНаСотрудникахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокСотрудник,
	        |	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокПоОрганизации
	        |ИЗ
	        |	Вт_Таб КАК Вт_Таб
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ОстаткиНаСотрудникахОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСотрудникахОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ОстаткиНаСкладеОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСкладеОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСкладеОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						Вт_Таб.Номенклатура КАК Номенклатура,
	        |						Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |					ИЗ
	        |						Вт_Таб КАК Вт_Таб)) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер";

КонецФункции

#КонецОбласти
