#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ЭП_УчетОтгулов.Очистить();
	Движения.ЭП_УчетОтгулов.Записывать = Истина;
	Движения.ЭП_УчетОтгулов.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_РеализацияОтгуловСотрудники.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТСотрудники
		|ИЗ
		|	Документ.ЭП_РеализацияОтгуловДок КАК ЭП_РеализацияОтгулов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭП_РеализацияОтгуловДок.Сотрудники КАК ЭП_РеализацияОтгуловСотрудники
		|		ПО ЭП_РеализацияОтгулов.Ссылка = ЭП_РеализацияОтгуловСотрудники.Ссылка
		|ГДЕ
		|	ЭП_РеализацияОтгуловСотрудники.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТСотрудники.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ЭП_УчетОтгуловОстатки.ДлительностьОстаток, 0) КАК ДлительностьОстаток,
		|	ВТСотрудники.Сотрудник.Представление КАК СотрудникПредставление
		|ИЗ
		|	ВТСотрудники КАК ВТСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_УчетОтгулов.Остатки(
		|				&МоментВремени,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВтСотрудники.Сотрудник КАК Сотрудник
		|					ИЗ
		|						ВТСотрудники КАК ВтСотрудники)) КАК ЭП_УчетОтгуловОстатки
		|		ПО ВТСотрудники.Сотрудник = ЭП_УчетОтгуловОстатки.Сотрудник";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДлительностьОстаток - 8 < 0 Тогда
			ОбщегоНазначения.СообщитьПользователю("У сотрудника " + Выборка.СотрудникПредставление + " меньше 8 часов накопленный отгулов, проведение документа не возможно");
			Отказ = Истина;
		Иначе		
			Движение = Движения.ЭП_УчетОтгулов.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Сотрудник = Выборка.Сотрудник;
			Движение.Длительность = 8; 
			//Движение.Проект = Выборка.Проект;
		КонецЕсли;
	КонецЦикла;		

КонецПроцедуры 

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Ответственный.Ссылка.Пустая() ИЛИ НЕ ЗначениеЗаполнено(Ответственный) Тогда
        Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
    КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧСотрудники.ДатаОтгула КАК ДатаОтгула
		|ПОМЕСТИТЬ ВТ_ДатыОтгула
		|ИЗ
		|	&ТЧСотрудники КАК ТЧСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Период КАК Период,
		|	ВТ_ДатыОтгула.ДатаОтгула КАК ДатаОтгула
		|ИЗ
		|	ВТ_ДатыОтгула КАК ВТ_ДатыОтгула
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ДатыЗакрытияРедактированияПоказателей.СрезПоследних КАК ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних
		|		ПО (ВТ_ДатыОтгула.ДатаОтгула <= КОНЕЦПЕРИОДА(ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Период, МЕСЯЦ))
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Период УБЫВ"; 
	Запрос.УстановитьПараметр("ТЧСотрудники",Сотрудники.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда		
		Отказ = Истина; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Документ не может быть записан. Дата отгула " + Формат(Выборка.ДатаОтгула,"ДФ=dd.MM.yyyy") + " находится в закрытом периоде.";
		Сообщение.Сообщить();	 
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти