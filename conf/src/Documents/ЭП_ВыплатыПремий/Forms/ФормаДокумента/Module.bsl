
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	Если ЗначениеЗаполнено(Объект.ВидДокумента) Тогда
		ВидДокументаПриИзмененииНаСервере();		
	КонецЕсли;
	
    Если Пользователи.РолиДоступны("ЭП_ПерерасчетРасчетаПоказателей",,ЛОЖЬ) Тогда
		Элементы.БлокироватьМесяц.Доступность = Истина;	
	КонецЕсли;
    УстановитьВидимостьОтВидаВыплаты();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	 // СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
    // Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	 // СтандартныеПодсистемы.УправлениеДоступом
    Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
        МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
        МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    КонецЕсли;
    // Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
 //Проверка проекта на Проект сопровождение и заполнение ВидДокумента
&НаСервере
Процедура ПроектПриИзмененииНаСервере()
	
	Если Объект.Проект.ЭП_ПроектСопровождение = Истина Тогда
		Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ВыплатаПоСопровждению;
	Иначе
		Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата; 
	КонецЕсли;	
	
	Если Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		Элементы.СотрудникиТехническийПроект.Видимость = Ложь;
	Иначе
		Элементы.СотрудникиТехническийПроект.Видимость = Истина;
	КонецЕсли;
    Объект.Сотрудники.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	ПроектПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	ВидДокументаПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСотрудники

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПроектныйКоэффициентПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ПересчитатьСтрокуТабличнойЧастиНаКлиенте(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Устанавливает проектный коэффициент по умолчанию 1
&НаКлиенте
Процедура СотрудникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	
	Если НоваяСтрока И НЕ Копирование Тогда 
		
		СтрокаТабличнойЧасти.ПроектныйКоэффициент = 1;
		СтрокаТабличнойЧасти.СреднийКоэффициентПЗК = 1;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

 //Выбор этапов из списка
&НаКлиенте
Процедура СотрудникиОбработкаВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатВыбора) Тогда
		АдресТаблицыЭтаповИАктов = РезультатВыбора.АдресТаблицыЭтаповИАктов;
		СотрудникиНаСервере(АдресТаблицыЭтаповИАктов);
	Иначе 
		Возврат
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАктыРеализации(ТаблицаАктовИЭтапов)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АктыИЭтапы.Этап КАК Этап,
	               |	АктыИЭтапы.Акт КАК Акт
	               |ПОМЕСТИТЬ ВТ_ПодобранныеЭтапыИАкты
	               |ИЗ
	               |	&АктыИЭтапы КАК АктыИЭтапы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_РеализацияОбороты.Регистратор КАК АктРеализация,
	               |	СУММА(ЭП_РеализацияОбороты.СуммаОборот) КАК СуммаАкта,
	               |	ЭП_РеализацияОбороты.Этап КАК Этап
	               |ИЗ
	               |	РегистрНакопления.ЭП_Реализация.Обороты(
	               |			,
	               |			,
	               |			Регистратор,
	               |			Проект = &Проект
	               |				И Этап В
	               |					(ВЫБРАТЬ
	               |						ВТ_ПодобранныеЭтапыИАкты.Этап КАК Этап
	               |					ИЗ
	               |						ВТ_ПодобранныеЭтапыИАкты КАК ВТ_ПодобранныеЭтапыИАкты)) КАК ЭП_РеализацияОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЭП_РеализацияОбороты.Регистратор,
	               |	ЭП_РеализацияОбороты.Этап";
	
	Запрос.УстановитьПараметр("АктыИЭтапы", ТаблицаАктовИЭтапов);
	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Объект.АктыРеализацииДляПремирования.Очистить();
	Пока Выборка.Следующий() Цикл
	
		НовСтр = Объект.АктыРеализацииДляПремирования.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
	
	КонецЦикла;
	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАктыПоступления(ТаблицаАктовИЭтапов)

	Запрос = Новый Запрос;
	Если Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда

		Запрос.Текст = "ВЫБРАТЬ
		               |	АктыИЭтапы.Этап КАК Этап,
		               |	АктыИЭтапы.Акт КАК Акт
		               |ПОМЕСТИТЬ ВТ_ПодобранныеЭтапыИАкты
		               |ИЗ
		               |	&АктыИЭтапы КАК АктыИЭтапы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЭП_ПоступлениеОбороты.Регистратор КАК АктПоступление,
		               |	СУММА(ЭП_ПоступлениеОбороты.СуммаОборот) КАК СуммаАкта,
		               |	ЭП_ПоступлениеОбороты.Этап КАК Этап
		               |ИЗ
		               |	РегистрНакопления.ЭП_Поступление.Обороты(
		               |			,
		               |			,
		               |			Регистратор,
		               |			Проект = &Проект
		               |				И Этап В
		               |					(ВЫБРАТЬ
		               |						ВТ_ПодобранныеЭтапыИАкты.Этап КАК Этап
		               |					ИЗ
		               |						ВТ_ПодобранныеЭтапыИАкты КАК ВТ_ПодобранныеЭтапыИАкты)) КАК ЭП_ПоступлениеОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЭП_ПоступлениеОбороты.Регистратор,
		               |	ЭП_ПоступлениеОбороты.Этап"; 
	
	Иначе
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	АктыИЭтапы.Этап КАК Этап,
		               |	АктыИЭтапы.Акт КАК Акт
		               |ПОМЕСТИТЬ ВТ_ПодобранныеЭтапыИАкты
		               |ИЗ
		               |	&АктыИЭтапы КАК АктыИЭтапы
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЭП_ПоступлениеПроектыСопровожденияОбороты.Регистратор КАК АктПоступление,
		               |	СУММА(ЭП_ПоступлениеПроектыСопровожденияОбороты.СуммаОборот) КАК СуммаАкта,
		               |	ЭП_ПоступлениеПроектыСопровожденияОбороты.ТехническийПроект.ЭП_РеализацияУслуг.Этап КАК Этап
		               |ИЗ
		               |	РегистрНакопления.ЭП_ПоступлениеПроектыСопровождения.Обороты(
		               |			,
		               |			,
		               |			Регистратор,
		               |			Проект = &Проект
		               |				И ТехническийПроект В
		               |					(ВЫБРАТЬ
		               |						ВТ_ПодобранныеЭтапыИАкты.Этап КАК Этап
		               |					ИЗ
		               |						ВТ_ПодобранныеЭтапыИАкты КАК ВТ_ПодобранныеЭтапыИАкты)) КАК ЭП_ПоступлениеПроектыСопровожденияОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЭП_ПоступлениеПроектыСопровожденияОбороты.Регистратор,
		               |	ЭП_ПоступлениеПроектыСопровожденияОбороты.ТехническийПроект.ЭП_РеализацияУслуг.Этап"; 
	
	КонецЕсли;
	Запрос.УстановитьПараметр("АктыИЭтапы", ТаблицаАктовИЭтапов);
	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Объект.АктыПоступленияДляПремирования.Очистить();
	Пока Выборка.Следующий() Цикл
	
		НовСтр = Объект.АктыПоступленияДляПремирования.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Выборка);
	
	КонецЦикла;
	

КонецПроцедуры

// Заполняет сотрудников в табличной части документа по кнопке заполнить
&НаСервере
Процедура СотрудникиНаСервере(АдресТаблицыЭтаповИАктов) Экспорт
	ТаблицаЭтаповИАктов = ПолучитьИзВременногоХранилища(АдресТаблицыЭтаповИАктов); 
	
	ЗаполнитьАктыПоступления(ТаблицаЭтаповИАктов);	
	ЗаполнитьАктыРеализации(ТаблицаЭтаповИАктов);
	
	///////
	Если Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		
		// Запрос к РегистрНакопления.ЭП_УчетПремий.Остатки
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаОстатков.Пользователь КАК Пользователь,
		|	ТаблицаОстатков.Проект КАК Проект,
		|	ТаблицаОстатков.Этап КАК Этап,
		|	ТаблицаОстатков.ОстатокПЗКОстаток КАК ОстатокПЗК,
		|	ТаблицаОстатков.ПремияПоЭтапуОстаток КАК ПремияПоЭтапу,
		|	ТаблицаОстатков.ПроектнаяПремияОстаток КАК ПроектнаяПремия,
		|	ЕСТЬNULL(Подзапрос.СреднийКоэффициент, 1) КАК СреднийКоэффициент
		|ИЗ
		|	РегистрНакопления.ЭП_УчетПремий.Остатки(
		|			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
		|			Проект = &Проект
		|				И Этап В (&МассивЭтапов)) КАК ТаблицаОстатков
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаКоэффициентов.Сотрудник КАК Сотрудник,
		|			СРЕДНЕЕ(ТаблицаКоэффициентов.Значение) КАК СреднийКоэффициент
		|		ИЗ
		|			РегистрСведений.ЭП_РассчитанныеКоэффициентыПоСотрудникам КАК ТаблицаКоэффициентов
		|		ГДЕ
		|			ТаблицаКоэффициентов.Период >= &ДатаНачалаПодсчетаКоэффициентаПЗК
		|			И ТаблицаКоэффициентов.Период <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
		|			И ТаблицаКоэффициентов.ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТаблицаКоэффициентов.Сотрудник) КАК Подзапрос
		|		ПО ТаблицаОстатков.Пользователь.ЭП_Сотрудник = Подзапрос.Сотрудник";
		
		// Наложение отбора путем установки параметров из данного документа
		ДатаНачалаПодсчетаКоэффициентаПЗК = НачалоМесяца(ДобавитьМесяц(Объект.Дата, -6));
		Если ДатаНачалаПодсчетаКоэффициентаПЗК < '20230701' Тогда
			ДатаНачалаПодсчетаКоэффициентаПЗК = '20230701'
		КонецЕсли;
		Запрос.УстановитьПараметр("ДатаНачалаПодсчетаКоэффициентаПЗК", ДатаНачалаПодсчетаКоэффициентаПЗК);
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("Проект", Объект.Проект);
		Запрос.УстановитьПараметр("МассивЭтапов", ТаблицаЭтаповИАктов.ВыгрузитьКолонку("Этап"));
		//Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
		// Выполнение запроса
		РезультатЗапроса = Запрос.Выполнить();
		
		// Заполнение табличной части сотрудники
		Выборка = РезультатЗапроса.Выбрать();
		ТабличнаяЧастьСотрудники = Объект.Сотрудники;
		ТабличнаяЧастьСотрудники.Очистить();
		Пока Выборка.Следующий() Цикл
			
			СтрокаТЧ = ТабличнаяЧастьСотрудники.Добавить();
			СтрокаТЧ.Пользователь = Выборка.Пользователь;
			СтрокаТЧ.Этап = Выборка.Этап; 
			СтрокаТЧ.СреднийКоэффициентПЗК = Выборка.СреднийКоэффициент;
			СтрокаТЧ.ПроектныйКоэффициент = 1;

			Если Объект.ВидВыплаты = Перечисления.ЭП_ВидВыплатыПремии.ПроектнаяПремия Тогда
				СтрокаТЧ.ПроектнаяПремия = Выборка.ПроектнаяПремия;
				СтрокаТЧ.ИтогБезУчетаПроектногоКоэффициента = 0;
                СтрокаТЧ.ПремияПоЭтапу = 0; 
				СтрокаТЧ.ОстатокПЗК = 0;
			Иначе
				СтрокаТЧ.ПроектнаяПремия = 0;  
				СтрокаТЧ.ИтогБезУчетаПроектногоКоэффициента = Выборка.ОстатокПЗК + Выборка.ПремияПоЭтапу;
                СтрокаТЧ.ПремияПоЭтапу = Выборка.ПремияПоЭтапу; 
				СтрокаТЧ.ОстатокПЗК = Выборка.ОстатокПЗК;
			КонецЕсли;	
			
		КонецЦикла;
	Иначе
		//Заполнение ТЧ по виду документа "ВыплатаПоСопровождению"
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	УчетПремийПоДокументамОстатки.Пользователь КАК Пользователь,
		               |	УчетПремийПоДокументамОстатки.Проект КАК Проект,
		               |	УчетПремийПоДокументамОстатки.Этап КАК Этап,
		               |	УчетПремийПоДокументамОстатки.ТехническийПроект КАК ТехническийПроект,
		               |	УчетПремийПоДокументамОстатки.ОстатокПЗКОстаток КАК ОстатокПЗК,
		               |	УчетПремийПоДокументамОстатки.ПроектнаяПремияОстаток КАК ПроектнаяПремия,
		               |	УчетПремийПоДокументамОстатки.ПремияПоЭтапуОстаток КАК ПремияПоЭтапу,
		               |	ЕСТЬNULL(Подзапрос.СреднийКоэффициент, 1) КАК СреднийКоэффициент
		               |ИЗ
		               |	РегистрНакопления.ЭП_УчетПремийПоДокументам.Остатки(
		               |			КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ),
		               |			Проект = &Проект
		               |				И (Этап В (&МассивЭтапов)
		               |					ИЛИ ТехническийПроект В (&МассивЭтапов))) КАК УчетПремийПоДокументамОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ТаблицаКоэффициентов.Сотрудник КАК Сотрудник,
		               |			СРЕДНЕЕ(ТаблицаКоэффициентов.Значение) КАК СреднийКоэффициент
		               |		ИЗ
		               |			РегистрСведений.ЭП_РассчитанныеКоэффициентыПоСотрудникам КАК ТаблицаКоэффициентов
		               |		ГДЕ
		               |			ТаблицаКоэффициентов.Период >= &ДатаНачалаПодсчетаКоэффициентаПЗК
		               |			И ТаблицаКоэффициентов.Период <= НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ)
		               |			И ТаблицаКоэффициентов.ГруппаРасчетныхПрофилей.ИспользуетсяПроектныйПоказатель
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ТаблицаКоэффициентов.Сотрудник) КАК Подзапрос
		               |		ПО УчетПремийПоДокументамОстатки.Пользователь.ЭП_Сотрудник = Подзапрос.Сотрудник";
		//МоментВрем = Новый МоментВремени(Объект.Дата, Объект.Ссылка);
		ДатаНачалаПодсчетаКоэффициентаПЗК = НачалоМесяца(ДобавитьМесяц(Объект.Дата, -6));
		Если ДатаНачалаПодсчетаКоэффициентаПЗК < '20230701' Тогда
			ДатаНачалаПодсчетаКоэффициентаПЗК = '20230701'
		КонецЕсли;
		Запрос.УстановитьПараметр("ДатаНачалаПодсчетаКоэффициентаПЗК", ДатаНачалаПодсчетаКоэффициентаПЗК);
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("Проект", Объект.Проект);
		Запрос.УстановитьПараметр("МассивЭтапов", ТаблицаЭтаповИАктов.ВыгрузитьКолонку("Этап"));
		//Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		ТабличнаяЧастьСотрудники = Объект.Сотрудники;
		ТабличнаяЧастьСотрудники.Очистить();
		Пока Выборка.Следующий() Цикл
			СтрокаТЧ = ТабличнаяЧастьСотрудники.Добавить();
			СтрокаТЧ.Пользователь = Выборка.Пользователь;
			СтрокаТЧ.ТехническийПроект = Выборка.ТехническийПроект;
			СтрокаТЧ.Этап = Выборка.Этап;
			СтрокаТЧ.СреднийКоэффициентПЗК = Выборка.СреднийКоэффициент;
			СтрокаТЧ.ПроектныйКоэффициент = 1;

			Если Объект.ВидВыплаты = Перечисления.ЭП_ВидВыплатыПремии.ПроектнаяПремия Тогда
				СтрокаТЧ.ПроектнаяПремия = Выборка.ПроектнаяПремия;
				СтрокаТЧ.ОстатокПЗК = 0;
				СтрокаТЧ.ПремияПоЭтапу = 0;
				СтрокаТЧ.ИтогБезУчетаПроектногоКоэффициента = 0;
			Иначе
				СтрокаТЧ.ОстатокПЗК = Выборка.ОстатокПЗК;
				СтрокаТЧ.ПремияПоЭтапу = Выборка.ПремияПоЭтапу;
				СтрокаТЧ.ИтогБезУчетаПроектногоКоэффициента = Выборка.ОстатокПЗК + Выборка.ПремияПоЭтапу;
				СтрокаТЧ.ПроектнаяПремия = 0;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	РассчитатьНаСервере();
	
	ИтогСуммаПоПроекту = 0;
	ИтогСумма = 0;
	Для Каждого Строка Из Объект.Сотрудники Цикл
		Если Строка.СреднийКоэффициентПЗК <= 0.70 Тогда
			ИтогСуммаПоПроекту = ИтогСуммаПоПроекту + 0;
			ИтогСумма = ИтогСумма + 0; 
		Иначе
			ИтогСуммаПоПроекту = ИтогСуммаПоПроекту + Строка.СуммаПоПроекту;
			ИтогСумма = ИтогСумма + Строка.ИтогСУчетомПроектногоКоэффициента;
		КонецЕсли;	
	КонецЦикла;
	
	//Элементы.СотрудникиСуммаПоПроекту.ТекстПодвала = СуммаПоПроекту;
КонецПроцедуры

// Команда заполнения сотрудников
&НаКлиенте
Процедура Заполнить(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПослеПоказаПредупреждения", ЭтотОбъект);
	Если ЗначениеЗаполнено(Объект.Сотрудники) Тогда
		ПоказатьВопрос(Оповещение,"Заполненные ранее данные будут утеряны. Продолжить?",РежимДиалогаВопрос.ДаНет);
		
	Иначе
		ОткрытьФормуВыбораЭтапов();
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПослеПоказаПредупреждения(Результат, ДополнительнвеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
	
		ОткрытьФормуВыбораЭтапов();	
	
	КонецЕсли;
	

КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьФормуВыбораЭтапов()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Проект", Объект.Проект);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("ВидДокумента", Объект.ВидДокумента);
	ПараметрыФормы.Вставить("Период", Объект.Дата);     
	ПараметрыФормы.Вставить("ВидВыплаты", Объект.ВидВыплаты);
	ОписаниеОповещения = Новый ОписаниеОповещения("СотрудникиОбработкаВыбораЗавершение", ЭтаФорма);
	ОткрытьФорму("Документ.ЭП_ВыплатыПремий.Форма.ФормаПодбораЭтапов", ПараметрыФормы, Элементы.Сотрудники,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	КонецДняИМесяца = КонецМесяца(Объект.Дата);
КонецПроцедуры

&НаСервере
Процедура ВидДокументаПриИзмененииНаСервере()
	
	Если Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		Элементы.СотрудникиТехническийПроект.Видимость = Ложь;
	Иначе
		Элементы.СотрудникиТехническийПроект.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидВыплатыПриИзменении(Элемент)
	
	УстановитьВидимостьОтВидаВыплаты();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьОтВидаВыплаты()

	Если Объект.ВидВыплаты = ПредопределенноеЗначение("Перечисление.ЭП_ВидВыплатыПремии.ПремияПоЭтапу") Тогда
	
		Элементы.СотрудникиПроектнаяПремия.Видимость = Ложь;
		Элементы.СотрудникиСуммаПоПроекту.Видимость = Ложь;
		Элементы.СотрудникиИтогБезУчетаПроектногоКоэффициента.Видимость = Истина;
		Элементы.СотрудникиИтогСУчетомПроектногоКоэффициента.Видимость = Истина;
		Элементы.СотрудникиПЗК.Видимость = Истина;		
		Элементы.СотрудникиОстатокПЗК.Видимость = Истина;
		
	Иначе
		
		Элементы.СотрудникиПроектнаяПремия.Видимость = Истина;
		Элементы.СотрудникиСуммаПоПроекту.Видимость = Истина;
		Элементы.СотрудникиИтогБезУчетаПроектногоКоэффициента.Видимость = Ложь;
		Элементы.СотрудникиИтогСУчетомПроектногоКоэффициента.Видимость = Ложь;
		Элементы.СотрудникиПЗК.Видимость = Ложь; 
		Элементы.СотрудникиОстатокПЗК.Видимость = Ложь;
	
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ПересчитатьСтрокуТабличнойЧасти(СтрокаТабличнойЧасти)

	Если Объект.ВидВыплаты = ПредопределенноеЗначение("Перечисление.ЭП_ВидВыплатыПремии.ПремияПоЭтапу") Тогда
	
		СтрокаТабличнойЧасти.ИтогБезУчетаПроектногоКоэффициента = СтрокаТабличнойЧасти.ОстатокПЗК + СтрокаТабличнойЧасти.ПремияПоЭтапу;
		СтрокаТабличнойЧасти.ИтогСУчетомПроектногоКоэффициента = (СтрокаТабличнойЧасти.ПремияПоЭтапу + СтрокаТабличнойЧасти.ОстатокПЗК) * 
														СтрокаТабличнойЧасти.СреднийКоэффициентПЗК*СтрокаТабличнойЧасти.ПроектныйКоэффициент * 
														СтрокаТабличнойЧасти.ЭП_КоэффициентБюджетаПремии;
														
	Иначе
		
		СтрокаТабличнойЧасти.СуммаПоПроекту = СтрокаТабличнойЧасти.ПроектнаяПремия * СтрокаТабличнойЧасти.ПроектныйКоэффициент * 
			СтрокаТабличнойЧасти.СреднийКоэффициентПЗК * СтрокаТабличнойЧасти.ЭП_КоэффициентБюджетаПремии;
															
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтрокуТабличнойЧастиНаКлиенте(СтрокаТабличнойЧасти)

	Если Объект.ВидВыплаты = ПредопределенноеЗначение("Перечисление.ЭП_ВидВыплатыПремии.ПремияПоЭтапу") Тогда
	
		СтрокаТабличнойЧасти.ИтогБезУчетаПроектногоКоэффициента = СтрокаТабличнойЧасти.ОстатокПЗК + СтрокаТабличнойЧасти.ПремияПоЭтапу;
		СтрокаТабличнойЧасти.ИтогСУчетомПроектногоКоэффициента = (СтрокаТабличнойЧасти.ПремияПоЭтапу + СтрокаТабличнойЧасти.ОстатокПЗК) * 
														СтрокаТабличнойЧасти.СреднийКоэффициентПЗК*СтрокаТабличнойЧасти.ПроектныйКоэффициент * 
														СтрокаТабличнойЧасти.ЭП_КоэффициентБюджетаПремии;
														
	Иначе
		
		СтрокаТабличнойЧасти.СуммаПоПроекту = СтрокаТабличнойЧасти.ПроектнаяПремия * СтрокаТабличнойЧасти.ПроектныйКоэффициент * 
			СтрокаТабличнойЧасти.СреднийКоэффициентПЗК * СтрокаТабличнойЧасти.ЭП_КоэффициентБюджетаПремии;
															
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура СотрудникиСреднийПроектныйКоэффициентПриИзменении(Элемент) 
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ПересчитатьСтрокуТабличнойЧастиНаКлиенте(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	РассчитатьНаСервере();
КонецПроцедуры

&НаСервере
Процедура РассчитатьНаСервере()
	
	Объект.ПоказателиПремирования.Очистить();
	
	Запрос = Новый Запрос; 
	
	Если Объект.ВидВыплаты = Перечисления.ЭП_ВидВыплатыПремии.ПремияПоЭтапу Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
	               |	АктыРеализации.Этап КАК Этап,
	               |	АктыРеализации.АктРеализация КАК АктРеализация,
	               |	АктыРеализации.СуммаАкта КАК СуммаАкта
	               |ПОМЕСТИТЬ ВТ_АктыРелазиации
	               |ИЗ
	               |	&АктыРеализации КАК АктыРеализации
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	АктыПоступления.Этап КАК Этап,
	               |	АктыПоступления.СуммаАкта КАК СуммаАкта,
	               |	АктыПоступления.АктПоступление КАК АктПоступление
	               |ПОМЕСТИТЬ ВТ_АктыПоступления
	               |ИЗ
	               |	&АктыПоступления КАК АктыПоступления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_АктыРелазиации.Этап КАК Этап,
	               |	СУММА(ВТ_АктыРелазиации.СуммаАкта) КАК РеализацияАкт,
	               |	0 КАК ПоступлениеАкт
	               |ПОМЕСТИТЬ ВТ_ИсходныеДанные
	               |ИЗ
	               |	ВТ_АктыРелазиации КАК ВТ_АктыРелазиации
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_АктыРелазиации.Этап
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_АктыПоступления.Этап,
	               |	0,
	               |	СУММА(ВТ_АктыПоступления.СуммаАкта)
	               |ИЗ
	               |	ВТ_АктыПоступления КАК ВТ_АктыПоступления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_АктыПоступления.Этап
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ИсходныеДанные.Этап КАК Этап,
	               |	СУММА(ВТ_ИсходныеДанные.РеализацияАкт) КАК РеализацияАкт,
	               |	СУММА(ВТ_ИсходныеДанные.ПоступлениеАкт) КАК ПоступлениеАкт
	               |ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
	               |ИЗ
	               |	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ИсходныеДанные.Этап
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПодготовленныеДанные.Этап КАК Этап,
	               |	ВТ_ПодготовленныеДанные.РеализацияАкт КАК РеализацияАкт,
	               |	ВТ_ПодготовленныеДанные.ПоступлениеАкт КАК ПоступлениеАкт,
	               |	ВТ_ПодготовленныеДанные.РеализацияАкт - ВТ_ПодготовленныеДанные.ПоступлениеАкт КАК ВаловаяПрибыль,
	               |	РазделыПроекта.ЭП_КоэффициентБюджетаПремии КАК КоэффициентБюджетаПремии,
	               |	(ВТ_ПодготовленныеДанные.РеализацияАкт - ВТ_ПодготовленныеДанные.ПоступлениеАкт) * РазделыПроекта.ЭП_КоэффициентБюджетаПремии КАК БюджетПремии
	               |ИЗ
	               |	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РазделыПроекта КАК РазделыПроекта
	               |		ПО ВТ_ПодготовленныеДанные.Этап = РазделыПроекта.Ссылка";
		
	
	Иначе
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	АктыРеализации.Этап КАК Этап,
		               |	АктыРеализации.АктРеализация КАК АктРеализация,
		               |	АктыРеализации.СуммаАкта КАК СуммаАкта
		               |ПОМЕСТИТЬ ВТ_АктыРелазиации
		               |ИЗ
		               |	&АктыРеализации КАК АктыРеализации
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	АктыПоступления.Этап КАК Этап,
		               |	АктыПоступления.СуммаАкта КАК СуммаАкта,
		               |	АктыПоступления.АктПоступление КАК АктПоступление
		               |ПОМЕСТИТЬ ВТ_АктыПоступления
		               |ИЗ
		               |	&АктыПоступления КАК АктыПоступления
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_АктыРелазиации.Этап КАК Этап,
		               |	СУММА(ВТ_АктыРелазиации.СуммаАкта) КАК РеализацияАкт,
		               |	0 КАК ПоступлениеАкт
		               |ПОМЕСТИТЬ ВТ_ИсходныеДанные
		               |ИЗ
		               |	ВТ_АктыРелазиации КАК ВТ_АктыРелазиации
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_АктыРелазиации.Этап
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ВТ_АктыПоступления.Этап,
		               |	0,
		               |	СУММА(ВТ_АктыПоступления.СуммаАкта)
		               |ИЗ
		               |	ВТ_АктыПоступления КАК ВТ_АктыПоступления
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_АктыПоступления.Этап
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ВТ_ИсходныеДанные.РеализацияАкт) КАК РеализацияАкт,
		               |	СУММА(ВТ_ИсходныеДанные.ПоступлениеАкт) КАК ПоступлениеАкт
		               |ПОМЕСТИТЬ ВТ_ПодготовленныеДанные
		               |ИЗ
		               |	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_ПодготовленныеДанные.РеализацияАкт КАК РеализацияАкт,
		               |	ВТ_ПодготовленныеДанные.ПоступлениеАкт КАК ПоступлениеАкт,
		               |	ВТ_ПодготовленныеДанные.РеализацияАкт - ВТ_ПодготовленныеДанные.ПоступлениеАкт КАК ВаловаяПрибыль,
		               |	&КоэфБюджетаПремии КАК КоэффициентБюджетаПремии,
		               |	(ВТ_ПодготовленныеДанные.РеализацияАкт - ВТ_ПодготовленныеДанные.ПоступлениеАкт) * &КоэфБюджетаПремии КАК БюджетПремии
		               |ИЗ
		               |	ВТ_ПодготовленныеДанные КАК ВТ_ПодготовленныеДанные";
		Запрос.УстановитьПараметр("КоэфБюджетаПремии", Объект.Проект.ЭП_КоэффициентБюджетаПремии);
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АктыПоступления", Объект.АктыПоступленияДляПремирования.Выгрузить());
	Запрос.УстановитьПараметр("АктыРеализации", Объект.АктыРеализацииДляПремирования.Выгрузить());	
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Объект.ПоказателиПремирования.Загрузить(Выгрузка);
	
	Запрос = Новый Запрос; 
	Запрос.УстановитьПараметр("ПоказателиПремирования", Объект.ПоказателиПремирования.Выгрузить()); 
	Запрос.УстановитьПараметр("Сотрудники", Объект.Сотрудники.Выгрузить());

	Если Объект.ВидВыплаты = Перечисления.ЭП_ВидВыплатыПремии.ПремияПоЭтапу Тогда
	
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПоказателиПремирования.Этап КАК Этап,
		               |	ПоказателиПремирования.БюджетПремии КАК БюджетПремии
		               |ПОМЕСТИТЬ ВТ_Показатели
		               |ИЗ
		               |	&ПоказателиПремирования КАК ПоказателиПремирования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Сотрудники.ИтогСУчетомПроектногоКоэффициента КАК ИтогСУчетомПроектногоКоэффициента,
		               |	Сотрудники.Этап КАК Этап
		               |ПОМЕСТИТЬ ВТ_Сотрудники
		               |ИЗ
		               |	&Сотрудники КАК Сотрудники
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ВТ_Сотрудники.ИтогСУчетомПроектногоКоэффициента) КАК ИтогСУчетомПроектногоКоэффициента,
		               |	ВТ_Сотрудники.Этап КАК Этап
		               |ПОМЕСТИТЬ ВТ_СуммаПоЭтапам
		               |ИЗ
		               |	ВТ_Сотрудники КАК ВТ_Сотрудники
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_Сотрудники.Этап
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_СуммаПоЭтапам.Этап КАК Этап,                                            
					   |	ВЫБОР                              
		               |		КОГДА ВТ_СуммаПоЭтапам.ИтогСУчетомПроектногоКоэффициента > ВТ_Показатели.БюджетПремии
		               |			ТОГДА ВЫРАЗИТЬ(ВТ_Показатели.БюджетПремии / ВТ_СуммаПоЭтапам.ИтогСУчетомПроектногоКоэффициента КАК ЧИСЛО(15, 2))
		               |		ИНАЧЕ 1
		               |	КОНЕЦ КАК ЭП_КоэффициентБюджетаПремии
		               |ИЗ
		               |	ВТ_СуммаПоЭтапам КАК ВТ_СуммаПоЭтапам,
		               |	ВТ_Показатели КАК ВТ_Показатели";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ПараметрыОтбораСтрок = Новый Структура;
			ПараметрыОтбораСтрок.Вставить("Этап", Выборка.Этап);
			НайденныеСтроки = Объект.Сотрудники.НайтиСтроки(ПараметрыОтбораСтрок);			
			
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			
				НайденнаяСтрока.ЭП_КоэффициентБюджетаПремии = Выборка.ЭП_КоэффициентБюджетаПремии;
			    ПересчитатьСтрокуТабличнойЧасти(НайденнаяСтрока);
				
			КонецЦикла;
			
		КонецЦикла;
	
	Иначе                
	
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПоказателиПремирования.БюджетПремии КАК БюджетПремии
		               |ПОМЕСТИТЬ ВТ_Показатели
		               |ИЗ
		               |	&ПоказателиПремирования КАК ПоказателиПремирования
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	Сотрудники.ПроектнаяПремия КАК ПроектнаяПремия
		               |ПОМЕСТИТЬ ВТ_Сотрудники
		               |ИЗ
		               |	&Сотрудники КАК Сотрудники
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ВТ_Сотрудники.ПроектнаяПремия) КАК ПроектнаяПремия
		               |ПОМЕСТИТЬ ВТ_СуммаПоЭтапам
		               |ИЗ
		               |	ВТ_Сотрудники КАК ВТ_Сотрудники
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ВТ_Показатели.БюджетПремии) КАК БюджетПремии
		               |ПОМЕСТИТЬ ВТ_СуммаБюджетов
		               |ИЗ
		               |	ВТ_Показатели КАК ВТ_Показатели
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЫБОР
		               |		КОГДА ВТ_СуммаПоЭтапам.ПроектнаяПремия > ВТ_СуммаБюджетов.БюджетПремии
		               |			ТОГДА ВЫРАЗИТЬ(ВТ_СуммаБюджетов.БюджетПремии / ВТ_СуммаПоЭтапам.ПроектнаяПремия КАК ЧИСЛО(15, 2))
		               |		ИНАЧЕ 1
		               |	КОНЕЦ КАК ЭП_КоэффициентБюджетаПремии
		               |ИЗ
		               |	ВТ_СуммаПоЭтапам КАК ВТ_СуммаПоЭтапам,
		               |	ВТ_СуммаБюджетов КАК ВТ_СуммаБюджетов";
		Выборка = Запрос.Выполнить().Выбрать(); Выборка.Следующий();
		
		Для каждого СтрокаТЧ Из Объект.Сотрудники Цикл
		
			СтрокаТЧ.ЭП_КоэффициентБюджетаПремии = Выборка.ЭП_КоэффициентБюджетаПремии;
			ПересчитатьСтрокуТабличнойЧасти(СтрокаТЧ);
		
		КонецЦикла;
	
	КонецЕсли;

	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиЭП_КоэффициентБюджетаПремииПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ПересчитатьСтрокуТабличнойЧастиНаКлиенте(СтрокаТабличнойЧасти);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
#КонецОбласти
