#Область ОбработчикиСобытий

// Устанавливает пользователя ответственным за документ
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

// Движения в регистр накопления
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_ВыплатыПремийСотрудники.Этап КАК Этап
	               |ПОМЕСТИТЬ ВТ_ЭтапыДокумента
	               |ИЗ
	               |	Документ.ЭП_ВыплатыПремий.Сотрудники КАК ЭП_ВыплатыПремийСотрудники
	               |ГДЕ
	               |	ЭП_ВыплатыПремийСотрудники.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЭП_ВыплатыПремийСотрудники.Этап
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_ВыплатаПремийОбороты.Этап КАК Этап
	               |ИЗ
	               |	РегистрНакопления.ЭП_ВыплатаПремий.Обороты(
	               |			,
	               |			,
	               |			,
	               |			Этап В
	               |				(ВЫБРАТЬ
	               |					ВТ_ЭтапыДокумента.Этап КАК Этап
	               |				ИЗ
	               |					ВТ_ЭтапыДокумента КАК ВТ_ЭтапыДокумента)) КАК ЭП_ВыплатаПремийОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЭП_ВыплатаПремийОбороты.Этап";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("По этапу %1 ранее проводилась выплата", Выборка.Этап);        
		Сообщение.Сообщить();
	
	КонецЦикла;
	
	Движения.ЭП_УчетПремий.Записывать = Истина;
	Движения.ЭП_ВыплатаПремий.Записывать = Истина;
	// Создание менеджера временных таблиц
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Если ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		Для Каждого ТекСтрокаСотрудники Из Сотрудники Цикл
			
			Если ТекСтрокаСотрудники.СреднийКоэффициентПЗК < 0.7 Тогда  
				Продолжить;
			КонецЕсли;
			
			Движение = Движения.ЭП_УчетПремий.ДобавитьРасход();
			// регистр ЭП_УчетПремий
			Движение.Период = Дата;
			Движение.Пользователь = ТекСтрокаСотрудники.Пользователь;
			Движение.Проект = Проект;
			Движение.Этап = ТекСтрокаСотрудники.Этап;
			Движение.ОстатокПЗК = ТекСтрокаСотрудники.ОстатокПЗК;
			Движение.ПремияПоЭтапу = ТекСтрокаСотрудники.ПремияПоЭтапу;
			Движение.ПроектнаяПремия = ТекСтрокаСотрудники.ПроектнаяПремия;
			// регистр ЭП_ВыплатаПремий
			Движение = Движения.ЭП_ВыплатаПремий.Добавить();
			Движение.Период = Дата; 
			Движение.Пользователь = ТекСтрокаСотрудники.Пользователь;
			Движение.Проект = Проект;
			Движение.Этап = ТекСтрокаСотрудники.Этап;
			Движение.СуммаПоЭтапу = ТекСтрокаСотрудники.ИтогСУчетомПроектногоКоэффициента;
			Движение.СуммаПоПроекту = ТекСтрокаСотрудники.СуммаПоПроекту;
			
		КонецЦикла;
	Иначе
		//регистр ЭП_УчетПремийПоДокументам
		Для Каждого ТекСтрокаСотрудники Из Сотрудники Цикл 
			
			Если ТекСтрокаСотрудники.СреднийКоэффициентПЗК < 0.7 Тогда  
				Продолжить;
			КонецЕсли;
			
			Движение = Движения.ЭП_УчетПремийПоДокументам.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Пользователь = ТекСтрокаСотрудники.Пользователь;
			Движение.Проект = Проект;
			//Движение.Этап = ТекСтрокаСотрудники.Этап;
			Движение.ТехническийПроект = ТекСтрокаСотрудники.ТехническийПроект;
			Движение.ОстатокПЗК = ТекСтрокаСотрудники.ОстатокПЗК;
			Движение.ПремияПоЭтапу = ТекСтрокаСотрудники.ПремияПоЭтапу;
			Движение.ПроектнаяПремия = ТекСтрокаСотрудники.ПроектнаяПремия;
			//регистр ЭП_ВыплатыПремийПоСопровождению
			Движение = Движения.ЭП_ВыплатыПремийПоСопровождению.Добавить();
			Движение.Период = Дата;
			Движение.Пользователь = ТекСтрокаСотрудники.Пользователь;
			Движение.Проект = Проект;
			Движение.Этап = ТекСтрокаСотрудники.Этап;
			Движение.ТехническийПроект = ТекСтрокаСотрудники.ТехническийПроект;
			Движение.СуммаПоЭтапу = ТекСтрокаСотрудники.ИтогСУчетомПроектногоКоэффициента;
			Движение.СуммаПоПроекту = ТекСтрокаСотрудники.СуммаПоПроекту;
		КонецЦикла;	
	КонецЕсли;	
	// Запись Движений
	Движения.ЭП_УчетПремий.Записывать = Истина;
	Движения.ЭП_ВыплатаПремий.Записывать = Истина;
	Движения.ЭП_УчетПремийПоДокументам.Записывать = Истина;
	Движения.ЭП_ВыплатыПремийПоСопровождению.Записывать = Истина;
	Движения.Записать(); 
	//ИзменениеЗначенийТЧСотрудники(); 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)     
	Возврат;
	// Сделать обратно в обработчик ПриЗаписи
	// Проверка на дублирование строк
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Сотрудники.Выгрузить());
	// Запрос к Табличной части, помещение во временную таблицу и дальнейшее
	// взаимодействие с ней
	Если ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТабЧасть.Пользователь КАК Пользователь,
		|	ТабЧасть.Этап КАК Этап,
		|	ТабЧасть.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ТабЧасть
		|ИЗ
		|	&Таблица КАК ТабЧасть
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабЧасть.Пользователь КАК Пользователь,
		|	ТабЧасть.НомерСтроки КАК НомерСтроки,
		|	ТабЧасть.Этап КАК Этап
		|ИЗ
		|	ВТ_ТабЧасть КАК ТабЧасть
		|ГДЕ
		|	(ТабЧасть.Пользователь, ТабЧасть.Этап) В
		|			(ВЫБРАТЬ
		|				ВТ.Пользователь,
		|				ВТ.Этап
		|			ИЗ
		|				ВТ_ТабЧасть КАК ВТ
		|			СГРУППИРОВАТЬ ПО
		|				ВТ.Пользователь,
		|				ВТ.Этап
		|			ИМЕЮЩИЕ
		|				КОЛИЧЕСТВО(ВТ.НомерСтроки) > 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ ПО
		|	Пользователь";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТабЧасть.Пользователь КАК Пользователь,
		|	ТабЧасть.НомерСтроки КАК НомерСтроки,
		|	ТабЧасть.ТехническийПроект КАК ТехническийПроект
		|ПОМЕСТИТЬ ВТ_ТабЧасть
		|ИЗ
		|	&Таблица КАК ТабЧасть
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабЧасть.Пользователь КАК Пользователь,
		|	ТабЧасть.НомерСтроки КАК НомерСтроки,
		|	ТабЧасть.ТехническийПроект КАК ТехническийПроект
		|ИЗ
		|	ВТ_ТабЧасть КАК ТабЧасть
		|ГДЕ
		|	(ТабЧасть.Пользователь, ТабЧасть.ТехническийПроект) В
		|			(ВЫБРАТЬ
		|				ВТ.Пользователь,
		|				ВТ.ТехническийПроект
		|			ИЗ
		|				ВТ_ТабЧасть КАК ВТ
		|			СГРУППИРОВАТЬ ПО
		|				ВТ.Пользователь,
		|				ВТ.ТехническийПроект
		|			ИМЕЮЩИЕ
		|				КОЛИЧЕСТВО(ВТ.НомерСтроки) > 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ ПО
		|	Пользователь";
	КонецЕсли;	  
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выб_Сотрудник = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выб_Сотрудник.Следующий() Цикл
			Выборка = Выб_Сотрудник.Выбрать();
			Сообщение = "";
			Пока Выборка.Следующий() Цикл
				Сообщение = Сообщение + ?(ПустаяСтрока(Сообщение), "", ", ") + Выборка.НомерСтроки;
			КонецЦикла;
			Сообщение = "Обнаружено дублирование строк: " + Сообщение;
			Сообщить(Сообщение);
		КонецЦикла;
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ЗначениеЗаполнено(БлокироватьМесяц) Тогда	
		Если Дата <= БлокироватьМесяц И Пользователи.РолиДоступны("ЭП_ПерерасчетРасчетаПоказателей",,ЛОЖЬ) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Период изменения закрыт с " + БлокироватьМесяц;
			Сообщение.Сообщить();
			
			Отказ = Истина;			
		КонецЕсли;	
	КонецЕсли; 
	
	Для Каждого Строка Из Сотрудники Цикл
		Если Строка.СреднийКоэффициентПЗК < 0.7 Тогда
			Строка.ОстатокПЗК = 0;
			Строка.СуммаПоПроекту = 0;
			Строка.ИтогБезУчетаПроектногоКоэффициента = 0;
			Строка.ИтогСУчетомПроектногоКоэффициента = 0;
			Строка.ПремияПоЭтапу = 0;
			Строка.ПроектнаяПремия = 0;
			
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры
