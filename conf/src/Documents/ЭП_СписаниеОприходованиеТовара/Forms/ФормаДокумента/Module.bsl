#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
		
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект); 
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
		Элементы.СтатусДокумента.Доступность = ПроверкаРоли();
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

 &НаКлиенте
Процедура РежимРаботыПриИзменении(Элемент)  
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВидОприходованиеСписаниеПриИзменении(Элемент)
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	Если Объект.РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу Тогда
		Элементы.Сотрудник.Видимость = Ложь; 
		Элементы.Склад.Видимость = Истина;
	Иначе
		Элементы.Сотрудник.Видимость = Истина;
		Элементы.Склад.Видимость = Ложь;
	КонецЕсли;
	
    Элементы.СтатусДокумента.Доступность = ПроверкаРоли();  
	Элементы.Ответственный.Доступность = ПроверкаРоли();
	
	Если Объект.РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСотруднику И 
		Объект.ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.ОприходованиеПриход Тогда 
		ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ПодменюПечать.Видимость = Истина; 
	Иначе
		ЭтотОбъект.КоманднаяПанель.ПодчиненныеЭлементы.ПодменюПечать.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

 #Область ОбработчикиСобытийТаблицыНоменклатура
 
  &НаКлиенте
Процедура НоменклатураИнвентарныйНомерАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если ПустаяСтрока(Текст) Тогда 
		
		ДанныеВыбора = ПолучитьДанныеВыбораПоИнвентарномуНомеру(Элемент, Элементы.Номенклатура.ТекущиеДанные.ИнвентарныйНомер,
		Элементы.Номенклатура.ТекущиеДанные.Номенклатура, 
		Объект.Склад, Элементы.Номенклатура.ТекущиеДанные.ВидНоменклатуры, 
		СтандартнаяОбработка); 
		
	Иначе
		
		ДанныеВыбора = ПолучитьДанныеВыбораПоИнвентарномуНомеру(Элемент, Текст, Элементы.Номенклатура.ТекущиеДанные.Номенклатура, 
		Объект.Склад, Элементы.Номенклатура.ТекущиеДанные.ВидНоменклатуры, СтандартнаяОбработка);	
		
	КонецЕсли;	 
	
КонецПроцедуры 
																			
&НаКлиенте
Процедура НоменклатураИнвентарныйНомерОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	НоменклатураИнвентарныйНомерПолучениеНоменклатуры(ВыбранноеЗначение, Элементы.Номенклатура.ТекущаяСтрока);
	
КонецПроцедуры 

 #КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Функция ПолучитьДанныеВыбораПоИнвентарномуНомеру(Элемент, Склад, Номенклатура, ИнвентарныйНомер, ВидНоменклатуры, СтандартнаяОбработка)
	
	РежимРаботы = ПолучениеДанныхРежимаРаботы(Объект.РежимРаботы);
	
	Если РежимРаботы Тогда
		
	    СтандартнаяОбработка = Ложь;
	                                                             
	    ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов",
	                                Новый Структура(),                                 "",                                               
									ПредопределенноеЗначение("ИспользованиеГруппИЭлементов.Элементы"));
	                                
	    ПараметрыПодбора.Вставить("ДополнительныеПараметры", Новый Структура("Склад, Номенклатура, ИнвентарныйНомер, РежимРаботы, Сотрудник, ВидНоменклатуры",
	                                                                           	Склад, 
	                                                                            Номенклатура,
																				ИнвентарныйНомер, РежимРаботы, Ложь, ВидНоменклатуры));
	    
	    Возврат	ПолучитьДанныеВыбора(Тип("СправочникСсылка.ЭП_Номенклатура"), ПараметрыПодбора);  
		
	Иначе 
				
		СтандартнаяОбработка = Ложь;
	                                                             
	    ПараметрыПодбора = Новый Структура("Отбор,СтрокаПоиска,ВыборГруппИЭлементов",
	                                Новый Структура(),                                 "",                                               
									ПредопределенноеЗначение("ИспользованиеГруппИЭлементов.Элементы"));
	                                
	    ПараметрыПодбора.Вставить("ДополнительныеПараметры", Новый Структура("Склад, Номенклатура, ИнвентарныйНомер, РежимРаботы, Сотрудник, ВидНоменклатуры",
	                                                                           	Склад, 
	                                                                            Номенклатура,
																				ИнвентарныйНомер, РежимРаботы, Объект.Сотрудник, ВидНоменклатуры));
	    
	    Возврат	ПолучитьДанныеВыбора(Тип("СправочникСсылка.ЭП_Номенклатура"), ПараметрыПодбора); 
		
	КонецЕсли;

КонецФункции

&НаСервере
Процедура НоменклатураИнвентарныйНомерПолучениеНоменклатуры(Текст, ИндексСтроки) 
	
	Если Объект.РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭП_ОстаткиНаСкладеОстатки.Номенклатура КАК Номенклатура,
			|	ЭП_СтоимостьНоменклатурыСрезПоследних.Стоимость КАК Стоимость,
			|	ЭП_Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
			|ИЗ
			|	РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки КАК ЭП_ОстаткиНаСкладеОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_СтоимостьНоменклатуры.СрезПоследних КАК ЭП_СтоимостьНоменклатурыСрезПоследних
			|		ПО ЭП_ОстаткиНаСкладеОстатки.Номенклатура = ЭП_СтоимостьНоменклатурыСрезПоследних.Номенклатура
			|			И ЭП_ОстаткиНаСкладеОстатки.ИнвентарныйНомер = ЭП_СтоимостьНоменклатурыСрезПоследних.ИнвентарныйНомер
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Номенклатура КАК ЭП_Номенклатура
			|		ПО ЭП_ОстаткиНаСкладеОстатки.Номенклатура = ЭП_Номенклатура.Ссылка
			|ГДЕ
			|	ЭП_ОстаткиНаСкладеОстатки.Склад = &Склад
			|	И ЭП_ОстаткиНаСкладеОстатки.ИнвентарныйНомер = &ИнвентарныйНомер
			|	И ЭП_ОстаткиНаСкладеОстатки.КоличествоОстаток > 0";
		
		Запрос.УстановитьПараметр("ИнвентарныйНомер", Текст);
		Запрос.УстановитьПараметр("Склад", Объект.Склад);
			
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СтрокаТЧ = Объект.Номенклатура.НайтиПоИдентификатору(ИндексСтроки);
			СтрокаТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура; 
			СтрокаТЧ.Стоимость = ВыборкаДетальныеЗаписи.Стоимость;
			СтрокаТЧ.ВидНоменклатуры = ВыборкаДетальныеЗаписи.ВидНоменклатуры;

		КонецЦикла;
		
	Иначе  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЭП_ОстаткиНаСотрудникахОстатки.Номенклатура КАК Номенклатура,
			|	ЭП_СтоимостьНоменклатурыСрезПоследних.Стоимость КАК Стоимость,
			|	ЭП_Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
			|ИЗ
			|	РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки КАК ЭП_ОстаткиНаСотрудникахОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_СтоимостьНоменклатуры.СрезПоследних КАК ЭП_СтоимостьНоменклатурыСрезПоследних
			|		ПО ЭП_ОстаткиНаСотрудникахОстатки.Номенклатура = ЭП_СтоимостьНоменклатурыСрезПоследних.Номенклатура
			|			И ЭП_ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер = ЭП_СтоимостьНоменклатурыСрезПоследних.ИнвентарныйНомер
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Номенклатура КАК ЭП_Номенклатура
			|		ПО ЭП_ОстаткиНаСотрудникахОстатки.Номенклатура = ЭП_Номенклатура.Ссылка
			|ГДЕ
			|	ЭП_ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер = &ИнвентарныйНомер
			|	И ЭП_ОстаткиНаСотрудникахОстатки.Сотрудник = &Сотрудник
			|	И ЭП_ОстаткиНаСотрудникахОстатки.КоличествоОстаток > 0";
		
		Запрос.УстановитьПараметр("ИнвентарныйНомер", Текст);
		Запрос.УстановитьПараметр("Сотрудник", Объект.Сотрудник);		
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СтрокаТЧ = Объект.Номенклатура.НайтиПоИдентификатору(ИндексСтроки);
			СтрокаТЧ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура; 
            СтрокаТЧ.Стоимость = ВыборкаДетальныеЗаписи.Стоимость;
			СтрокаТЧ.ВидНоменклатуры = ВыборкаДетальныеЗаписи.ВидНоменклатуры;
			
		КонецЦикла; 
		
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПроверкаРоли() 
	
	Возврат Пользователи.РолиДоступны("ЭП_СогласованиеДокументовСклада",,);
		
КонецФункции  

&НаСервере
Функция ПолучениеДанныхРежимаРаботы(РежимРаботы)
	
	Если РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;	

КонецФункции

&НаСервереБезКонтекста
Функция ВидНоменклатурыАвтоПодборНаСервере(СтрокаПоиска) 
	
	Возврат Справочники.ЭП_ВидНоменлкатуры.ПолучитьДанныеВыбора(Новый Структура("СтрокаПоиска, ВводПоСтрокеРасширенный", СтрокаПоиска, Истина));

КонецФункции

&НаКлиенте
Процедура ВидНоменклатурыАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВидНоменклатурыАвтоПодборНаСервере(Текст);

КонецПроцедуры

&НаКлиенте
Процедура ВидНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыПередачи = Элементы.Номенклатура.ТекущиеДанные.Номенклатура;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОтборПоВиду", ПараметрыПередачи);
	ОткрытьФорму("Справочник.ЭП_ВидНоменлкатуры.ФормаВыбора",ПараметрыФормы, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыПередачи = Элементы.Номенклатура.ТекущиеДанные.ВидНоменклатуры;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОтборПоВиду", ПараметрыПередачи);
	ОткрытьФорму("Справочник.ЭП_Номенклатура.ФормаВыбора",ПараметрыФормы, Элемент);
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПеремещенияНоменклатуры(Команда)
	
	 ОткрытьФорму("Документ.ЭП_СписаниеОприходованиеТовара.Форма.ФормаПерремещенияНоменклатурыПоОрганизациям", , ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти   

#Область АвтоматическоеЗаполнениеПоляКачествоНоменклатуры
 
 &НаСервере
Функция ПолучитьКачествоНоменклатуры(Номенклатура, ИнвентарныйНомер)   
	 Отбор = Новый Структура("Номенклатура, ИнвентарныйНомер", Номенклатура, ИнвентарныйНомер);
	 Возврат РегистрыСведений.ЭП_КачествоНоменклатуры.ПолучитьПоследнее(ТекущаяДатаСеанса(), Отбор).КачествоНоменклатуры;
КонецФункции

&НаКлиенте 
Процедура УстановитьКачествоНоменклатуры()
	СтрокаНоменклатуры = Элементы.Номенклатура.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаНоменклатуры.Номенклатура) И ЗначениеЗаполнено(СтрокаНоменклатуры.ИнвентарныйНомер) Тогда
		КачествоНоменклатуры = ПолучитьКачествоНоменклатуры(СтрокаНоменклатуры.Номенклатура, СтрокаНоменклатуры.ИнвентарныйНомер);
		Если КачествоНоменклатуры.Пустая() Тогда
			СтрокаНоменклатуры.КачествоНоменклатуры = ПредопределенноеЗначение("Справочник.ЭП_КачествоНоменклатуры.Новый");
		Иначе
			СтрокаНоменклатуры.КачествоНоменклатуры = КачествоНоменклатуры; 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНоменклатураПриИзменении(Элемент)
	УстановитьКачествоНоменклатуры();
КонецПроцедуры 

&НаКлиенте
Процедура НоменклатураИнвентарныйНомерПриИзменении(Элемент)
	УстановитьКачествоНоменклатуры();
КонецПроцедуры 

#КонецОбласти





