#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
 	
	Если НЕ СтатусДокумента Тогда 
		
	    Отказ = Истина; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Документ может быть проведен только после согласования";
		Сообщение.Сообщить();
				
		Возврат;		
	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени()); 
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник); 
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Движения.ЭП_ОстаткиНаСкладе.Очистить();
	Движения.ЭП_ОстаткиНаСкладе.Записывать = Истина;
	Движения.ЭП_ОстаткиНаСкладе.Записать();
	
	Движения.ЭП_ОстаткиНаСотрудниках.Очистить();
	Движения.ЭП_ОстаткиНаСотрудниках.Записывать = Истина;  
	Движения.ЭП_ОстаткиНаСотрудниках.Записать();
	
	Движения.ЭП_ОстаткиПоОрганизации.Очистить();
	Движения.ЭП_ОстаткиПоОрганизации.Записывать = Истина;
	Движения.ЭП_ОстаткиПоОрганизации.Записать();

	Движения.ЭП_СтоимостьНоменклатуры.Очистить();
	Движения.ЭП_СтоимостьНоменклатуры.Записывать = Истина;
	Движения.ЭП_СтоимостьНоменклатуры.Записать(); 
	
	Движения.ЭП_ОстаткиПоОрганизацииРН.Очистить();
	Движения.ЭП_ОстаткиПоОрганизацииРН.Записывать = Истина;
	Движения.ЭП_ОстаткиПоОрганизацииРН.Записать();

	Если РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСотруднику И 
		ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.ОприходованиеПриход Тогда  
		
		Запрос.Текст = ТекстЗапросаПоступлениеПоСотрудникуПриход(); 									
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.КоличествоОстатокНаСотрудниках > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Номенклатура " + ВыборкаДетальныеЗаписи.НоменклатураПредставление+ " c инвентарным номером " +
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер + " есть на сотруднике";
				Сообщение.Сообщить();
								
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокНаСкладе > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Данная номенклатура " + ВыборкаДетальныеЗаписи.НоменклатураПредставление+ " c инвентарным номером " +
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер + " уже оприходована";
				Сообщение.Сообщить();   
				
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокПоОрганизации > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Данная номенклатура " + ВыборкаДетальныеЗаписи.НоменклатураПредставление+ " c инвентарным номером " +
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер + " уже есть на организации";
				Сообщение.Сообщить();
				
			Иначе 
				
				РегистрСведенийСтоимостьНоменклатурыДвижения(Дата, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер, ВыборкаДетальныеЗаписи.Стоимость, Организация, Неопределено);  
								
				РегистрНакопленияОстаткиНаСотрудникахДвижения(Дата, Сотрудник, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер);  
				
				РегистрНакопленияОстаткиНаОрганизацииДвижения(Дата, Организация, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер);
				
			КонецЕсли;		
		КонецЦикла;
		
	ИначеЕсли РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу И 
		ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.ОприходованиеПриход Тогда 		
		
		Запрос.Текст = ТекстЗапросаПосткплениеПоСкладуПриход(); 				
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.КоличествоОстатокНаСкладе > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст =  "Данная номенклатура " + ВыборкаДетальныеЗаписи.НоменклатураПредставление+ " c инвентарным номером " +
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер + " уже есть на складе";
				Сообщение.Сообщить(); 
												
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокПоОрганизации > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Данная номенклатура " + ВыборкаДетальныеЗаписи.НоменклатураПредставление+ " c инвентарным номером " +
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер + " уже есть на организации";
				Сообщение.Сообщить();	

			
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокНаСотрудниках > 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Данная номенклатура " + ВыборкаДетальныеЗаписи.НоменклатураПредставление+ " c инвентарным номером " +
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер + " уже есть на сотруднике";
				Сообщение.Сообщить();
				
			Иначе
				
				РегистрСведенийСтоимостьНоменклатурыДвижения(Дата, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер, ВыборкаДетальныеЗаписи.Стоимость, Организация, Неопределено);  
								
				РегистрНакопленияОстаткиНаСкладеДвижения(Дата, Склад, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер); 
				
				РегистрНакопленияОстаткиНаОрганизацииДвижения(Дата, Организация, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер);
				
			КонецЕсли;		
		КонецЦикла;
		
	ИначеЕсли РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу И 
		ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.СписаниеРасход Тогда 
		
		Запрос.Текст = ТекстЗапросаСписаниеПоСкладу();   
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.КоличествоОстатокНаСкладе = 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя списать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером " + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которой нет на складе";
				Сообщение.Сообщить();
								
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокПоОрганизации = 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст ="Нельзя списать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером " + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которой нет на организации";
				Сообщение.Сообщить(); 	
				
			Иначе
				
				РегистрНакопленияОстаткиНаСкладеДвижения(Дата, Склад, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер); 
				
				РегистрСведенийСтоимостьНоменклатурыДвижения(Дата, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер, ВыборкаДетальныеЗаписи.Стоимость, Организация, 
				ВыборкаДетальныеЗаписи.РегистраторСтоимостьНоменклатуры); 
				
				РегистрНакопленияОстаткиНаОрганизацииДвижения(Дата, Организация, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер); 
																			
			КонецЕсли;
		КонецЦикла; 
		
	ИначеЕсли РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСотруднику И 
		ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.СписаниеРасход Тогда  
		
		Запрос.Текст = ТекстЗапросаСписаниеПоСотруднику(); 		
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.КоличествоОстатокНаСотрудниках = 0 Тогда
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя списать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером " + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которой нет на сотруднике";
				Сообщение.Сообщить();
				
			ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоОстатокНаОргнанизации = 0 Тогда 
				
				Отказ = Истина;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя списать номенклатуру "  + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c инвентарным номером " + ВыборкаДетальныеЗаписи.ИнвентарныйНомер +
				" которой нет на организации";
				Сообщение.Сообщить();
								
			Иначе
				
				РегистрНакопленияОстаткиНаСотрудникахДвижения(Дата, Сотрудник, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер);
				
				РегистрСведенийСтоимостьНоменклатурыДвижения(Дата, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер, ВыборкаДетальныеЗаписи.Стоимость, Организация, 
				ВыборкаДетальныеЗаписи.РегистраторСтоимостьНоменклатуры); 
				
				РегистрНакопленияОстаткиНаОрганизацииДвижения(Дата, Организация, ВыборкаДетальныеЗаписи.Номенклатура, 
				ВыборкаДетальныеЗаписи.ИнвентарныйНомер);
								
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ЭП_КачествоНоменклатуры.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_СписаниеОприходованиеТовараНоменклатура.КачествоНоменклатуры КАК КачествоНоменклатуры,
	|	ЭП_СписаниеОприходованиеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ЭП_СписаниеОприходованиеТовараНоменклатура.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.ЭП_СписаниеОприходованиеТовара.Номенклатура КАК ЭП_СписаниеОприходованиеТовараНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_КачествоНоменклатуры.СрезПоследних(&Дата, ) КАК ЭП_КачествоНоменклатурыСрезПоследних
	|		ПО ЭП_СписаниеОприходованиеТовараНоменклатура.Номенклатура = ЭП_КачествоНоменклатурыСрезПоследних.Номенклатура
	|			И ЭП_СписаниеОприходованиеТовараНоменклатура.ИнвентарныйНомер = ЭП_КачествоНоменклатурыСрезПоследних.ИнвентарныйНомер
	|ГДЕ
	|	ЭП_СписаниеОприходованиеТовараНоменклатура.Ссылка = &Ссылка
	|	И (ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры ЕСТЬ NULL
	|			ИЛИ ЭП_СписаниеОприходованиеТовараНоменклатура.КачествоНоменклатуры <> ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл  
		Движение = Движения.ЭП_КачествоНоменклатуры.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура; 
		Движение.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
		Движение.КачествоНоменклатуры = Выборка.КачествоНоменклатуры;
	КонецЦикла;

		
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Ответственный.Ссылка.Пустая() ИЛИ НЕ ЗначениеЗаполнено(Ответственный) Тогда
        Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
    КонецЕсли;
 
	РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСкладу; 
	ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.ОприходованиеПриход;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если РежимРаботы = Перечисления.ЭП_ВидыПоступлений.ПоСотруднику Тогда
		ПроверяемыеРеквизиты.Добавить("Сотрудник");	
	Иначе
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	 
	 Запрос = Новый Запрос;
	 Запрос.УстановитьПараметр("Таблица", Номенклатура.Выгрузить());
	 Запрос.Текст = "ВЫБРАТЬ
	 |	ТабЧасть.Номенклатура КАК Номенклатура,
	 |	ТабЧасть.ВидНоменклатуры КАК ВидНоменклатуры,
	 |	ТабЧасть.ИнвентарныйНомер КАК ИнвентарныйНомер,
	 |	ТабЧасть.НомерСтроки КАК НомерСтроки
	 |ПОМЕСТИТЬ ВТ_ТабЧасть
	 |ИЗ
	 |	&Таблица КАК ТабЧасть
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВТ_ТабЧасть.Номенклатура КАК Номенклатура,
	 |	ВТ_ТабЧасть.ВидНоменклатуры КАК ВидНоменклатуры,
	 |	ВТ_ТабЧасть.ИнвентарныйНомер КАК ИнвентарныйНомер,
	 |	ВТ_ТабЧасть.НомерСтроки КАК НомерСтроки
	 |ИЗ
	 |	ВТ_ТабЧасть КАК ВТ_ТабЧасть
	 |ГДЕ
	 |	(ВТ_ТабЧасть.Номенклатура, ВТ_ТабЧасть.ИнвентарныйНомер, ВТ_ТабЧасть.ВидНоменклатуры) В
	 |			(ВЫБРАТЬ
	 |				ВТ.Номенклатура,
	 |				ВТ.ИнвентарныйНомер,
	 |				ВТ.ВидНоменклатуры
	 |			ИЗ
	 |				ВТ_ТабЧасть КАК ВТ
	 |			СГРУППИРОВАТЬ ПО
	 |				ВТ.Номенклатура,
	 |				ВТ.ИнвентарныйНомер,
	 |				ВТ.ВидНоменклатуры
	 |			ИМЕЮЩИЕ
	 |				КОЛИЧЕСТВО(ВТ.НомерСтроки) > 1)
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	НомерСтроки
	 |ИТОГИ ПО
	 |	Номенклатура";
	 
	 Результат = Запрос.Выполнить();
	 Если Не Результат.Пустой() Тогда
		 Выб_Номенклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		 Пока Выб_Номенклатура.Следующий() Цикл
			 Выборка = Выб_Номенклатура.Выбрать();
			 Сообщение = "";
			 Пока Выборка.Следующий() Цикл
				 Сообщение = Сообщение + ?(ПустаяСтрока(Сообщение), "", ", ") + Выборка.НомерСтроки;
			 КонецЦикла;
			 Сообщение = "Обнаружено дублирование строк: " + Сообщение;
			 Сообщить(Сообщение);
		 КонецЦикла;
		 Отказ = Истина;
	 КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПоступлениеПоСотрудникуПриход()
	
	Возврат "ВЫБРАТЬ
	        |	СписаниеОприходованиеТовараНоменклатура.Номенклатура КАК Номенклатура,
	        |	СписаниеОприходованиеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	СписаниеОприходованиеТовараНоменклатура.Стоимость КАК Стоимость
	        |ПОМЕСТИТЬ Вт_Таб
	        |ИЗ
	        |	Документ.ЭП_СписаниеОприходованиеТовара.Номенклатура КАК СписаниеОприходованиеТовараНоменклатура
	        |ГДЕ
	        |	СписаниеОприходованиеТовараНоменклатура.Ссылка = &Ссылка
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Номенклатура,
	        |	ИнвентарныйНомер
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Вт_Таб.Номенклатура КАК Номенклатура,
	        |	Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	Вт_Таб.Стоимость КАК Стоимость,
	        |	ЕСТЬNULL(ОстаткиНаСотрудникахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокНаСотрудниках,
	        |	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокПоОрганизации,
	        |	Вт_Таб.Номенклатура.Представление КАК НоменклатураПредставление,
	        |	ЕСТЬNULL(ЭП_ОстаткиНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокНаСкладе
	        |ИЗ
	        |	Вт_Таб КАК Вт_Таб
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ОстаткиНаСотрудникахОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСотрудникахОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						Вт_Таб.Номенклатура КАК Номенклатура,
	        |						Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |					ИЗ
	        |						Вт_Таб КАК Вт_Таб)) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ЭП_ОстаткиНаСкладеОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиНаСкладеОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиНаСкладеОстатки.ИнвентарныйНомер";
	
КонецФункции

Функция ТекстЗапросаПосткплениеПоСкладуПриход()
	
	Возврат "ВЫБРАТЬ
	        |	СписаниеОприходованиеТовараНоменклатура.Номенклатура КАК Номенклатура,
	        |	СписаниеОприходованиеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	СписаниеОприходованиеТовараНоменклатура.Стоимость КАК Стоимость
	        |ПОМЕСТИТЬ Вт_Таб
	        |ИЗ
	        |	Документ.ЭП_СписаниеОприходованиеТовара.Номенклатура КАК СписаниеОприходованиеТовараНоменклатура
	        |ГДЕ
	        |	СписаниеОприходованиеТовараНоменклатура.Ссылка = &Ссылка
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Номенклатура,
	        |	ИнвентарныйНомер
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Вт_Таб.Номенклатура КАК Номенклатура,
	        |	Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	Вт_Таб.Стоимость КАК Стоимость,
	        |	ЕСТЬNULL(ОстаткиНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокНаСкладе,
	        |	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокПоОрганизации,
	        |	Вт_Таб.Номенклатура.Представление КАК НоменклатураПредставление,
	        |	ЕСТЬNULL(ЭП_ОстаткиНаСотрудникахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокНаСотрудниках
	        |ИЗ
	        |	Вт_Таб КАК Вт_Таб
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ОстаткиНаСкладеОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСкладеОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСкладеОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						Вт_Таб.Номенклатура КАК Номенклатура,
	        |						Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |					ИЗ
	        |						Вт_Таб КАК Вт_Таб)) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |					(ВЫБРАТЬ
	        |						ВТ_Таб.Номенклатура,
	        |						ВТ_Таб.ИнвентарныйНомер
	        |					ИЗ
	        |						ВТ_Таб КАК ВТ_Таб)) КАК ЭП_ОстаткиНаСотрудникахОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиНаСотрудникахОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер"; 
	
КонецФункции

Функция ТекстЗапросаСписаниеПоСкладу()
	
	Возврат "ВЫБРАТЬ
	        |	СписаниеОприходованиеТовараНоменклатура.Номенклатура КАК Номенклатура,
	        |	СписаниеОприходованиеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	СписаниеОприходованиеТовараНоменклатура.Стоимость КАК Стоимость
	        |ПОМЕСТИТЬ Вт_Таб
	        |ИЗ
	        |	Документ.ЭП_СписаниеОприходованиеТовара.Номенклатура КАК СписаниеОприходованиеТовараНоменклатура
	        |ГДЕ
	        |	СписаниеОприходованиеТовараНоменклатура.Ссылка = &Ссылка
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Вт_Таб.Номенклатура КАК Номенклатура,
	        |	Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	Вт_Таб.Стоимость КАК Стоимость,
	        |	ЕСТЬNULL(ОстаткиНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокНаСкладе,
	        |	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокПоОрганизации,
	        |	Вт_Таб.Номенклатура.Представление КАК НоменклатураПредставление,
	        |	ЭП_СтоимостьНоменклатурыСрезПоследних.Регистратор КАК РегистраторСтоимостьНоменклатуры
	        |ИЗ
	        |	Вт_Таб КАК Вт_Таб
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |						(ВЫБРАТЬ
	        |							ВТ_Таб.Номенклатура,
	        |							ВТ_Таб.ИнвентарныйНомер
	        |						ИЗ
	        |							ВТ_Таб КАК ВТ_Таб)
	        |					И Склад = &Склад) КАК ОстаткиНаСкладеОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСкладеОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСкладеОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |						(ВЫБРАТЬ
	        |							Вт_Таб.Номенклатура КАК Номенклатура,
	        |							Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |						ИЗ
	        |							Вт_Таб КАК Вт_Таб)
	        |					И Организация = &Организация) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_СтоимостьНоменклатуры.СрезПоследних(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |						(ВЫБРАТЬ
	        |							Вт_Таб.Номенклатура КАК Номенклатура,
	        |							Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |						ИЗ
	        |							Вт_Таб КАК Вт_Таб)
	        |					И Организация = &Организация) КАК ЭП_СтоимостьНоменклатурыСрезПоследних
	        |		ПО Вт_Таб.Номенклатура = ЭП_СтоимостьНоменклатурыСрезПоследних.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_СтоимостьНоменклатурыСрезПоследних.ИнвентарныйНомер";
	
КонецФункции

Функция ТекстЗапросаСписаниеПоСотруднику()
	
	Возврат "ВЫБРАТЬ
	        |	СписаниеОприходованиеТовараНоменклатура.Номенклатура КАК Номенклатура,
	        |	СписаниеОприходованиеТовараНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	СписаниеОприходованиеТовараНоменклатура.Стоимость КАК Стоимость
	        |ПОМЕСТИТЬ Вт_Таб
	        |ИЗ
	        |	Документ.ЭП_СписаниеОприходованиеТовара.Номенклатура КАК СписаниеОприходованиеТовараНоменклатура
	        |ГДЕ
	        |	СписаниеОприходованиеТовараНоменклатура.Ссылка = &Ссылка
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Номенклатура,
	        |	ИнвентарныйНомер
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Вт_Таб.Номенклатура КАК Номенклатура,
	        |	Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер,
	        |	Вт_Таб.Стоимость КАК Стоимость,
	        |	ЕСТЬNULL(ОстаткиНаСотрудникахОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокНаСотрудниках,
	        |	ЕСТЬNULL(ЭП_ОстаткиПоОрганизацииРНОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокНаОргнанизации,
	        |	Вт_Таб.Номенклатура.Представление КАК НоменклатураПредставление,
	        |	ЭП_СтоимостьНоменклатурыСрезПоследних.Регистратор КАК РегистраторСтоимостьНоменклатуры
	        |ИЗ
	        |	Вт_Таб КАК Вт_Таб
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСотрудниках.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |						(ВЫБРАТЬ
	        |							ВТ_Таб.Номенклатура,
	        |							ВТ_Таб.ИнвентарныйНомер
	        |						ИЗ
	        |							ВТ_Таб КАК ВТ_Таб)
	        |					И Сотрудник = &Сотрудник) КАК ОстаткиНаСотрудникахОстатки
	        |		ПО Вт_Таб.Номенклатура = ОстаткиНаСотрудникахОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ОстаткиНаСотрудникахОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиПоОрганизацииРН.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |						(ВЫБРАТЬ
	        |							Вт_Таб.Номенклатура КАК Номенклатура,
	        |							Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |						ИЗ
	        |							Вт_Таб КАК Вт_Таб)
	        |					И Организация = &Организация) КАК ЭП_ОстаткиПоОрганизацииРНОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиПоОрганизацииРНОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиПоОрганизацииРНОстатки.ИнвентарныйНомер
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_СтоимостьНоменклатуры.СрезПоследних(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |						(ВЫБРАТЬ
	        |							Вт_Таб.Номенклатура КАК Номенклатура,
	        |							Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |						ИЗ
	        |							Вт_Таб КАК Вт_Таб)
	        |					И Организация = &Организация) КАК ЭП_СтоимостьНоменклатурыСрезПоследних
	        |		ПО Вт_Таб.Номенклатура = ЭП_СтоимостьНоменклатурыСрезПоследних.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_СтоимостьНоменклатурыСрезПоследних.ИнвентарныйНомер";
	
КонецФункции
              
Процедура РегистрНакопленияОстаткиНаСкладеДвижения(Дата, Склад, Номенклатура, ИнвентарныйНомер)
	
	Если ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.СписаниеРасход Тогда  
		
		Движение = Движения.ЭП_ОстаткиНаСкладе.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Номенклатура = Номенклатура;
		Движение.ИнвентарныйНомер = ИнвентарныйНомер;
		Движение.Количество = 1;    
		
	Иначе	
		
		Движение = Движения.ЭП_ОстаткиНаСкладе.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Номенклатура = Номенклатура;
		Движение.ИнвентарныйНомер = ИнвентарныйНомер;
		Движение.Количество = 1;
	КонецЕсли;
	
КонецПроцедуры   

Процедура РегистрНакопленияОстаткиНаСотрудникахДвижения(Дата, Сотрудник, Номенклатура, ИнвентарныйНомер)
	
	Если ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.СписаниеРасход Тогда  
		
		Движение = Движения.ЭП_ОстаткиНаСотрудниках.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Сотрудник = Сотрудник;
		Движение.Номенклатура = Номенклатура;
		Движение.ИнвентарныйНомер = ИнвентарныйНомер;
		Движение.Количество = 1;  
		
	Иначе	   
		
		Движение = Движения.ЭП_ОстаткиНаСотрудниках.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Сотрудник;
		Движение.Номенклатура = Номенклатура;
		Движение.ИнвентарныйНомер = ИнвентарныйНомер; 
		Движение.Количество = 1;  
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрСведенийОстаткиПоОрганизацииДвижения(Дата, Номенклатура, ИнвентарныйНомер, Организация, Регистратор)

	Если ЗначениеЗаполнено(Регистратор) Тогда
		
		Если ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.СписаниеРасход Тогда 
			
			Набор = РегистрыСведений.ЭП_ОстаткиПоОрганизации.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			Набор.Прочитать();
			Запись = Набор[0];
			
			Если Запись.Номенклатура = Номенклатура И Запись.ИнвентарныйНомер = ИнвентарныйНомер
				И Запись.Организация = Организация Тогда 
				Набор.Удалить(Запись);
				Набор.Записать();	
			КонецЕсли;
						
		Иначе
			
			МенеджерЗаписи = Движения.ЭП_ОстаткиПоОрганизации.Добавить();
			МенеджерЗаписи.Период = Дата;
			МенеджерЗаписи.Номенклатура = Номенклатура;
			МенеджерЗаписи.ИнвентарныйНомер = ИнвентарныйНомер;
			МенеджерЗаписи.Организация = Организация;
			
		КонецЕсли;
		
	Иначе		
		СтрокаОшибки = СтрШаблон("Запись номенклатура %1 инвентарный номер %2 по %3 из регистра сведений стоимость номенклатуры уже была удалена",
		Номенклатура, ИнвентарныйНомер, Организация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки);		
	КонецЕсли;

КонецПроцедуры  

Процедура РегистрСведенийСтоимостьНоменклатурыДвижения(Дата, Номенклатура, ИнвентарныйНомер, Стоимость, Организация, Регистратор)
	
	Если ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.СписаниеРасход И ЗначениеЗаполнено(Регистратор) Тогда  
		
		Набор = РегистрыСведений.ЭП_СтоимостьНоменклатуры.СоздатьНаборЗаписей();
		Набор.Отбор.Регистратор.Установить(Регистратор);
		Набор.Прочитать();		
		Запись = Набор[0]; 
		
		Если Запись.Номенклатура = Номенклатура И Запись.ИнвентарныйНомер = ИнвентарныйНомер
			И Запись.Стоимость = Стоимость И Запись.Организация = Организация Тогда 
			Набор.Удалить(Запись);
			Набор.Записать();	
		КонецЕсли;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Регистратор) Тогда
		
		МенеджерЗаписи = Движения.ЭП_СтоимостьНоменклатуры.Добавить(); 
		МенеджерЗаписи.Период = Дата;
		МенеджерЗаписи.Номенклатура = Номенклатура;
		МенеджерЗаписи.ИнвентарныйНомер = ИнвентарныйНомер;
		МенеджерЗаписи.Стоимость = Стоимость;  
		МенеджерЗаписи.Организация = Организация; 
		
		
	Иначе
		СтрокаОшибки = СтрШаблон("Запись номенклатура %1 инвентарный номер %2 по %3 из регистра сведений стоимость номенклатуры уже была удалена",
		Номенклатура, ИнвентарныйНомер, Организация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаОшибки);
	КонецЕсли;
	
КонецПроцедуры

Процедура РегистрНакопленияОстаткиНаОрганизацииДвижения(Дата, Организация, Номенклатура, ИнвентарныйНомер);
			
	Если ВидОприходованиеСписание = Перечисления.ЭП_ОприходованиеСписание.СписаниеРасход Тогда 
		
		Движение = Движения.ЭП_ОстаткиПоОрганизацииРН.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Номенклатура = Номенклатура;
		Движение.ИнвентарныйНомер = ИнвентарныйНомер;
		Движение.Количество = 1;
		
	Иначе	
		
		Движение = Движения.ЭП_ОстаткиПоОрганизацииРН.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Номенклатура = Номенклатура;
		Движение.ИнвентарныйНомер = ИнвентарныйНомер; 
		Движение.Количество = 1;   
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

