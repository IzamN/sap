#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры 

Процедура ОбработкаПроведения(Отказ, Режим) 
		
	НаборЗаписей = РегистрыСведений.ЭП_ПодтвержденныеЧасыПоСотрудникамВПроекте.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НоваяЗапись = НаборЗаписей.Добавить();  
	НоваяЗапись.Период = Дата;
	НоваяЗапись.Проект = Проект;
	НоваяЗапись.ВидОперации = ВидОперации; 
	НоваяЗапись.Ответственный = Ответственный;    
	НаборЗаписей.Записать();  

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнениеПроверкиНаОткрытуюДату(Отказ);	
	
КонецПроцедуры


// Процедура выполняет проверку на открытую дату у документа "Утверждение фактических трудозатрат":
// если позже указанной даты в документе не была зафиксирована запись об подтверждении часов по 
// сотрудникам по указанному проекту, то разрешена запись документа "Утверждение фактических трудозатрат"
// (по умолчанию Отказ = Ложь);
// если позже указанной даты в документе была зафиксирована запись об подтверждении часов по 
// сотрудникам по указанному проекту, то запись документа "Утверждение фактических трудозатрат" запрещается,
// выводится сообщение о запрете и процедура возвращает параметр Отказ в значении ИСТИНА. 
Процедура ВыполнениеПроверкиНаОткрытуюДату(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЭП_ПодтвержденныеЧасыПоСотрудникамВПроектеСрезПоследних.Регистратор КАК Регистратор,
	|	ЭП_ПодтвержденныеЧасыПоСотрудникамВПроектеСрезПоследних.Проект КАК Проект
	|ИЗ
	|	РегистрСведений.ЭП_ПодтвержденныеЧасыПоСотрудникамВПроекте.СрезПоследних(
	|			,
	|			НЕ Регистратор = &Ссылка
	|				И Проект = &Проект
	|				И ВидОперации = &ВидОперации) КАК ЭП_ПодтвержденныеЧасыПоСотрудникамВПроектеСрезПоследних
	|ГДЕ
	|	ЭП_ПодтвержденныеЧасыПоСотрудникамВПроектеСрезПоследних.Период >= &Период"; 
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать(); 
	Выборка.Следующий(); 
	
	Если ВидОперации = Перечисления.ЭП_ВидыОперацийНадФактическимиТрудозатратами.ТрудозатратыКоманды Тогда
		ТекстСообщения = "Невозможно провести документ, так как подтверждающий документ по данному проекту за указанную неделю был создан ранее: ";
	ИначеЕсли ВидОперации = Перечисления.ЭП_ВидыОперацийНадФактическимиТрудозатратами.ТрудозатратыРП Тогда
		ТекстСообщения = "Невозможно провести документ, так как подтверждающий документ по данному проекту за указанный месяц был создан ранее: ";
	КонецЕсли;  
	
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения + Выборка.Регистратор,
											,
											,
											,
											Отказ);	
	
КонецПроцедуры

#КонецОбласти  
