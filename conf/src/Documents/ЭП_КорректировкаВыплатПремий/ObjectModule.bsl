#Область ОбработчикиСобытий

// Движения в регистр накопления ЭП_УчетПремий и ЭП_УчетПремийПоДокументам 
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ЭП_УчетПремий.Записывать = Истина;
	Движения.ЭП_УчетПремийПоДокументам.Записывать = Истина;
	
	// Создание менеджера временных таблиц
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Если ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		
		Для Каждого ТекСтрокаСотрудники Из Сотрудники Цикл
			
			Движение = Движения.ЭП_УчетПремий.Добавить();
			
			Если ТекСтрокаСотрудники.ВидДвижения = Перечисления.ВидДвиженияРегистра.Приход Тогда
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Иначе
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			КонецЕсли;
			
			// регистр ЭП_УчетПремий
			Движение.Период = Дата;
			Движение.Пользователь = ТекСтрокаСотрудники.Пользователь;
			Движение.Проект = Проект;
			Движение.Этап = ТекСтрокаСотрудники.Этап;
			Движение.ОстатокПЗК = ТекСтрокаСотрудники.ОстатокПЗК;
			Движение.ПремияПоЭтапу = ТекСтрокаСотрудники.ПремияПоЭтапу;
			Движение.ПроектнаяПремия = ТекСтрокаСотрудники.ПроектнаяПремия;
			
		КонецЦикла;
	Иначе 
		Для Каждого ТекСтрокаСотрудникиПоДокументам Из СотрудникиПоДокументам Цикл
			
			Движение = Движения.ЭП_УчетПремийПоДокументам.Добавить();
			
			Если ТекСтрокаСотрудникиПоДокументам.ВидДвижения = Перечисления.ВидДвиженияРегистра.Приход Тогда
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Иначе
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			КонецЕсли;
			
			// регистр ЭП_УчетПремийПоДокументам
			Движение.Период = Дата;
			Движение.Пользователь = ТекСтрокаСотрудникиПоДокументам.Пользователь;
			Движение.Проект = Проект;
			//Движение.Этап = ТекСтрокаСотрудникиПоДокументам.Этап;
			Движение.ТехническийПроект = ТекСтрокаСотрудникиПоДокументам.ТехническийПроект;
			Движение.ОстатокПЗК = ТекСтрокаСотрудникиПоДокументам.ОстатокПЗК;
			Движение.ПремияПоЭтапу = ТекСтрокаСотрудникиПоДокументам.ПремияПоЭтапу;
			Движение.ПроектнаяПремия = ТекСтрокаСотрудникиПоДокументам.ПроектнаяПремия;	
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает пользователя ответственным за документ
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры
#КонецОбласти