#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьВидДокументаПоЗаполненнойТаблице();
КонецПроцедуры


&НаСервере
Процедура ПроектПриИзмененииНаСервере() 
	Если Объект.Проект.ЭП_ПроектСопровождение = Истина Тогда
		Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ВыплатаПоСопровждению;
		Элементы.Сотрудники.Видимость = Ложь;
		Элементы.СотрудникиПоДокументам.Видимость = Истина;
	Иначе
		Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата;
		Элементы.Сотрудники.Видимость = Истина;
		Элементы.СотрудникиПоДокументам.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Сотрудники) ИЛИ ЗначениеЗаполнено(Объект.СотрудникиПоДокументам) Тогда
		ОпределительОчистки = "ВидДокумента";
		ОчиститьТабличнуюЧастьПриИзменении(ОпределительОчистки);
	Иначе
		ПроектПриИзмененииНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	 // СтандартныеПодсистемы.УправлениеДоступом
    УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
    // Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	 // СтандартныеПодсистемы.УправлениеДоступом
    Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
        МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
        МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
    КонецЕсли;
    // Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийШапкиФормы

&НаСервере
Процедура ВидДокументаПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Сотрудники) ИЛИ ЗначениеЗаполнено(Объект.СотрудникиПоДокументам) Тогда
		Если ЗначениеЗаполнено(Объект.Сотрудники) Тогда
			Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата;		
		Иначе	
			Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ВыплатаПоСопровждению;
		КонецЕсли;
	Иначе
		Если Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
			Элементы.Сотрудники.Видимость = Истина;
			Элементы.СотрудникиПоДокументам.Видимость = Ложь;	
		Иначе
			Элементы.Сотрудники.Видимость = Ложь;
			Элементы.СотрудникиПоДокументам.Видимость = Истина;
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	ОпределительОчистки = "ВидДокумента";
	ОчиститьТабличнуюЧастьПриИзменении(ОпределительОчистки);	
КонецПроцедуры 

#КонецОбласти


#Область ОбработчикиКомандФормы

// Возвращает массив сотрудники
&НаСервереБезКонтекста
Функция ПодборСотрудниковНаСервере(Проект, Дата, Ссылка) Экспорт
	
	// Запрос к виртуальной таблице ЭП_УчетПремийОстатки
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭП_УчетПремийОстатки.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрНакопления.ЭП_УчетПремий.Остатки(&МоментВрем, ) КАК ЭП_УчетПремийОстатки
	|ГДЕ
	|	ЭП_УчетПремийОстатки.Проект = &Проект";
	
	// Наложение отбора путем установки параметров из данного документа
	МоментВрем = Новый МоментВремени(Дата, Ссылка);
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("МоментВрем", Новый Граница(МоментВрем, ВидГраницы.Исключая));
		
	// Выполнение запоса, выгрузка результата в массив и возврат этого массива сотрудники
	РезультатЗапроса = Запрос.Выполнить();
	МассивСотрудники = Новый Массив();

	МассивСотрудники = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Пользователь");
	
	Возврат МассивСотрудники;
	
КонецФункции

// Команда для подбора сотрудников
&НаКлиенте
Процедура ПодборСотрудников(Команда)
	ОпределительОчистки = "Подбор";
	ОчиститьТабличнуюЧастьПриИзменении(ОпределительОчистки);	
КонецПроцедуры 

&НаКлиенте
Процедура ОткрытьФормуПодбора()
	
	// обращение к функции на сервере для выполнения запроса с отбором
	МассивПользователи = ПодборСотрудниковНаСервере(Объект.Проект, Объект.Дата, Объект.Ссылка);
	
	// установка параметров формы и открытие формы выбора справочника ЭП_Сотрудники
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Проект", Объект.Проект);
	ПараметрыФормы.Вставить("Дата", Объект.Дата);
	ПараметрыФормы.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыФормы.Вставить("ВидДокумента", Объект.ВидДокумента);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ОписаниеОповещения = Новый ОписаниеОповещения("СотрудникиОбработкаВыбораЗавершение", ЭтаФорма);
	ОткрытьФорму("Документ.ЭП_КорректировкаВыплатПремий.Форма.ФормаПодбораСотрудников", 
				ПараметрыФормы, 
				Элементы.Сотрудники,
				,
				,
				,
				ОписаниеОповещения,
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоУволеннымНаСервере(Проект, Ссылка, Дата)
	
	Если Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		Таблица = Объект.Сотрудники;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЭП_УчетПремийОстатки.Пользователь КАК Пользователь,
		|	ЭП_УчетПремийОстатки.ОстатокПЗКОстаток КАК ОстатокПЗК,
		|	ЭП_УчетПремийОстатки.ПроектнаяПремияОстаток КАК ПроектнаяПремия,
		|	ЭП_УчетПремийОстатки.ПремияПоЭтапуОстаток КАК ПремияПоЭтапу,
		|	ЭП_УчетПремийОстатки.Этап КАК Этап,
		|	1 КАК ПроектныйКоэффициент,
		|	1 КАК СреднийКоэффициентПЗК,
		|	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияРегистра.Расход) КАК ВидДвижения
		|ИЗ
		|	РегистрНакопления.ЭП_УчетПремий.Остатки(&МоментВремени, ) КАК ЭП_УчетПремийОстатки
		|ГДЕ
		|	ЭП_УчетПремийОстатки.Пользователь.ЭП_Сотрудник.СтатусСотрудника = &СтатусСотрудника
		|	И ЭП_УчетПремийОстатки.Проект = &Проект";

	Иначе	
		Таблица = Объект.СотрудникиПоДокументам;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЭП_УчетПремийПоДокументамОстатки.Пользователь КАК Пользователь,
		|	ЭП_УчетПремийПоДокументамОстатки.ОстатокПЗКОстаток КАК ОстатокПЗК,
		|	ЭП_УчетПремийПоДокументамОстатки.ПроектнаяПремияОстаток КАК ПроектнаяПремия,
		|	ЭП_УчетПремийПоДокументамОстатки.ПремияПоЭтапуОстаток КАК ПремияПоЭтапу,
		|	ЭП_УчетПремийПоДокументамОстатки.Этап КАК Этап,
		|	ЭП_УчетПремийПоДокументамОстатки.ТехническийПроект КАК ТехническийПроект,
		|	1 КАК ПроектныйКоэффициент,
		|	1 КАК СреднийКоэффициентПЗК,
		|	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияРегистра.Расход) КАК ВидДвижения
		|ИЗ
		|	РегистрНакопления.ЭП_УчетПремийПоДокументам.Остатки(&МоментВремени, ) КАК ЭП_УчетПремийПоДокументамОстатки
		|ГДЕ
		|	ЭП_УчетПремийПоДокументамОстатки.Пользователь.ЭП_Сотрудник.СтатусСотрудника = &СтатусСотрудника
		|	И ЭП_УчетПремийПоДокументамОстатки.Проект = &Проект";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	МоментВремени = Новый МоментВремени(КонецДня(Дата), Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("СтатусСотрудника", Перечисления.ЭП_СтатусыСотрудников.Уволен);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Уволенные сотрудники по данному проекту отсутствуют.";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	ЗаполнениеТабличнойЧастиСотрудники(Выборка, Таблица);
	
	Если НЕ Выборка.Количество() = 0 Тогда
		Объект.Комментарий = "Список уволенных сотрудников для вывода регистра в ноль."; 	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоУволенным(Команда)
   	ОпределительОчистки = "ПоУволенным";
	ОчиститьТабличнуюЧастьПриИзменении(ОпределительОчистки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСотрудникиПоДокументам

// Устанавливает проектный коэффициент по умолчанию 1
&НаКлиенте
Процедура СотрудникиПоДокументамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТабличнойЧасти = Элементы.СотрудникиПоДокументам.ТекущиеДанные;
	
	Если НоваяСтрока И НЕ Копирование Тогда 
		
		СтрокаТабличнойЧасти.ПроектныйКоэффициент = 1;
		СтрокаТабличнойЧасти.СреднийКоэффициентПЗК = 1;
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПоДокументамПроектныйКоэффициентПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.СотрудникиПоДокументам.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПоДокументамОстатокПЗКПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.СотрудникиПоДокументам.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПоДокументамПроектнаяПремияПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.СотрудникиПоДокументам.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику 
&НаКлиенте
Процедура СотрудникиПоДокументамСреднийКоэффициентПЗКПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.СотрудникиПоДокументам.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПоДокументамПремияПоЭтапуПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.СотрудникиПоДокументам.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСотрудники

// Устанавливает проектный коэффициент по умолчанию 1
&НаКлиенте
Процедура СотрудникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	
	Если НоваяСтрока И НЕ Копирование Тогда 
		
		СтрокаТабличнойЧасти.ПроектныйКоэффициент = 1;
		СтрокаТабличнойЧасти.СреднийКоэффициентПЗК = 1;
		
	КонецЕсли;
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПроектныйКоэффициентПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиОстатокПЗКПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПроектнаяПремияПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику 
&НаКлиенте
Процедура СотрудникиСреднийКоэффициентПЗКПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

// Расчет суммы с учетом и без учета проектного коэффициента по каждому сотруднику
&НаКлиенте
Процедура СотрудникиПремияПоЭтапуПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Сотрудники.ТекущиеДанные;
	ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(СтрокаТабличнойЧасти);
	
КонецПроцедуры

#КонецОбласти  

#Область СлужебныеПроцедурыИФункци

&НаКлиенте
Процедура СотрудникиОбработкаВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт 

	Если ЗначениеЗаполнено(РезультатВыбора) Тогда
		МассивСотрудников = РезультатВыбора.МассивСотрудников;
		СотрудникиНаСервере(МассивСотрудников);
	Иначе
		Возврат;
	КонецЕсли;	

КонецПроцедуры 

&НаСервере
Процедура СотрудникиНаСервере(Сотрудники)

	Если Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата Тогда
		Таблица = Объект.Сотрудники;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЭП_УчетПремийОстатки.Пользователь КАК Пользователь,
		|	ЭП_УчетПремийОстатки.ОстатокПЗКОстаток КАК ОстатокПЗК,
		|	ЭП_УчетПремийОстатки.ПроектнаяПремияОстаток КАК ПроектнаяПремия,
		|	ЭП_УчетПремийОстатки.ПремияПоЭтапуОстаток КАК ПремияПоЭтапу,
		|	ЭП_УчетПремийОстатки.Этап КАК Этап,
		|	1 КАК ПроектныйКоэффициент,
		|	1 КАК СреднийКоэффициентПЗК,
		|	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияРегистра.Расход) КАК ВидДвижения
		|ИЗ
		|	РегистрНакопления.ЭП_УчетПремий.Остатки(
		|			&МоментВремени,
		|			Проект = &Проект
		|				И Пользователь В (&МассивСотрудников)) КАК ЭП_УчетПремийОстатки";

	Иначе	
		Таблица = Объект.СотрудникиПоДокументам;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЭП_УчетПремийПоДокументамОстатки.Пользователь КАК Пользователь,
		|	ЭП_УчетПремийПоДокументамОстатки.ОстатокПЗКОстаток КАК ОстатокПЗК,
		|	ЭП_УчетПремийПоДокументамОстатки.ПроектнаяПремияОстаток КАК ПроектнаяПремия,
		|	ЭП_УчетПремийПоДокументамОстатки.ПремияПоЭтапуОстаток КАК ПремияПоЭтапу,
		|	ЗНАЧЕНИЕ(Справочник.РазделыПроекта.ПустаяСсылка) КАК Этап,
		|	ЭП_УчетПремийПоДокументамОстатки.ТехническийПроект КАК ТехническийПроект,
		|	1 КАК ПроектныйКоэффициент,
		|	1 КАК СреднийКоэффициентПЗК,
		|	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияРегистра.Расход) КАК ВидДвижения
		|ИЗ
		|	РегистрНакопления.ЭП_УчетПремийПоДокументам.Остатки(
		|			&МоментВремени,
		|			Проект = &Проект
		|				И Пользователь В (&МассивСотрудников)) КАК ЭП_УчетПремийПоДокументамОстатки";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	МоментВремени = Новый МоментВремени(КонецДня(Объект.Дата), Объект.Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени, ВидГраницы.Включая));
    Запрос.УстановитьПараметр("Проект", Объект.Проект);
	Запрос.УстановитьПараметр("МассивСотрудников", Сотрудники);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = Запрос.Выполнить().Выбрать(); 
    ЗаполнениеТабличнойЧастиСотрудники(Выборка, Таблица);
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнениеТабличнойЧастиСотрудники(Выборка, Таблица)

	Пока Выборка.Следующий() Цикл	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.Пользователь = Выборка.Пользователь;
		НоваяСтрока.Этап = Выборка.Этап;    
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);

		ЭП_РасчетПоказателейКорректировкаИВыплатаПремий.РассчитатьСуммуСУчетомПроектногоКоэффициента(НоваяСтрока);
	КонецЦикла;

КонецПроцедуры 


&НаСервере
Процедура УстановитьВидДокументаПоЗаполненнойТаблице()

	Если ЗначениеЗаполнено(Объект.Сотрудники) Тогда 
		Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ОбычнаяВыплата;
		Элементы.Сотрудники.Видимость = Истина;
		Элементы.СотрудникиПоДокументам.Видимость = Ложь;
	ИначеЕсли ЗначениеЗаполнено(Объект.СотрудникиПоДокументам) Тогда 
		Объект.ВидДокумента = Перечисления.ЭП_ВидыДокументаВыплатаПремий.ВыплатаПоСопровждению;
		Элементы.Сотрудники.Видимость = Ложь;
		Элементы.СотрудникиПоДокументам.Видимость = Истина;	
	КонецЕсли;	

КонецПроцедуры 

&НаКлиенте
Процедура ОчиститьТабличнуюЧастьПриИзменении(Определитель)
	
	Оповещение = Новый ОписаниеОповещения("ПослеПоказаПредупреждения", ЭтотОбъект, Определитель);
	Если ЗначениеЗаполнено(Объект.Сотрудники) ИЛИ ЗначениеЗаполнено(Объект.СотрудникиПоДокументам) Тогда
		ПоказатьВопрос(Оповещение, "Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет);	
	ИначеЕсли Определитель = "Подбор" Тогда
		ОткрытьФормуПодбора();
	ИначеЕсли Определитель = "ПоУволенным" Тогда
		ЗаполнитьПоУволеннымНаСервере(Объект.Проект, Объект.Ссылка, Объект.Дата);		
	ИначеЕсли Определитель = "ВидДокумента" Тогда
		ВидДокументаПриИзмененииНаСервере();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеПоказаПредупреждения(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да И ДополнительныеПараметры = "Подбор" Тогда	
		Объект.Сотрудники.Очистить();
		Объект.СотрудникиПоДокументам.Очистить();
		ОткрытьФормуПодбора();
	ИначеЕсли Результат = КодВозвратаДиалога.Да И ДополнительныеПараметры = "ПоУволенным" Тогда
		Объект.Сотрудники.Очистить();
		Объект.СотрудникиПоДокументам.Очистить();
		ЗаполнитьПоУволеннымНаСервере(Объект.Проект, Объект.Ссылка, Объект.Дата); 
	ИначеЕсли Результат = КодВозвратаДиалога.Да И ДополнительныеПараметры = "ВидДокумента" Тогда
		Объект.Сотрудники.Очистить();
		Объект.СотрудникиПоДокументам.Очистить();
		ВидДокументаПриИзмененииНаСервере();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет И ДополнительныеПараметры = "ВидДокумента" Тогда	
		ВидДокументаПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти  
