#Область ОбработчикиСобытий

Процедура ПриЗаписи(Отказ) 
	
	
	Отказ = ПроверитьПересеченияЧасовСОтгулами();
	
	Движения.ЭП_СогласованныеЧасыПереработок.Записывать = Истина;
    Движения.ЭП_УчетОтгулов.Записывать = Истина; 
	Движения.ЭП_ЧасыПереработокНаСогласование.Записывать = Истина;
	
	Движения.ЭП_СогласованныеЧасыПереработок.Очистить();
	Движения.ЭП_УчетОтгулов.Очистить();
	Движения.ЭП_ЧасыПереработокНаСогласование.Очистить();
	
	Если Статус = ПредопределенноеЗначение("Перечисление.ЭП_СтатусыДокументаУтверждениеПереработок.СогласованОтветственными") Тогда
		
		Движения.ЭП_СогласованныеЧасыПереработок.Записывать = Истина;
        Движения.ЭП_УчетОтгулов.Записывать = Истина; 
		ВыборкаСотрудник = ПолучитьТаблицуДляДвиженийОтгулы(Ссылка);
		
		Пока ВыборкаСотрудник.Следующий() Цикл 
			Движение = Движения.ЭП_СогласованныеЧасыПереработок.Добавить();
			Движение.Период = ВыборкаСотрудник.Дата;
			Движение.Сотрудник = ВыборкаСотрудник.Сотрудник;
			Движение.Отгул = ВыборкаСотрудник.Отгул; 
			Движение.Проект = Проект;
			Движение.Количество = ВыборкаСотрудник.ЧасыПереработок;
			Если ВыборкаСотрудник.Отгул Тогда
				
				Движение = Движения.ЭП_УчетОтгулов.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = ВыборкаСотрудник.Дата;
				Движение.Сотрудник = ВыборкаСотрудник.Сотрудник;
				Движение.Длительность = ВыборкаСотрудник.ЧасыПереработок; 
				
			КонецЕсли;

		КонецЦикла;	
	ИначеЕсли Статус = Перечисления.ЭП_СтатусыДокументаУтверждениеПереработок.НаСогласовании ИЛИ
		Статус = Перечисления.ЭП_СтатусыДокументаУтверждениеПереработок.НовыйДокумент Тогда
		
		ВыборкаСотрудник = ПолучитьТаблицуДляДвиженийОтгулы(Ссылка);
		
		Пока ВыборкаСотрудник.Следующий() Цикл
			Движение = Движения.ЭП_ЧасыПереработокНаСогласование.Добавить();
			Движение.Период = ВыборкаСотрудник.Дата;
			Движение.Сотрудник = ВыборкаСотрудник.Сотрудник;
			Движение.Отгул = ВыборкаСотрудник.Отгул; 
			Движение.Проект = Проект;
			Движение.Количество = ВыборкаСотрудник.ЧасыПереработок;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Для Каждого ТекСтрокаСотрудники Из Сотрудники Цикл
		
		Если НЕ ЗначениеЗаполнено(ТекСтрокаСотрудники.ЧасыПереработок) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнены часы в строке номер " + ТекСтрокаСотрудники.НомерСтроки;
			Сообщение.Сообщить();
		КонецЕсли;
		
	КонецЦикла;
				
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ПротоколВзаимодействия.Очистить();	
	Ответственный = Пользователи.ТекущийПользователь();
    ОповещениеСообщений = Ложь;
		
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуДляДвиженийОтгулы(Ссылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ПланированиеТрудозатратСотрудники.Сотрудник КАК Сотрудник,
		|	ЭП_ПланированиеТрудозатратСотрудники.Отгул КАК Отгул,
		|	СУММА(ЭП_ПланированиеТрудозатратСотрудники.ЧасыПереработок) КАК ЧасыПереработок,
		|	ЭП_ПланированиеТрудозатратСотрудники.Дата КАК Дата
		|ИЗ
		|	Документ.ЭП_ПланированиеТрудозатрат.Сотрудники КАК ЭП_ПланированиеТрудозатратСотрудники
		|ГДЕ
		|	ЭП_ПланированиеТрудозатратСотрудники.Ссылка = &Документ
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭП_ПланированиеТрудозатратСотрудники.Сотрудник,
		|	ЭП_ПланированиеТрудозатратСотрудники.Отгул,
		|	ЭП_ПланированиеТрудозатратСотрудники.Дата";
	
	Запрос.УстановитьПараметр("Документ", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ТаблицаОтулов = РезультатЗапроса.Выбрать();
		Возврат ТаблицаОтулов;		
	КонецЕсли;

КонецФункции

Функция ПроверитьПересеченияЧасовСОтгулами()

	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(Перечисления.ЭП_СтатусыДокументаУтверждениеПереработок.НовыйДокумент);
	МассивСтатусов.Добавить(Перечисления.ЭП_СтатусыДокументаУтверждениеПереработок.НаСогласовании);
	//МассивСтатусов.Добавить(Перечисления.ЭП_СтатусыДокументаУтверждениеПереработок.Утвержден);
	МассивСтатусов.Добавить(Перечисления.ЭП_СтатусыДокументаУтверждениеПереработок.СогласованОтветственными);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_ПланированиеТрудозатратСотрудники.Сотрудник КАК Сотрудник,
	               |	ЭП_ПланированиеТрудозатратСотрудники.Дата КАК Дата
	               |ПОМЕСТИТЬ ВТ_ТекущийДокумент
	               |ИЗ
	               |	Документ.ЭП_ПланированиеТрудозатрат.Сотрудники КАК ЭП_ПланированиеТрудозатратСотрудники
	               |ГДЕ
	               |	ЭП_ПланированиеТрудозатратСотрудники.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_ПланированиеТрудозатратСотрудники.Сотрудник КАК Сотрудник,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭП_ПланированиеТрудозатратСотрудники.Отгул) КАК Отгул,
	               |	ЭП_ПланированиеТрудозатратСотрудники.Дата КАК Дата
	               |ПОМЕСТИТЬ ВТ_СотрудникиРазница
	               |ИЗ
	               |	Документ.ЭП_ПланированиеТрудозатрат.Сотрудники КАК ЭП_ПланированиеТрудозатратСотрудники
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТекущийДокумент КАК ВТ_ТекущийДокумент
	               |		ПО ЭП_ПланированиеТрудозатратСотрудники.Сотрудник = ВТ_ТекущийДокумент.Сотрудник
	               |			И ЭП_ПланированиеТрудозатратСотрудники.Дата = ВТ_ТекущийДокумент.Дата
	               |ГДЕ
	               |	ЭП_ПланированиеТрудозатратСотрудники.Ссылка.Статус В(&Статусы)
	               |	И НЕ ЭП_ПланированиеТрудозатратСотрудники.Ссылка.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЭП_ПланированиеТрудозатратСотрудники.Сотрудник,
	               |	ЭП_ПланированиеТрудозатратСотрудники.Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СотрудникиРазница.Сотрудник КАК Сотрудник,
	               |	ВТ_СотрудникиРазница.Отгул КАК Отгул,
	               |	ВТ_СотрудникиРазница.Дата КАК Дата
	               |ИЗ
	               |	ВТ_СотрудникиРазница КАК ВТ_СотрудникиРазница
	               |ГДЕ
	               |	ВТ_СотрудникиРазница.Отгул > 1";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Статусы", МассивСтатусов);
	РезультатЗапроса = Запрос.Выполнить();
		
	Если РезультатЗапроса.Пустой() Тогда
	
		Возврат Ложь;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = "По сотруднику %1 на дату %2 зарегистрирован отгул/часы другим документом. Возможно зарегистрировать только один вид компенсации в день";		
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(ТекстСообщения, Выборка.Сотрудник, Выборка.Дата);        
			Сообщение.Сообщить();			
		
		КонецЦикла;
		
		Возврат Истина;
	
	КонецЕсли;
	
КонецФункции // ()


#КонецОбласти
