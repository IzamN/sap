#Область ДляВызоваИзДругихПодсистем

Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|    ГДЕ
	|        ЗначениеРазрешено(Проект)";
	
КонецПроцедуры

#КонецОбласти

Процедура СогласоватьПереработки(Форма) Экспорт

	МассивСсылок = ВыделенныеВДинамическомСпискеСсылки(Форма.Элементы.Список);
	
	СогласоватьДокументыПланированияПереработок(МассивСсылок);
	
	Форма.Элементы.Список.Обновить();
	
КонецПроцедуры

Функция ВыделенныеВДинамическомСпискеСсылки(Список) Экспорт 
	
	МассивСсылок = Новый Массив;
	
	Для Каждого ТекСтрока Из Список.ВыделенныеСтроки Цикл
		Если ТипЗнч(ТекСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			МассивСсылок.Добавить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивСсылок;
	
КонецФункции

Процедура СогласоватьДокументыПланированияПереработок(МассивДокументов) 
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	Для Каждого ДокументСсылка Из МассивДокументов Цикл

		СтатусДокумета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Статус");
		
		Если СтатусДокумета = ПредопределенноеЗначение("Перечисление.ЭП_СтатусыДокументаУтверждениеПереработок.СогласованОтветственными") Тогда 
			ТекстОшибки = НСтр("ru='%1 - документ уже согласован.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументСсылка);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументСсылка);
			Продолжить;
		КонецЕсли;
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ДокументСсылка);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось заблокировать %1. %2'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументСсылка, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументСсылка);
			Продолжить;
		КонецПопытки;
		
		Объект = ДокументСсылка.ПолучитьОбъект();
		Объект.Статус = ПредопределенноеЗначение("Перечисление.ЭП_СтатусыДокументаУтверждениеПереработок.СогласованОтветственными");
        АвторИзменений = ТекущийПользователь;
		Комментарий = "";
		НаправленаПоСтрокеПротокола = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
		Комментарий = "Переработки по документу согласованы: " + ТекущийПользователь;
		СтатусПоСтрокеПротокола = ПредопределенноеЗначение("Перечисление.ЭП_СтатусыДокументаУтверждениеПереработок.СогласованОтветственными");
		ДобавитьЗаписьВПротокол(Объект, АвторИзменений, Комментарий, СтатусПоСтрокеПротокола, НаправленаПоСтрокеПротокола);
		
		Если Не Объект.ПроверитьЗаполнение() Тогда 
			ТекстОшибки = НСтр("ru='%1 - обнаружены ошибки при проверке заполнения документа.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументСсылка);
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументСсылка);
			Продолжить;
		КонецЕсли;
		
		Попытка
			Объект.Записать(РежимЗаписиДокумента.Запись);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось записать %1. %2'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументСсылка, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументСсылка);
		КонецПопытки

	КонецЦикла;
	
КонецПроцедуры 

Процедура ДобавитьЗаписьВПротокол(ТекущийОбъект, АвторИзменений, Комментарий, СтатусПоСтрокеПротокола, НаправленаПоСтрокеПротокола) Экспорт
	
	Дата = ТекущаяДатаСеанса();
	НоваяСтрока = ТекущийОбъект.ПротоколВзаимодействия.Добавить();
	НоваяСтрока.Автор = АвторИзменений;
	НоваяСтрока.Дата = Дата;
	НоваяСтрока.ТекстПоручения = Комментарий;
	НоваяСтрока.ИсполнительУтвержденияПереработок = НаправленаПоСтрокеПротокола;
	НоваяСтрока.Статус = СтатусПоСтрокеПротокола;
	
КонецПроцедуры
