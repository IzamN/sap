#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если НЕ СтатусДокумента Тогда  
		
		Отказ = Истина; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Документ может быть проведен только после согласования";
		Сообщение.Сообщить();
	
		Возврат;		
	
	КонецЕсли;
	
	Движения.ЭП_ОстаткиНаСкладе.Очистить();
	Движения.ЭП_ОстаткиНаСкладе.Записывать = Истина;
	Движения.ЭП_ОстаткиНаСкладе.Записать();

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПеремещениеНоменклатуры();
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", СкладОтправитель); 
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.КоличествоОстаток = 0 Тогда 
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Такой номенклатуры" + ВыборкаДетальныеЗаписи.НоменклатураПредставление + " c " +
				ВыборкаДетальныеЗаписи.ИнвентарныйНомерДок + " нет на складе";
				Сообщение.Сообщить(); 
				Отказ = Истина;
				
			ИначеЕсли СкладОтправитель = СкладПолучатель Тогда
				 ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Нельзя отправлять номенклатуру на тот же самый склад.'")
				 ,,"СкладОтправитель",,Отказ);
				 
			Иначе
				
				Движение = Движения.ЭП_ОстаткиНаСкладе.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Склад = СкладОтправитель;                                        
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.НоменклатураДок;
				Движение.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомерДок;
				Движение.Количество = 1; 
					
				Движение = Движения.ЭП_ОстаткиНаСкладе.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Дата;
				Движение.Склад = СкладПолучатель;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.НоменклатураДок;
				Движение.ИнвентарныйНомер = ВыборкаДетальныеЗаписи.ИнвентарныйНомерДок;
				Движение.Количество = 1; 
				
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Такой номенклатуры нет на складе";
		Сообщение.Сообщить();
			
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Движения.ЭП_КачествоНоменклатуры.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ПеремещениеНоменклатурыНоменклатура.Номенклатура КАК Номенклатура,
	|	ЭП_ПеремещениеНоменклатурыНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ЭП_ПеремещениеНоменклатурыНоменклатура.КачествоНоменклатуры КАК КачествоНоменклатуры
	|ИЗ
	|	РегистрСведений.ЭП_КачествоНоменклатуры.СрезПоследних(&Дата, ) КАК ЭП_КачествоНоменклатурыСрезПоследних
	|		ПРАВОЕ СОЕДИНЕНИЕ Документ.ЭП_ПеремещениеНоменклатуры.Номенклатура КАК ЭП_ПеремещениеНоменклатурыНоменклатура
	|		ПО (ЭП_ПеремещениеНоменклатурыНоменклатура.Номенклатура = ЭП_КачествоНоменклатурыСрезПоследних.Номенклатура)
	|			И (ЭП_ПеремещениеНоменклатурыНоменклатура.ИнвентарныйНомер = ЭП_КачествоНоменклатурыСрезПоследних.ИнвентарныйНомер)
	|ГДЕ
	|	ЭП_ПеремещениеНоменклатурыНоменклатура.Ссылка = &Ссылка
	|	И (ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры ЕСТЬ NULL
	|			ИЛИ ЭП_ПеремещениеНоменклатурыНоменклатура.КачествоНоменклатуры <> ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл  
		Движение = Движения.ЭП_КачествоНоменклатуры.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура; 
		Движение.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
		Движение.КачествоНоменклатуры = Выборка.КачествоНоменклатуры;
	КонецЦикла;
	
КонецПроцедуры
	
Процедура ПриЗаписи(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Номенклатура.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	|	ТабЧасть.Номенклатура КАК Номенклатура,
	|	ТабЧасть.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТабЧасть.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ТабЧасть.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ТабЧасть
	|ИЗ
	|	&Таблица КАК ТабЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабЧасть.Номенклатура КАК Номенклатура,
	|	ВТ_ТабЧасть.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВТ_ТабЧасть.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ВТ_ТабЧасть.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_ТабЧасть КАК ВТ_ТабЧасть
	|ГДЕ
	|	(ВТ_ТабЧасть.Номенклатура, ВТ_ТабЧасть.ИнвентарныйНомер, ВТ_ТабЧасть.ВидНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ВТ.Номенклатура,
	|				ВТ.ИнвентарныйНомер,
	|				ВТ.ВидНоменклатуры
	|			ИЗ
	|				ВТ_ТабЧасть КАК ВТ
	|			СГРУППИРОВАТЬ ПО
	|				ВТ.Номенклатура,
	|				ВТ.ИнвентарныйНомер,
	|				ВТ.ВидНоменклатуры
	|			ИМЕЮЩИЕ
	|				КОЛИЧЕСТВО(ВТ.НомерСтроки) > 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	Номенклатура";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выб_Номенклатура = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выб_Номенклатура.Следующий() Цикл
			Выборка = Выб_Номенклатура.Выбрать();
			Сообщение = "";
			Пока Выборка.Следующий() Цикл
				Сообщение = Сообщение + ?(ПустаяСтрока(Сообщение), "", ", ") + Выборка.НомерСтроки;
			КонецЦикла;
			Сообщение = "Обнаружено дублирование строк: " + Сообщение;
			Сообщить(Сообщение);
		КонецЦикла;
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
	Если Ответственный.Ссылка.Пустая() ИЛИ НЕ ЗначениеЗаполнено(Ответственный) Тогда
        Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
    КонецЕсли;
 	
КонецПроцедуры 

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПеремещениеНоменклатуры()
	
	Возврат "ВЫБРАТЬ
	        |	ПеремещениеНоменклатурыНоменклатура.Номенклатура КАК Номенклатура,
	        |	ПеремещениеНоменклатурыНоменклатура.ИнвентарныйНомер КАК ИнвентарныйНомер
	        |ПОМЕСТИТЬ Вт_Таб
	        |ИЗ
	        |	Документ.ЭП_ПеремещениеНоменклатуры.Номенклатура КАК ПеремещениеНоменклатурыНоменклатура
	        |ГДЕ
	        |	ПеремещениеНоменклатурыНоменклатура.Ссылка = &Ссылка
	        |
	        |ИНДЕКСИРОВАТЬ ПО
	        |	Номенклатура,
	        |	ИнвентарныйНомер
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	Вт_Таб.Номенклатура КАК НоменклатураДок,
	        |	Вт_Таб.ИнвентарныйНомер КАК ИнвентарныйНомерДок,
	        |	ЕСТЬNULL(ЭП_ОстаткиНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	        |	Вт_Таб.Номенклатура.Представление КАК НоменклатураПредставление
	        |ИЗ
	        |	Вт_Таб КАК Вт_Таб
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЭП_ОстаткиНаСкладе.Остатки(
	        |				&МоментВремени,
	        |				(Номенклатура, ИнвентарныйНомер) В
	        |						(ВЫБРАТЬ
	        |							ВТ_Таб.Номенклатура,
	        |							ВТ_Таб.ИнвентарныйНомер
	        |						ИЗ
	        |							ВТ_Таб КАК ВТ_Таб)
	        |					И Склад = &Склад) КАК ЭП_ОстаткиНаСкладеОстатки
	        |		ПО Вт_Таб.Номенклатура = ЭП_ОстаткиНаСкладеОстатки.Номенклатура
	        |			И Вт_Таб.ИнвентарныйНомер = ЭП_ОстаткиНаСкладеОстатки.ИнвентарныйНомер";
	
КонецФункции

#КонецОбласти 
