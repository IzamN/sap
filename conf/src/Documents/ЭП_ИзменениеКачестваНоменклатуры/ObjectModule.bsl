
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//Для каждого Строка из СписокНоменклатуры Цикл
	//	Отбор = Новый Структура("Номенклатура, ИнвентарныйНомер", Строка.Номенклатура, Строка.ИнвентарныйНомер);
	//	Значение = РегистрыСведений.ЭП_КачествоНоменклатуры.СрезПоследних(,Отбор).ВыгрузитьКолонку("Период");
	//	Если Значение.Количество() <> 0  Тогда
	//		ДатаПоследнегоИзменения = РегистрыСведений.ЭП_КачествоНоменклатуры.СрезПоследних(,Отбор).ВыгрузитьКолонку("Период")[0]; 
	//	Иначе 
	//		ДатаПоследнегоИзменения = 0;
	//	КонецЕсли;

	//	Если ДатаПоследнегоИзменения <> 0 и  ДатаПоследнегоИзменения > Дата Тогда
	//		 Сообщить("Строка " + Строка(Строка.НомерСтроки)+ " " + Строка.Номенклатура + " " + Строка.ИнвентарныйНомер + " - запрещено изменять качество при данной дате");
	//		 Отказ = Истина;
	//	КонецЕсли;

	//КонецЦикла; 
	
	Если НЕ СтатусДокумента Тогда  
		
		Отказ = Истина; 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Документ может быть проведен только после согласования";
		Сообщение.Сообщить();
	
		Возврат;		
	
	КонецЕсли;
	
	Если РежимПроведения = РежимПроведенияДокумента.Неоперативный Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Запрещено проводить документы задним числом";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Движения.ЭП_КачествоНоменклатуры.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры.КачествоНоменклатуры КАК КачествоНоменклатуры,
	|	ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры.Номенклатура КАК Номенклатура
	|ИЗ
	|	Документ.ЭП_ИзменениеКачестваНоменклатуры.СписокНоменклатуры КАК ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_КачествоНоменклатуры.СрезПоследних(&Дата, ) КАК ЭП_КачествоНоменклатурыСрезПоследних
	|		ПО ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры.Номенклатура = ЭП_КачествоНоменклатурыСрезПоследних.Номенклатура
	|			И ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры.ИнвентарныйНомер = ЭП_КачествоНоменклатурыСрезПоследних.ИнвентарныйНомер
	|ГДЕ
	|	ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры.Ссылка = &Ссылка
	|	И (ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры ЕСТЬ NULL
	|			ИЛИ ЭП_ИзменениеКачестваНоменклатурыСписокНоменклатуры.КачествоНоменклатуры <> ЭП_КачествоНоменклатурыСрезПоследних.КачествоНоменклатуры)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл  
		Движение = Движения.ЭП_КачествоНоменклатуры.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура; 
		Движение.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
		Движение.КачествоНоменклатуры = Выборка.КачествоНоменклатуры;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если Ответственный.Ссылка.Пустая() ИЛИ НЕ ЗначениеЗаполнено(Ответственный) Тогда
        Ответственный = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;  
КонецПроцедуры    







