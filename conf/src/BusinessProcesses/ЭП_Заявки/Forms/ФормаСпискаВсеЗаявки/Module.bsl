
#Область Отборы

&НаКлиенте
Процедура ОтборПоСтатусуДобавлениеМножественныхЗначений(Элемент, Значения, СтандартнаяОбработка) 
	
	МассивСтатусов = Новый Массив();
	Для каждого Статус из ОтборПоСтатусу Цикл
		МассивСтатусов.Добавить(Статус.Значение);
	КонецЦикла;
	МассивСтатусов.Добавить(Значения[0]);
	ИсторияИзмененияСтатусов.Добавить(ИсторияИзмененияСтатусов.Количество(),Значения[0]);
	ЗаполнитьСписок(МассивСтатусов, ОтборПоТипу); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСтатусуУдалениеМножественныхЗначений(Элемент, Идентификаторы, СтандартнаяОбработка)
	
	МассивСтатусов = Новый Массив(); 
	УдалитьСтатус = ИсторияИзмененияСтатусов[Идентификаторы[0]].Представление;
	Для каждого Статус из ОтборПоСтатусу Цикл
		Если Строка(Статус.Значение) <> УдалитьСтатус Тогда
			МассивСтатусов.Добавить(Статус.Значение);
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьСписок(МассивСтатусов, ОтборПоТипу);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуДобавлениеМножественныхЗначений(Элемент, Значения, СтандартнаяОбработка)
	
	МассивТипов = Новый Массив();
	Для каждого Тип из ОтборПоТипу Цикл
		МассивТипов.Добавить(Тип.Значение);
	КонецЦикла;
	МассивТипов.Добавить(Значения[0]);
	ИсторияИзмененияТипов.Добавить(ИсторияИзмененияТипов.Количество(),Значения[0]);
	ЗаполнитьСписок(ОтборПоСтатусу, МассивТипов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуУдалениеМножественныхЗначений(Элемент, Идентификаторы, СтандартнаяОбработка) 
	
	МассивТипов = Новый Массив(); 
	УдалитьТип = ИсторияИзмененияТипов[Идентификаторы[0]].Представление;
	Для каждого Тип из ОтборПоТипу Цикл
		Если Строка(Тип.Значение) <> УдалитьТип Тогда
			МассивТипов.Добавить(Тип.Значение);
		КонецЕсли;
	КонецЦикла; 
	ЗаполнитьСписок(ОтборПоСтатусу, МассивТипов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписок(ОтборПоСтатусу, ОтборПоТипу)
	
	ЭтаФорма.Список.Отбор.Элементы.Очистить();
	
	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипЗаявки");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(ОтборПоТипу);
	ЭлементОтбора.ПравоеЗначение = ОтборПоТипу;
		
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатусЗаявки");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(ОтборПоСтатусу);
	ЭлементОтбора.ПравоеЗначение = ОтборПоСтатусу;
		
	//Список.ТекстЗапроса = "ВЫБРАТЬ
	//|	ЭП_Заявки.Дата КАК Дата,
	//|	ЭП_Заявки.Номер КАК Номер,
	//|	ЭП_Заявки.Исполнитель КАК Исполнитель,
	//|	ЭП_Заявки.Заявитель КАК Заявитель,
	//|	ЭП_Заявки.ТипЗаявки КАК ТипЗаявки,
	//|	ЭП_Заявки.СтатусЗаявки КАК СтатусЗаявки,
	//|	ЭП_Заявки.Ссылка КАК Заявка
	//|ИЗ
	//|	БизнесПроцесс.ЭП_Заявки КАК ЭП_Заявки
	//|ГДЕ
	//|	(&НеИспользоватьСтатусыЗаявок
	//|			ИЛИ ЭП_Заявки.СтатусЗаявки В (&МассивСтатусовЗаявки))
	//|	И (&НеИспользоватьТипыЗаявок
	//|			ИЛИ ЭП_Заявки.ТипЗаявки В (&МассивТиповЗаявки))"; 
	//
	//Список.Параметры.УстановитьЗначениеПараметра("МассивСтатусовЗаявки", ОтборПоСтатусу);
	//Список.Параметры.УстановитьЗначениеПараметра("МассивТиповЗаявки", ОтборПоТипу);
	//
	//Если ОтборПоСтатусу.Количество() = 0 Тогда
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьСтатусыЗаявок", Истина);
	//Иначе
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьСтатусыЗаявок", Ложь);
	//КонецЕсли;
	//
	//Если ОтборПоТипу.Количество() = 0 Тогда
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьТипыЗаявок", Истина);
	//Иначе
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьТипыЗаявок", Ложь);
	//КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти