
#Область ПрограммныйИнтерфейс

Процедура ОтправкаПисемИзОчереди() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_ОчередьОтправкиПочтовыхСообщений.Период КАК Период,
	               |	ЭП_ОчередьОтправкиПочтовыхСообщений.Пользователь КАК Пользователь,
	               |	ЭП_ОчередьОтправкиПочтовыхСообщений.ПараметрыПисьма КАК ПараметрыПисьма
	               |ИЗ
	               |	РегистрСведений.ЭП_ОчередьОтправкиПочтовыхСообщений КАК ЭП_ОчередьОтправкиПочтовыхСообщений";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 	
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	СистемнаяУчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;

	Пока Выборка.Следующий() Цикл
		
		ВызватьПаузу(Константы.ЭП_ЗадержкаПередОтправкойПисем.Получить());
		
		Попытка 
			
			ПараметрыПисьма = Выборка.ПараметрыПисьма.Получить(); 
			ПолучениеВложений(ПараметрыПисьма);
			Письмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(СистемнаяУчетнаяЗапись, ПараметрыПисьма);
			РаботаСПочтовымиСообщениями.ОтправитьПисьмо(СистемнаяУчетнаяЗапись, Письмо);
			//Оповещение пользователя
		    Запись = РегистрыСведений.ЭП_ОчередьОтправкиПочтовыхСообщений.СоздатьМенеджерЗаписи();
			Запись.Период = Выборка.Период;
			Запись.Пользователь = Выборка.Пользователь;
			Запись.Удалить();
			
		Исключение
			
			Описание = ОписаниеОшибки();									
			Информация = ИнформацияОбОшибке();					
			Подробности = ПодробноеПредставлениеОшибки(Информация);
			ЗаписьЖурналаРегистрации("Отправка электронного письма.", УровеньЖурналаРегистрации.Ошибка, , , 
			СтрШаблон("Не удалось отправить письмо пользователю: %1 - %2", Строка(Выборка.Пользователь), Подробности));
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныйПроцедурыИФункции

Процедура ПолучениеВложений(Данные) 
	                        
	Для каждого Вложение из Данные.Вложения Цикл
		Если ТипЗнч(Вложение.АдресВоВременномХранилище) = Тип("ХранилищеЗначения") тогда 
			 Вложение.АдресВоВременномХранилище = Вложение.АдресВоВременномХранилище.Получить();
		 КонецЕсли;
	 КонецЦикла;
	 
 КонецПроцедуры 

Процедура ВызватьПаузу(Секунды)
	
    ВремяОкончания = ТекущаяДата() + Секунды;
    Пока ТекущаяДата() <= ВремяОкончания Цикл
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
 
 

