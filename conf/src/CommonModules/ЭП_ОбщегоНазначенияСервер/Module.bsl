&НаСервере
Функция ПроверитьУникальностьОбъектаПоРеквизитам(ВидОбъекта, ИмяОбъекта, СтрРеквизитов, СсылкаНаОбъект) Экспорт 
	
    Запрос = Новый Запрос;
    Запрос.Текст = 
	    "ВЫБРАТЬ ПЕРВЫЕ 1
	    |    Объект.Ссылка
	    |ИЗ
	    |    " + ВидОбъекта + "." + ИмяОбъекта + " КАК Объект
	    |ГДЕ
	    |    Объект.Ссылка <> &СсылкаНаОбъект
	    |"; 
	
	Для Каждого ТекРек Из СтрРеквизитов Цикл  
		
        Параметр = " = &Пар" + ТекРек.Ключ;
        Запрос.Текст = Запрос.Текст + " И Объект." + ТекРек.Ключ + Параметр; 
        Запрос.УстановитьПараметр("Пар" + ТекРек.Ключ, ТекРек.Значение); 
		
	КонецЦикла;  
	
    Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);        
    РезультатЗапроса = Запрос.Выполнить();
	
    Возврат РезультатЗапроса.Пустой();  
		
КонецФункции

Функция КоличествоСторудниковБезОценок() Экспорт
	
	ТекущаяДата = ТекущаяДатаСеанса();
	КонецПериода = КонецМесяца(ТекущаяДата);
	НачалоПериода = НачалоМесяца(ТекущаяДата);
	
	Если ТекущаяДата < (НачалоПериода + 5 * 24 * 3600) ИЛИ ТекущаяДата > (НачалоПериода + 14 * 24 * 3600) Тогда
		Возврат Неопределено;
	КонецЕсли;

	Ответственный = Пользователи.ТекущийПользователь(); 
	ЗначениеУведомления = Ложь;
	
	Если Пользователи.РолиДоступны("ЭП_НастройкиУведомленийОбОтсутсвииОценокУСотрудников") Тогда
		МенеджерЗаписи = РегистрыСведений.ЭП_НастройкаУведомленийОбОтсутствииОценокУСотрудников.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Пользователь = Ответственный;
		МенеджерЗаписи.Прочитать();
		ЗначениеУведомления = МенеджерЗаписи.УведомленияПоОценкам;
	КонецЕсли;
	
	Если Не ЗначениеУведомления Тогда
    	Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ОтветственныеЗаОценкуЭффективности.Проект КАК Проект,
		|	ЭП_ОтветственныеЗаОценкуЭффективности.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.ЭП_ОтветственныеЗаОценкуЭффективности КАК ЭП_ОтветственныеЗаОценкуЭффективности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ЭффективностьСотрудников КАК ЭП_ЭффективностьСотрудников
		|		ПО ЭП_ОтветственныеЗаОценкуЭффективности.Ответственный = ЭП_ЭффективностьСотрудников.Ответственный
		|			И ЭП_ОтветственныеЗаОценкуЭффективности.Проект = ЭП_ЭффективностьСотрудников.Проект
		|			И ЭП_ОтветственныеЗаОценкуЭффективности.Сотрудник = ЭП_ЭффективностьСотрудников.Сотрудник
		|ГДЕ
		|	ЭП_ОтветственныеЗаОценкуЭффективности.Ответственный = &Ответственный
		|	И (ЭП_ЭффективностьСотрудников.Значение ЕСТЬ NULL
		|			ИЛИ ЭП_ЭффективностьСотрудников.ПериодОценивания >= &НачалоПериода
		|				И ЭП_ЭффективностьСотрудников.ПериодОценивания <= &КонецПериода И ЭП_ЭффективностьСотрудников.Значение = 0)";
	
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	
	Если ТекущаяДата <= (НачалоПериода + 15 * 24 * 3600) Тогда
		НачалоПериода = НачалоМесяца(НачалоПериода - 1);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат  Выборка.Количество();

КонецФункции 

Функция ПолучитьСсылкуНаОбработкуПроставленияОценок() Экспорт

	НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Метаданные.Обработки.ЭП_ВводПоказателейЭффективностиПоПроектнымСпискам);
	Возврат НавигационнаяСсылка;
	
КонецФункции