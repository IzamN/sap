#Область ПрограммныйИнтерфейс

Процедура ПередЗаписьюСправочника(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.ЗадачиПроцесса") Тогда
		СправочникЗадачиПроцессаПередЗаписью(Источник, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписиСправочника(Источник, Отказ) Экспорт
		
	УстановитьПривилегированныйРежим(Истина);

	Если ТипЗнч(Источник) = Тип("СправочникОбъект.ЭП_Сотрудники") Тогда
		Если Константы.ЭП_АвтоЗаполнениеПочтыЭП_СостоянияОтправкиПисем.Получить() Тогда
			СправочникЭП_СотрудникиПриЗаписи(Источник, Отказ); 
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

#КонецОбласти

#Область СправочникЗадачиПроцесса

Процедура СправочникЗадачиПроцессаПередЗаписью(Источник, Отказ)
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
    // Заполнить автора
	Если Источник.ЭтоНовый() Тогда
		Источник.ЭП_Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
		
	// Заполнить проект
	Если Не ЗначениеЗаполнено(Источник.Предмет)	Тогда
		Источник.ЭП_Проект = Справочники.Проекты.ПустаяСсылка();
	ИначеЕсли ТипЗнч(Источник.Предмет.Владелец) = Тип("СправочникСсылка.Проекты") Тогда
		Источник.ЭП_Проект = Источник.Предмет.Владелец;
	ИначеЕсли ЗначениеЗаполнено(Источник.Предмет.Владелец)
		И ТипЗнч(Источник.Предмет.Владелец.Владелец) = Тип("СправочникСсылка.Проекты") Тогда
		Источник.ЭП_Проект = Источник.Предмет.Владелец.Владелец;
	Иначе
		Источник.ЭП_Проект = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли;
	
	// Заполнить исполнителя
	Если Не ЗначениеЗаполнено(Источник.ИсполнительПорученияПоЗадаче)
		И ЗначениеЗаполнено(Источник.ЭП_Проект)
		И Источник.ЭП_Проект.ЭП_НазначитьИсполнителяПорученийВЗадачах Тогда
		
		Источник.ИсполнительПорученияПоЗадаче = Источник.Исполнитель;

		КоличествоЗаписейВПротоколе = Источник.ПротоколВзаимодействия.Количество();
		Если КоличествоЗаписейВПротоколе > 0 Тогда
			Источник.ПротоколВзаимодействия[КоличествоЗаписейВПротоколе - 1].ИсполнительПоручения = Источник.ИсполнительПорученияПоЗадаче;
		КонецЕсли;
	конецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СправочникЭП_Сотрудники

Процедура СправочникЭП_СотрудникиПриЗаписи(Источник, Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Сотрудник = Источник.Ссылка;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ЭП_СотрудникиКонтактнаяИнформация.АдресЭП КАК АдресЭП
		|ИЗ
		|	Справочник.ЭП_Сотрудники.КонтактнаяИнформация КАК ЭП_СотрудникиКонтактнаяИнформация
		|ГДЕ
		|	ЭП_СотрудникиКонтактнаяИнформация.Ссылка = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий(); 
		
		НаборЗаписей = РегистрыСведений.ЭП_СостоянияОтправкиПочтовыхПием.СоздатьНаборЗаписей();				
		НаборЗаписей.Отбор.Отправлен.Установить(Ложь);
		НаборЗаписей.Отбор.Почта.Установить("");
		НаборЗаписей.Отбор.Пользователь.Установить(Сотрудник);
		НаборЗаписей.Отбор.ОтсутсвуютДругиеПользователиВРассылке.Установить(Ложь);
		НаборЗаписей.Прочитать();
		
		ТаблицаЗаписейПоСотруднику = НаборЗаписей.Выгрузить();	
		
		Если ТаблицаЗаписейПоСотруднику.Количество() > 0 Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаЗаписейПоСотруднику Цикл 
				
				Запись = РегистрыСведений.ЭП_СостоянияОтправкиПочтовыхПием.СоздатьМенеджерЗаписи(); 
				Запись.Период = СтрокаТаблицы.Период;
				Запись.Пользователь = СтрокаТаблицы.Пользователь;
				Запись.Почта = СтрокаТаблицы.Почта;
				Запись.ДокументРегситратор = СтрокаТаблицы.ДокументРегситратор;
				Запись.ОтсутсвуютДругиеПользователиВРассылке = СтрокаТаблицы.ОтсутсвуютДругиеПользователиВРассылке;
				Запись.Прочитать();
				Если Запись.Выбран() Тогда					
					Запись.Почта = Выборка.АдресЭП;
					Запись.Записать();
				КонецЕсли;	
				
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры 

#КонецОбласти
