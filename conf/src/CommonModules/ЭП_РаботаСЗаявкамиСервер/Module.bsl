Процедура ДобавитьЗаписьВПротокол(ТекущийОбъект, АвторИзменений, Комментарий = "", ИсполнительЗадачи = Неопределено)  экспорт
	
	Дата = ТекущаяДатаСеанса();
	НоваяСтрока = ТекущийОбъект.ПротоколВзаимодействия.Добавить();
	НоваяСтрока.Автор = АвторИзменений;
	НоваяСтрока.Дата = Дата;
	НоваяСтрока.Статус = ТекущийОбъект.СтатусЗаявки;
	НоваяСтрока.ТекстСообщения = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(Комментарий, "");
	НоваяСтрока.ИсполнительЗадачи = ИсполнительЗадачи;
		
КонецПроцедуры 

Функция СформироватьОбзорЗаявки(Заявка) экспорт 
	
	Если Заявка <> БизнесПроцессы.ЭП_Заявки.ПустаяСсылка() Тогда
		ТекстHTML = "
			|<!DOCTYPE html>
			|<html>
			|<head>
			|<meta charset=""UTF-8"">
			|<style type=""text/css"">
			|.header_request {
			|	font-weight: 700;
			|} 
			|td, th {
			|	min-width: 200px;
			|}
			|.title {
			|	font-weight: 700; 
			|	font-size: 19px;
			|}
			|.top {
			|	text-align: top;
			|	vertical-align: top; 
   			|}
			|.img {
            |	width: 600px;
			|   height: auto; 
			|}
			|</style>
			|</head>
			|	<body>
			|      	<div class=""title"">" + Строка(Заявка.Ссылка) +"</div> <br>
			|		<table class = ""header_request"">
			|		<tbody>
			|			<tr>
			|				<td> Заявитель</td>
			|				<td>" + Заявка.Заявитель + "</td>
			|			</tr>
			|			<tr>
			|				<td> Тип заявки</td>
			|				<td>" + Заявка.ТипЗаявки + "</td>
			|			</tr>
			|			<tr>
			|				<td> Исполнитель</td>
			|				<td> " + Заявка.Исполнитель + "</td>
			|			</tr>
			|			<tr>
			|				<td> Контролирующий</td>
			|				<td>" + Заявка.Контролирующий + "</td>
			|			</tr>
			|			<tr>
			|				<td> Статус Заявки</td>
			|				<td>" + Заявка.СтатусЗаявки + "</td>
			|			</tr>
			|		</table>
			|		</tbody> <br> <br>";
		
		Если Заявка.ТипЗаявки = Перечисления.ЭП_ТипЗаявки.ОрганизацияРабочегоМеста Тогда
			
			ПредоставляемаяТехника = "";
			Для Каждого Строка Из Заявка.ПредоставляемаяТехника Цикл
				Разделитель = ?(ПредоставляемаяТехника = "", "", ", " );
				ПредоставляемаяТехника = ПредоставляемаяТехника + Разделитель + Строка.Техника;	
			КонецЦикла;
			
			ТекстHTML = ТекстHTML + "
			|		<table>
			|		<tbody>
			|			<tr>
			|				<td> ФИО </td>
			|				<td>" + Заявка.ФИО + "</td>
			|			</tr>
			|			<tr>
			|				<td> Организация</td>
			|				<td>" + Заявка.Организация + "</td>
			|			</tr>
			|			<tr>
			|				<td> Департамент</td>
			|				<td>" + Заявка.Департамент + "</td>
			|			</tr>
			|			<tr>
			|				<td> Должность</td>
			|				<td>" + Заявка.Должность + "</td>
			|			</tr>
			|			<tr>
			|				<td> Руководитель</td>
			|				<td>" + Заявка.Руководитель + "</td>
			|			</tr>
			|			<tr>
			|				<td> Договор ГПХ</td>
			|				<td>" + Заявка.ДоговорГПХ + "</td>
			|			</tr>
			|			<tr>
			|				<td> Телефон</td>
			|				<td>" + Заявка.Телефон + "</td>
			|			</tr>
			|			<tr>
			|				<td> Комментарий</td>
			|				<td>" + Заявка.Комментарий + "</td>
			|			</tr>
			|			<tr>
			|				<td> Предоставить оргтехнику: </td>
			|				<td>" + ПредоставляемаяТехника + "</td>
			|			</tr>
			|		</tbody>
			|	</table>
			|</body>
			|</html>"; 
			
		ИначеЕсли Заявка.ТипЗаявки = Перечисления.ЭП_ТипЗаявки.ПредоставлениеДоступаККонтуру Тогда 
			
			ТекстHTML = ТекстHTML + " 
			|		<table>
			|		<tbody>
			|			<tr>
			|				<td> Сотрудник </td>
			|				<td>" + Заявка.Сотрудник + "</td>
			|			</tr>
			|			<tr>
			|				<td> Проект</td>
			|				<td>" + Заявка.Проект + "</td>
			|			</tr>
			|			<tr>
			|				<td> Сервис</td>
			|				<td>" + Заявка.Сервис + "</td>
			|			</tr>
			|		</tbody>
			|	</table>
			|</body>
			|</html>";
		ИначеЕсли Заявка.ТипЗаявки = Перечисления.ЭП_ТипЗаявки.ЗапросНаОбслуживание Тогда 
			
			ФорматированныеДокументы = ДанныеФорматированныхДокументов(Заявка);
			
			ТекстHTML = ТекстHTML + " 
			|		<table>
			|		<tbody>
			|			<tr>
			|				<td  class=""top""> Что Я хочу: </td>
			|				<td>" + ФорматированныеДокументы.ЧтоЯХочу + "</td>
			|			</tr>
			|			<tr>
			|				<td  class=""top""> Что Я делаю:</td>
			|				<td>" + ФорматированныеДокументы.ЧтоЯДелаю + "</td>
			|			</tr>
			|			<tr>
			|				<td class=""top""> Что Я получаю:</td>
			|				<td>" + ФорматированныеДокументы.ЧтоЯПолучаю + " </td>
			|			</tr>
			|		</tbody>
			|	</table>
			|</body>
			|</html>";
	
		ИначеЕсли Заявка.ТипЗаявки = Перечисления.ЭП_ТипЗаявки.НеработоспособностьСервиса Тогда 
			
			ФорматированныеДокументы = ДанныеФорматированныхДокументов(Заявка);	
			
			ТекстHTML = ТекстHTML + " 
			|		<table>
			|		<tbody> 
			|			<tr>
			|				<td> Сервич </td>
			|				<td>" + Заявка.Сервис.Наименование + "</td>
			|			</tr>
			|			<tr>
			|				<td  class=""top""> Что Я хочу: </td>
			|				<td>" + ФорматированныеДокументы.ЧтоЯХочу + "</td>
			|			</tr>
			|			<tr>
			|				<td  class=""top""> Что Я делаю: </td>
			|				<td>" + ФорматированныеДокументы.ЧтоЯДелаю + "</td>
			|			</tr>
			|			<tr>
			|				<td  class=""top""> Что Я получаю: </td>
			|				<td>" + ФорматированныеДокументы.ЧтоЯПолучаю + "</td>
			|			</tr>
			|		</tbody>
			|	</table>
			|</body>
			|</html>"; 
			
		ИначеЕсли Заявка.ТипЗаявки = Перечисления.ЭП_ТипЗаявки.УвольнениеСотрудника Тогда 
			
			ТекстHTML = ТекстHTML + " 
			|		<table>
			|		<tbody> 
			|			<tr>
			|				<td> Дата увольнения</td>
			|				<td>" + Заявка.ДатаУвольнения + "</td>
			|			</tr>
			|			<tr>
			|				<td> Сотрудник </td>
			|				<td>" + Заявка.Сотрудник + "</td>
			|			</tr>
			|		</tbody>
			|	</table>
			|</body>
			|</html>";
	
		КонецЕсли;
	
	Иначе 
		
		ТекстHTML =" 
			|<!DOCTYPE html>
			|<html>
			|<head>
			|<meta charset=""UTF-8"">
			|<style type=""text/css"">
			|.header_request {
			|	font-weight: 700;
			|} 
			|td {
			|	min-width: 200px;
			|}
			|.title {
			|	font-weight: 700; 
			|	font-size: 19px;
			|}
			|</style>
			|</head>
			|	<body>
			|		<div class=""header_request""> Не выбрана заявка 
			|		</div>
			|	</body>
			|</html>";
		
	КонецЕсли; 
	
	Возврат ТекстHTML;	
			  
КонецФункции

Функция ПолучитьТекущуюЗадачу(Заявка) экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ЗадачиЗаявок.Ссылка КАК Ссылка
		|ИЗ
		|	Задача.ЭП_ЗадачиЗаявок КАК ЭП_ЗадачиЗаявок
		|ГДЕ
		|	НЕ ЭП_ЗадачиЗаявок.Выполнена
		|	И ЭП_ЗадачиЗаявок.БизнесПроцесс = &Заявка";
	Запрос.УстановитьПараметр("Заявка", Заявка);	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Ссылка;

КонецФункции

Процедура ДействияСЗаявкой(Заявка, АвторДействия, Статус = Неопределено , Текст = "", ВыполнитьЗадачу = Ложь, Свойства = Неопределено) экспорт
	
	ЗаявкаОб = Заявка.ПолучитьОбъект();
	ЗадачаОб = ПолучитьТекущуюЗадачу(Заявка).ПолучитьОбъект();
	ЗаявкаОб.Исполнитель = АвторДействия;
	ЗаявкаОб.СтатусЗаявки = ?(Статус = Неопределено, ЗаявкаОб.СтатусЗаявки, Статус);
	ЗадачаОб.Исполнитель = АвторДействия;
	КомментарийПротокол = Строка(АвторДействия) + Текст;  
	
	Если не Свойства = Неопределено Тогда
		Для каждого Свойство из Свойства Цикл   
			ЗаявкаОб[Свойство.Ключ] = Свойство.Значение;
		КонецЦикла;   
	КонецЕсли;
	
	ДобавитьЗаписьВПротокол(ЗаявкаОб, АвторДействия, КомментарийПротокол);   
	ЗаявкаОб.Записать();	
	
	Если ВыполнитьЗадачу Тогда
		ЗадачаОб.ВыполнитьЗадачу();
	КонецЕсли;  
	
	ЗадачаОб.Записать();

	СтруктураПараметров = Новый Структура("ПараметрУведомленияПоЗаявкам", Заявка.Заявитель);
    	
	Если ПолучитьФункциональнуюОпцию("ЭП_УведомленияПоЗаявкам", СтруктураПараметров) Тогда  
		
		Если Пользователи.РолиДоступны( "ЭП_ИспользованиеЭП_ИсторияУведомленийПоЗаявкам", Пользователи.ТекущийПользователь()) Тогда
	
			МенеджерЗаписи = РегистрыСведений.ЭП_ИсторияУведомленийПоЗаявкам.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = ТекущаяДатаСеанса();
			МенеджерЗаписи.Заявка = Заявка;
			МенеджерЗаписи.Пользователь = Заявка.Заявитель;
			МенеджерЗаписи.СтатусЗаявки = Заявка.СтатусЗаявки;
			МенеджерЗаписи.Оповещен = Ложь;
			МенеджерЗаписи.Записать();  
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры 

Процедура ИзменитьИсполнителяЗаявки(Заявка, Задача, НовыйИсполнитель, АвторИзменений) экспорт 
	
	Если НовыйИсполнитель <> Неопределено и НовыйИсполнитель <> Заявка.Исполнитель Тогда  
		
		ЗаявкаОб = Заявка.ПолучитьОбъект();
		ЗадачаОб = ПолучитьТекущуюЗадачу(Заявка).ПолучитьОбъект();
		ЗаявкаОб.Исполнитель = НовыйИсполнитель;
		ДобавитьЗаписьВПротокол(ЗаявкаОб, АвторИзменений, Строка(АвторИзменений) + " направил(а) заявку на выполнение.", НовыйИсполнитель);	
		ЗаявкаОб.СтатусЗаявки = Перечисления.ЭП_СтатусыЗаявок.ВРаботе;
		
		ЗадачаОб.Исполнитель = НовыйИсполнитель;
		
		ЗаявкаОб.Записать();
		ЗадачаОб.Записать(); 
		
		Если РольДоступна("ЭП_ИспользованиеЭП_ИсторияУведомленийПоЗаявкам") Тогда
			МенеджерЗаписи = РегистрыСведений.ЭП_ИсторияУведомленийПоЗаявкам.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = ТекущаяДатаСеанса();
			МенеджерЗаписи.Заявка = Заявка;
			МенеджерЗаписи.Пользователь = Заявка.Заявитель;
			МенеджерЗаписи.СтатусЗаявки = Заявка.СтатусЗаявки;
			МенеджерЗаписи.Оповещен = Ложь;
			МенеджерЗаписи.Записать(); 
		КонецЕсли;
		
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеФорматированныхДокументов(Заявка)
	
	ФорматированныйДокументЧтоЯХочу = Заявка.ЧтоЯХочу.Получить();  
	Если не ФорматированныйДокументЧтоЯХочу = Неопределено Тогда
		Элементы = ФорматированныйДокументЧтоЯХочу.ПолучитьЭлементы(); 
		ЧтоЯХочу = "<div> ";				
		Для каждого Элемент из Элементы Цикл        
			Если ТипЗнч(Элемент) = Тип("КартинкаФорматированногоДокумента") Тогда
				ЧтоЯХочу = ЧтоЯХочу +
				" <image class=""img"" src='" + Строка(Элемент.Картинка) + "'/>";
			ИначеЕсли ТипЗнч(Элемент) = Тип("ТекстФорматированногоДокумента") Тогда
				ЧтоЯХочу = ЧтоЯХочу +
				" <span>" + Элемент.Текст + "</span>"; 
			КонецЕсли;
		КонецЦикла;
	    ЧтоЯХочу = ЧтоЯХочу + "</div> ";
 
	Иначе
		ЧтоЯХочу = "";
	КонецЕсли;

	
	ФорматированныйДокументЧтоЯДелаю = Заявка.ЧтоЯДелаю.Получить();  
	Если не ФорматированныйДокументЧтоЯДелаю = Неопределено Тогда
		Элементы = ФорматированныйДокументЧтоЯДелаю.ПолучитьЭлементы(); 
		ЧтоЯДелаю = "<div> ";				
		Для каждого Элемент из Элементы Цикл        
			Если ТипЗнч(Элемент) = Тип("КартинкаФорматированногоДокумента") Тогда
				ЧтоЯДелаю = ЧтоЯДелаю +
				" <image class=""img"" src='" + Строка(Элемент.Картинка) + "'/>";
			ИначеЕсли ТипЗнч(Элемент) = Тип("ТекстФорматированногоДокумента") Тогда
				ЧтоЯДелаю = ЧтоЯДелаю +
				" <span>" + Элемент.Текст + "</span>"; 
			КонецЕсли;
		КонецЦикла;
	    ЧтоЯДелаю = ЧтоЯДелаю + "</div> ";
 
	Иначе
		ЧтоЯДелаю = "";
	КонецЕсли;
	
	ФорматированныйДокументЧтоЯПолучаю = Заявка.ЧтоЯПолучаю.Получить();  
	Если не ФорматированныйДокументЧтоЯПолучаю = Неопределено Тогда
		Элементы = ФорматированныйДокументЧтоЯПолучаю.ПолучитьЭлементы(); 
		ЧтоЯПолучаю = "<div> "	;			
		Для каждого Элемент из Элементы Цикл        
				Если ТипЗнч(Элемент) = Тип("КартинкаФорматированногоДокумента")Тогда
				ЧтоЯПолучаю = ЧтоЯПолучаю +
				" <image class=""img"" src='" + Строка(Элемент.Картинка) + "'/>";
			ИначеЕсли ТипЗнч(Элемент) = Тип("ТекстФорматированногоДокумента") Тогда
				ЧтоЯПолучаю = ЧтоЯПолучаю +
				" <span>" + Элемент.Текст + "</span>"; 
			КонецЕсли;
		КонецЦикла;
	    ЧтоЯПолучаю = ЧтоЯПолучаю + "</div> ";
 
	Иначе
		ЧтоЯПолучаю = "";
	КонецЕсли;
		
	Возврат Новый Структура("ЧтоЯХочу, ЧтоЯДелаю, ЧтоЯПолучаю", ЧтоЯХочу, ЧтоЯДелаю, ЧтоЯПолучаю);

	
КонецФункции
