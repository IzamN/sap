
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЭП_ЗаполнениеТабеляСотрудников() Экспорт
	
	ПериодНачало = НачалоМесяца(ТекущаяДата());
	ПериодОкончание = КонецМесяца(ПериодНачало);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_Сотрудники.Ссылка КАК Сотрудник,
	|	ЭП_Сотрудники.ГрафикРаботы КАК ГрафикРаботы,
	|	Календари.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь
	|ПОМЕСТИТЬ ВТ_Сотрудники
	|ИЗ
	|	Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Календари КАК Календари
	|		ПО ЭП_Сотрудники.ГрафикРаботы = Календари.Ссылка
	|ГДЕ
	|	ЭП_Сотрудники.СтатусСотрудника В (&ИспытательныйСрок, &Работает)
	|	И ЭП_Сотрудники.ПометкаУдаления = ЛОЖЬ
	|	И НЕ ЭП_Сотрудники.ГрафикРаботы = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сотрудники.Сотрудник КАК Сотрудник,
	|	КалендарныеГрафики.ДатаГрафика КАК ДатаГрафика,
	|	ВТ_Сотрудники.ПроизводственныйКалендарь КАК ПроизводственныйКалендарь,
	|	ВЫБОР
	|		КОГДА КалендарныеГрафики.ДеньВключенВГрафик
	|			ТОГДА &Явка
	|		ИНАЧЕ &НеЯвка
	|	КОНЕЦ КАК ВидУчетаВремени,
	|	СУММА(ВЫБОР
	|			КОГДА КалендарныеГрафики.ДеньВключенВГрафик
	|				ТОГДА КалендариРаспРаботы.КоличествоЧасов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоЧасов,
	|	СУММА(ВЫБОР
	|			КОГДА КалендарныеГрафики.ДеньВключенВГрафик
	|				ТОГДА ЕСТЬNULL(КалендариРаспРаботыПредПр.КоличествоЧасов, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоЧасовПредпраздичный
	|ПОМЕСТИТЬ ВТ_ДанныеКалендаря
	|ИЗ
	|	ВТ_Сотрудники КАК ВТ_Сотрудники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				КалендариРасписаниеРаботы.Ссылка КАК Календарь,
	|				СУММА(РАЗНОСТЬДАТ(КалендариРасписаниеРаботы.ВремяНачала, КалендариРасписаниеРаботы.ВремяОкончания, СЕКУНДА)) КАК КоличествоЧасов,
	|				КалендариРасписаниеРаботы.НомерДня КАК НомерДня
	|			ИЗ
	|				Справочник.Календари.РасписаниеРаботы КАК КалендариРасписаниеРаботы
	|			
	|			СГРУППИРОВАТЬ ПО
	|				КалендариРасписаниеРаботы.Ссылка,
	|				КалендариРасписаниеРаботы.НомерДня) КАК КалендариРаспРаботы
	|			ПО (ДЕНЬНЕДЕЛИ(КалендарныеГрафики.ДатаГрафика) = КалендариРаспРаботы.НомерДня)
	|				И КалендарныеГрафики.Календарь = КалендариРаспРаботы.Календарь
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				КалендариРасписаниеРаботы.Ссылка КАК Календарь,
	|				СУММА(РАЗНОСТЬДАТ(КалендариРасписаниеРаботы.ВремяНачала, КалендариРасписаниеРаботы.ВремяОкончания, СЕКУНДА)) КАК КоличествоЧасов,
	|				КалендариРасписаниеРаботы.НомерДня КАК НомерДня
	|			ИЗ
	|				Справочник.Календари.РасписаниеРаботы КАК КалендариРасписаниеРаботы
	|			
	|			СГРУППИРОВАТЬ ПО
	|				КалендариРасписаниеРаботы.Ссылка,
	|				КалендариРасписаниеРаботы.НомерДня) КАК КалендариРаспРаботыПредПр
	|			ПО КалендарныеГрафики.Календарь = КалендариРаспРаботыПредПр.Календарь
	|				И (КалендариРаспРаботыПредПр.НомерДня = 0)
	|		ПО ВТ_Сотрудники.ГрафикРаботы = КалендарныеГрафики.Календарь
	|ГДЕ
	|	КалендарныеГрафики.ДатаГрафика МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Сотрудники.Сотрудник,
	|	ВТ_Сотрудники.ПроизводственныйКалендарь,
	|	ВЫБОР
	|		КОГДА КалендарныеГрафики.ДеньВключенВГрафик
	|			ТОГДА &Явка
	|		ИНАЧЕ &НеЯвка
	|	КОНЕЦ,
	|	КалендарныеГрафики.ДатаГрафика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&НачалоПериода КАК ПериодРегистрации,
	|	ВТ_ДанныеКалендаря.Сотрудник КАК Сотрудник,
	|	ВТ_ДанныеКалендаря.ДатаГрафика КАК ПериодРегистрацииДень,
	|	ВЫБОР
	|		КОГДА ДанныеПроизводственногоКалендаря.ВидДня ЕСТЬ NULL
	|			ТОГДА ВТ_ДанныеКалендаря.КоличествоЧасов / 3600
	|		КОГДА ДанныеПроизводственногоКалендаря.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный)
	|			ТОГДА ВТ_ДанныеКалендаря.КоличествоЧасовПредпраздичный / 3600
	|		ИНАЧЕ ВТ_ДанныеКалендаря.КоличествоЧасов / 3600
	|	КОНЕЦ КАК Часы,
	|	ВТ_ДанныеКалендаря.ВидУчетаВремени КАК ВидУчетаВремени
	|ИЗ
	|	ВТ_ДанныеКалендаря КАК ВТ_ДанныеКалендаря
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПроизводственногоКалендаря КАК ДанныеПроизводственногоКалендаря
	|		ПО ВТ_ДанныеКалендаря.ДатаГрафика = ДанныеПроизводственногоКалендаря.Дата
	|			И ВТ_ДанныеКалендаря.ПроизводственныйКалендарь = ДанныеПроизводственногоКалендаря.ПроизводственныйКалендарь
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников КАК ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников
	|		ПО ВТ_ДанныеКалендаря.Сотрудник = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Сотрудник
	|			И ВТ_ДанныеКалендаря.ДатаГрафика = ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.ПериодРегистрацииДень
	|ГДЕ
	|	ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.Часы ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("НачалоПериода", ПериодНачало);
	Запрос.УстановитьПараметр("КонецПериода", ПериодОкончание);
	Запрос.УстановитьПараметр("ИспытательныйСрок", Перечисления.ЭП_СтатусыСотрудников.ИспытательныйСрок);
	Запрос.УстановитьПараметр("Работает", Перечисления.ЭП_СтатусыСотрудников.Работает); 
	Запрос.УстановитьПараметр("Явка", Справочники.ЭП_ВидыУчетаВремени.Явка);
	Запрос.УстановитьПараметр("НеЯвка", Справочники.ЭП_ВидыУчетаВремени.НеЯвка); 
	
	РезультатЗапроса = Запрос.Выполнить();  
	
	//Выгрузка = РезультатЗапроса.Выгрузить();
	//НаборДанных = РегистрыСведений.ЭП_ЗатраченныеЧасыПоСотрудникам.СоздатьНаборЗаписей();
	//НаборДанных.Отбор.ПериодРегистрации.Установить(ПериодНачало);
	//НаборДанных.Прочитать();
	//НаборДанных.Загрузить(Выгрузка);
	//НаборДанных.Записать(Ложь); 
	//
	   
	
	Выборка = РезультатЗапроса.Выбрать(); 
	
	Пока Выборка.Следующий() Цикл 
		
		Запись = РегистрыСведений.ЭП_ДанныеТабельногоУчетаРабочегоВремениСотрудников.СоздатьМенеджерЗаписи();
		
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
		Запись.Записать();
				
	КонецЦикла;		
	
КонецПроцедуры

#КонецОбласти
