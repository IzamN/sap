#Область ПрограмныйИнтерфейс

Процедура ОтправитьСообщениеПоПочте() Экспорт
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_СостоянияОтправкиПочтовыхПием.Период КАК Период,
	|	ЭП_СостоянияОтправкиПочтовыхПием.Пользователь КАК Пользователь,
	|	ЭП_СостоянияОтправкиПочтовыхПием.Почта КАК Почта,
	|	ЭП_СостоянияОтправкиПочтовыхПием.ОтсутсвуютДругиеПользователиВРассылке КАК ОтсутсвуютДругиеПользователиВРассылке,
	|	ЭП_СостоянияОтправкиПочтовыхПием.ТекстПисьма КАК ТекстПисьма,
	|	ЭП_СостоянияОтправкиПочтовыхПием.ДокументРегситратор КАК ДокументРегситратор,
	|	ЭП_СостоянияОтправкиПочтовыхПием.ДокументРегситратор.Проект.Представление КАК ПроектПредставление,
	|	ЭП_СостоянияОтправкиПочтовыхПием.Отправлен КАК Отправлен
	|ИЗ
	|	РегистрСведений.ЭП_СостоянияОтправкиПочтовыхПием КАК ЭП_СостоянияОтправкиПочтовыхПием
	|ГДЕ
	|	НЕ ЭП_СостоянияОтправкиПочтовыхПием.Отправлен";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		СистемнаяУчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			// А вот 8.3.25 есть свой метод вызвать паузу	
			ВызватьПаузу(Константы.ЭП_ЗадержкаПередотправкойПисем.Получить());

			Если Не Выборка.ОтсутсвуютДругиеПользователиВРассылке И Не Выборка.Отправлен Тогда 
							
				Попытка
					
					ТекстПисьма = Выборка.ТекстПисьма.Получить();
					
					Если ТекстПисьма = Неопределено Тогда 
						
						ТабЧастьСотрудники = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ДокументРегситратор,"Сотрудники").Выгрузить();
						ПроектДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ДокументРегситратор,"Проект"); 
						
						ТекстПисьма = ЭП_ПочтовыеФункции.СоздатьТекстПисьма(Выборка.Пользователь, Выборка.Пользователь.Департамент, 
						ТабЧастьСотрудники, ПроектДокумента, Выборка.ДокументРегситратор);
						
					КонецЕсли;
					
				Исключение
					
					Описание = ОписаниеОшибки();									
					Информация = ИнформацияОбОшибке();					
					Подробности = ПодробноеПредставлениеОшибки(Информация);
					ЗаписьЖурналаРегистрации("Отправка писем через фоновое задание по одному пользователю", УровеньЖурналаРегистрации.Ошибка, , , 
					"Не удалось отправить письмо по сотруднику " + Выборка.Пользователь + ": " + Подробности);
					
				КонецПопытки;

						
				Попытка				
					
					ОтправитьПочтовоеСообщение(Выборка.Почта,ТекстПисьма, 
					СистемнаяУчетнаяЗапись, Выборка.ПроектПредставление); 
					
					ОбновитьЗаписьВРегистре(Выборка.Период, Выборка.Пользователь, Выборка.Почта,
					Выборка.ДокументРегситратор, Выборка.ОтсутсвуютДругиеПользователиВРассылке);
											
				Исключение
					
					Описание = ОписаниеОшибки();									
					Информация = ИнформацияОбОшибке();					
					Подробности = ПодробноеПредставлениеОшибки(Информация);
					ЗаписьЖурналаРегистрации("Отправка писем через фоновое задание по одному пользователю", УровеньЖурналаРегистрации.Ошибка, , , 
					"Не удалось отправить письмо по сотруднику " + Выборка.Пользователь + ": " + Подробности);
					
				КонецПопытки;
				
			ИначеЕсли Выборка.ОтсутсвуютДругиеПользователиВРассылке И Не Выборка.Отправлен Тогда
				
				ДокументРегистратор = Выборка.ДокументРегситратор;
				Период = Выборка.Период;
				Почта = Выборка.Почта;
				ОтсутсвуютДругиеПользователиВРассылке = Выборка.ОтсутсвуютДругиеПользователиВРассылке;
				Пользователь = Выборка.Пользователь;
				ПредставлениеПроекта = Выборка.ПроектПредставление; 
				ТабЧастьСотрудники = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРегистратор,"Сотрудники").Выгрузить();
				ПроектДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРегистратор,"Проект");
				
				МассивДанныхПользователей = ЭП_ПочтовыеФункции.ПолучитьМассивОтветственных(ПроектДокумента);
								
				ЗаписьВыполненаУспешно = Ложь;
								
				Для Каждого СтрокаДанных Из МассивДанныхПользователей Цикл
					
					Попытка
						
						ПисьмоТекст = ЭП_ПочтовыеФункции.СоздатьТекстПисьма(СтрокаДанных.Ответственный, 
						СтрокаДанных.Департамент, ТабЧастьСотрудники, ПроектДокумента, ДокументРегистратор);
						
						ОтправитьПочтовоеСообщение(СтрокаДанных.АдресЭП, ПисьмоТекст, СистемнаяУчетнаяЗапись, ПредставлениеПроекта)
						 
					Исключение
						
						Описание = ОписаниеОшибки();					
						Информация = ИнформацияОбОшибке();						
						Подробности = ПодробноеПредставлениеОшибки(Информация);
						ЗаписьЖурналаРегистрации("Отправка писем через фоновое залание по всем пользователям", УровеньЖурналаРегистрации.Ошибка, , , 
						"Не удалось отправить письмо по сотрудникам: " + Подробности); 
						// Делаем записи уже по пользователю с проблемами, а запись в регистре удаляем, и теперь сообщения должны пытаться отправиться
						// только одному пользователю 
						АдресЭПДляЗаписи = ?(ЗначениеЗаполнено(СтрокаДанных.АдресЭП),СтрокаДанных.АдресЭП, "");
						ДокументРегистраторДляЗаписи = ?(ЗначениеЗаполнено(ДокументРегистратор), 
						ДокументРегистратор, Документы.ЭП_ПланированиеТрудозатрат.ПустаяСсылка()); 
						
						Если ЗначениеЗаполнено(СтрокаДанных.Ответственный)  Тогда
							
							МенеджерЗаписи = РегистрыСведений.ЭП_СостоянияОтправкиПочтовыхПием.СоздатьМенеджерЗаписи();
							МенеджерЗаписи.ТекстПисьма = Новый ХранилищеЗначения(ПисьмоТекст, Новый СжатиеДанных()); 
							МенеджерЗаписи.Почта = АдресЭПДляЗаписи;
							МенеджерЗаписи.ОтсутсвуютДругиеПользователиВРассылке = Ложь;
							МенеджерЗаписи.ДокументРегситратор = ДокументРегистраторДляЗаписи;
							МенеджерЗаписи.Пользователь = СтрокаДанных.Ответственный;
							МенеджерЗаписи.Период = ТекущаяДатаСеанса();
							МенеджерЗаписи.Отправлен = Ложь; 
							МенеджерЗаписи.Прочитать();
							Если Не МенеджерЗаписи.Выбран() Тогда
								МенеджерЗаписи.ТекстПисьма = Новый ХранилищеЗначения(ПисьмоТекст, Новый СжатиеДанных()); 
								МенеджерЗаписи.Почта = АдресЭПДляЗаписи;
								МенеджерЗаписи.ОтсутсвуютДругиеПользователиВРассылке = Ложь;
								МенеджерЗаписи.ДокументРегситратор = ДокументРегистраторДляЗаписи;
								МенеджерЗаписи.Пользователь = СтрокаДанных.Ответственный;
								МенеджерЗаписи.Период = ТекущаяДатаСеанса();
								МенеджерЗаписи.Отправлен = Ложь; 
								МенеджерЗаписи.Записать();
							КонецЕсли;
														
						КонецЕсли;
						
					КонецПопытки;
					
					ЗаписьВыполненаУспешно = Истина;
					
				КонецЦикла;
				
				Если ЗаписьВыполненаУспешно Тогда                                      
					ОбновитьЗаписьВРегистре(Период, Пользователь, Почта, ДокументРегистратор, ОтсутсвуютДругиеПользователиВРассылке) 			
				КонецЕсли;
				
			КонецЕсли;                                                                                  
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтправитьПочтовоеСообщение(Почта, ТекстПисьма, СистемнаяУчетнаяЗапись, Проект)
	
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Кому", Почта);
	ПараметрыПисьма.Вставить("Тема", "Планирование переработок по проекту " + Проект);
	ПараметрыПисьма.Вставить("Тело", ТекстПисьма);
	ПараметрыПисьма.Вставить("ТипТекста", "HTML"); 		
	Письмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(СистемнаяУчетнаяЗапись, ПараметрыПисьма); 			
	РаботаСПочтовымиСообщениями.ОтправитьПисьмо(СистемнаяУчетнаяЗапись, Письмо);
			
КонецПроцедуры

Процедура УдалитьЗаписьВРегистреСведений(Период, Пользователь, Почта, ДокументРегситратор, ОтсутсвуютДругиеПользователиВРассылке) 
	
	Запись = РегистрыСведений.ЭП_СостоянияОтправкиПочтовыхПием.СоздатьМенеджерЗаписи(); 
	Запись.Период = Период;
	Запись.Пользователь = Пользователь;
	Запись.Почта = Почта;
	Запись.ДокументРегситратор = ДокументРегситратор;
	Запись.ОтсутсвуютДругиеПользователиВРассылке = ОтсутсвуютДругиеПользователиВРассылке;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Запись.Удалить();
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьВозможностьУдаленияЗаписиВРегистреСведений(Период, Пользователь, Почта, ДокументРегситратор, ОтсутсвуютДругиеПользователиВРассылке)
	
	Запись = РегистрыСведений.ЭП_СостоянияОтправкиПочтовыхПием.СоздатьМенеджерЗаписи(); 
	Запись.Период = Период;
	Запись.Пользователь = Пользователь;
	Запись.Почта = Почта;
	Запись.ДокументРегситратор = ДокументРегситратор;
	Запись.ОтсутсвуютДругиеПользователиВРассылке = ОтсутсвуютДругиеПользователиВРассылке;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Возврат Истина; 
	Иначе
		Возврат Ложь;	
	КонецЕсли;	
	
КонецФункции

Процедура ВызватьПаузу(Секунды)
	
    ВремяОкончания = ТекущаяДата() + Секунды;
    Пока ТекущаяДата() <= ВремяОкончания Цикл
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьЗаписьВРегистре(Период, Пользователь, Почта, ДокументРегситратор, ОтсутсвуютДругиеПользователиВРассылке)
	
	Запись = РегистрыСведений.ЭП_СостоянияОтправкиПочтовыхПием.СоздатьМенеджерЗаписи(); 
	Запись.Период = Период;
	Запись.Пользователь = Пользователь;
	Запись.Почта = Почта;
	Запись.ДокументРегситратор = ДокументРегситратор;
	Запись.ОтсутсвуютДругиеПользователиВРассылке = ОтсутсвуютДругиеПользователиВРассылке;
	Запись.Отправлен = Ложь;	
	Запись.Прочитать();
	Если Запись.Выбран() Тогда 
		Запись.Отправлен = Истина;
		Запись.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
