&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = ЛОЖЬ; 
	ТекущаяЗадача = ВыбраннаяСтрока;
	ТекущаяЗаявка = ПолучитьЗаявку(ТекущаяЗадача);
    ПараметрыФормы = Новый Структура("Ключ, Задача", ТекущаяЗаявка, ТекущаяЗадача);
	ОткрытьФорму("БизнесПроцесс.ЭП_Заявки.Форма.ФормаЗаявкиПросмотр",ПараметрыФормы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокПриАктивизацииСтрокиНаСервере(Заявка)
	
	Возврат ЭП_РаботаСЗаявкамиСервер.СформироватьОбзорЗаявки(Заявка);
	
КонецФункции 

&НаСервере
Функция ПолучитьЗаявку(Задача) 
	
	Возврат Задача.БизнесПроцесс;
	
КонецФункции

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущаяЗадача = Элемент.ТекущаяСтрока; 
	ТекущаяЗаявка = ПолучитьЗаявку(ТекущаяЗадача);
	Если ТекущаяЗаявка <> Неопределено Тогда 
		ОбзорЗаявкиHTML = СписокПриАктивизацииСтрокиНаСервере(ТекущаяЗаявка); 
		ИзменитьДоступККомандам();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьДоступККомандам() 
	
	Если ТекущаяЗадача.ТочкаМаршрута = БизнесПроцессы.ЭП_Заявки.ТочкиМаршрута.ВыполнениеЗаявки Тогда
		
		Элементы.ГруппаКомандыВыполнения.Видимость = Истина;
		Элементы.ГруппаКомандыСогласования.Видимость = Ложь;
		Если ТекущаяЗаявка.СтатусЗаявки = Перечисления.ЭП_СтатусыЗаявок.ВОчереди Тогда
			Элементы.ВзятьВРаботу.Доступность = Истина;
			Элементы.ВыполнитьЗаявку.Доступность = Ложь;
			Элементы.ОтменитьЗаявку.Доступность = Ложь;
		ИначеЕсли ТекущаяЗаявка.СтатусЗаявки = Перечисления.ЭП_СтатусыЗаявок.ВРаботе Тогда  
			Элементы.ВзятьВРаботу.Доступность = Ложь;
			Элементы.ВыполнитьЗаявку.Доступность = Истина;
			Элементы.ОтменитьЗаявку.Доступность = Истина; 
		Иначе 
			Элементы.ВыполнитьЗаявку.Доступность = Ложь;
			Элементы.ОтменитьЗаявку.Доступность = Ложь;
			Элементы.ВзятьВРаботу.Доступность = Ложь;
		КонецЕсли;
		
	ИначеЕсли ТекущаяЗадача.ТочкаМаршрута = БизнесПроцессы.ЭП_Заявки.ТочкиМаршрута.СогласованиеГД или ТекущаяЗадача.ТочкаМаршрута = БизнесПроцессы.ЭП_Заявки.ТочкиМаршрута.СогласованиеРП Тогда
		
		Элементы.ГруппаКомандыВыполнения.Видимость = Ложь;
		Элементы.ГруппаКомандыСогласования.Видимость = Истина;
		
		Если ТекущаяЗадача.Выполнена Тогда 
			Элементы.Согласовать.Доступность = Ложь; 
			Элементы.НеСогласовать.Доступность = Ложь;
		Иначе
			Элементы.Согласовать.Доступность = Истина; 
			Элементы.НеСогласовать.Доступность = Истина; 
		КонецЕсли;
				
	КонецЕсли; 
			
КонецПроцедуры

#Область КомандыНаФорме
 
&НаКлиенте
Процедура ВзятьВРаботу(Команда)
	
	ЭП_РаботаСЗаявкамиСервер.ДействияСЗаявкой(ТекущаяЗаявка, ТекущийПользователь, ПредопределенноеЗначение("Перечисление.ЭП_СтатусыЗаявок.ВРаботе"), " взял(а) в работу.", Ложь);	
	Элементы.Список.Обновить();
	ИзменитьДоступККомандам();
	
КонецПроцедуры 

&НаКлиенте
Процедура ВыполнитьЗаявку(Команда)
	
	ЭП_РаботаСЗаявкамиСервер.ДействияСЗаявкой(ТекущаяЗаявка, ТекущийПользователь, ПредопределенноеЗначение("Перечисление.ЭП_СтатусыЗаявок.НаПроверке"), " отправил(а) на проверку.", Истина);	
	Элементы.Список.Обновить();
	ИзменитьДоступККомандам();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗаявку(Команда)
	
	ЭП_РаботаСЗаявкамиСервер.ДействияСЗаявкой(ТекущаяЗаявка, ТекущийПользователь, ПредопределенноеЗначение("Перечисление.ЭП_СтатусыЗаявок.ЗапросНаОтмену"), " отправил(а) запрос на отмену.", Ложь);	
	Элементы.Список.Обновить();
	ИзменитьДоступККомандам();
	
КонецПроцедуры

&НаКлиенте
Процедура Согласовать(Команда)  
	
	Свойства = Новый Структура("СогласиеНаВыполнениеЗаявки", Истина);
    ЭП_РаботаСЗаявкамиСервер.ДействияСЗаявкой(ТекущаяЗаявка, ТекущийПользователь, ПредопределенноеЗначение("Перечисление.ЭП_СтатусыЗаявок.ВОчереди"), " дал(а) согласие на выполнение.", Истина, Свойства);	
	Элементы.Список.Обновить();
	ИзменитьДоступККомандам(); 

КонецПроцедуры

&НаКлиенте
Процедура НеСогласовать(Команда)   
	
	Свойства = Новый Структура("СогласиеНаВыполнениеЗаявки", Ложь);
    ЭП_РаботаСЗаявкамиСервер.ДействияСЗаявкой(ТекущаяЗаявка, ТекущийПользователь,ПредопределенноеЗначение("Перечисление.ЭП_СтатусыЗаявок.Отклонена"), " отклонил(а) заявку.", Истина, Свойства);	
	Элементы.Список.Обновить();
	ИзменитьДоступККомандам();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФорму(Команда)
	
	Элементы.Список.Обновить();
	ИзменитьДоступККомандам();
	
КонецПроцедуры

#КонецОбласти

#Область Отборы 

&НаКлиенте
Процедура ОтборПоСтатусуДобавлениеМножественныхЗначений(Элемент, Значения, СтандартнаяОбработка)
	
	МассивСтатусов = Новый Массив();
	Для каждого Статус из ОтборПоСтатусу Цикл
		МассивСтатусов.Добавить(Статус.Значение);
	КонецЦикла;
	МассивСтатусов.Добавить(Значения[0]);
	ИсторияИзмененияСтатусов.Добавить(ИсторияИзмененияСтатусов.Количество(),Значения[0]);
	ЗаполнитьСписок(МассивСтатусов, ОтборПоТипу, ПоказатьВсе); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСтатусуУдалениеМножественныхЗначений(Элемент, Идентификаторы, СтандартнаяОбработка) 
	
	МассивСтатусов = Новый Массив(); 
	УдалитьСтатус = ИсторияИзмененияСтатусов[Идентификаторы[0]].Представление;
	Для каждого Статус из ОтборПоСтатусу Цикл
		Если Строка(Статус.Значение) <> УдалитьСтатус Тогда
			МассивСтатусов.Добавить(Статус.Значение);
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьСписок(МассивСтатусов, ОтборПоТипу, ПоказатьВсе);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуДобавлениеМножественныхЗначений(Элемент, Значения, СтандартнаяОбработка) 
	
	МассивТипов = Новый Массив();
	Для каждого Тип из ОтборПоТипу Цикл
		МассивТипов.Добавить(Тип.Значение);
	КонецЦикла;
	МассивТипов.Добавить(Значения[0]);
	ИсторияИзмененияТипов.Добавить(ИсторияИзмененияТипов.Количество(),Значения[0]);
	ЗаполнитьСписок(ОтборПоСтатусу, МассивТипов, ПоказатьВсе);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуУдалениеМножественныхЗначений(Элемент, Идентификаторы, СтандартнаяОбработка) 
	
	МассивТипов = Новый Массив(); 
	УдалитьТип = ИсторияИзмененияТипов[Идентификаторы[0]].Представление;
	Для каждого Тип из ОтборПоТипу Цикл
		Если Строка(Тип.Значение) <> УдалитьТип Тогда
			МассивТипов.Добавить(Тип.Значение);
		КонецЕсли;
	КонецЦикла; 
	ЗаполнитьСписок(ОтборПоСтатусу, МассивТипов, ПоказатьВсе);
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСписок(ОтборПоСтатусу, ОтборПоТипу, ПоказатьВсе)
	
	ЭтаФорма.Список.Отбор.Элементы.Очистить();
	
	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипЗаявки");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(ОтборПоТипу);
	ЭлементОтбора.ПравоеЗначение = ОтборПоТипу;
		
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатусЗаявки");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = ЗначениеЗаполнено(ОтборПоСтатусу);
	ЭлементОтбора.ПравоеЗначение = ОтборПоСтатусу;
		
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Выполнена");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Не ПоказатьВсе;
	ЭлементОтбора.ПравоеЗначение = ПоказатьВсе;
	//Список.ТекстЗапроса = "ВЫБРАТЬ
	//|	ЭП_Заявки.Номер КАК Номер,
	//|	ЭП_Заявки.ТипЗаявки КАК ТипЗаявки,
	//|	ЭП_Заявки.СтатусЗаявки КАК СтатусЗаявки,
	//|	ЭП_Заявки.Заявитель КАК Заявитель,
	//|	ВЫБОР
	//|		КОГДА ЭП_ЗадачиЗаявокЗадачиПоИсполнителю.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	//|			ТОГДА ЭП_ЗадачиЗаявокЗадачиПоИсполнителю.Отдел
	//|		ИНАЧЕ ЭП_ЗадачиЗаявокЗадачиПоИсполнителю.Исполнитель
	//|	КОНЕЦ КАК Исполнитель
	//|ИЗ
	//|	Задача.ЭП_ЗадачиЗаявок.ЗадачиПоИсполнителю КАК ЭП_ЗадачиЗаявокЗадачиПоИсполнителю
	//|		ЛЕВОЕ СОЕДИНЕНИЕ БизнесПроцесс.ЭП_Заявки КАК ЭП_Заявки
	//|		ПО ЭП_ЗадачиЗаявокЗадачиПоИсполнителю.БизнесПроцесс = ЭП_Заявки.Ссылка
	//|ГДЕ
	//|	(&НеИспользоватьСтатусыЗаявок
	//|			ИЛИ ЭП_Заявки.СтатусЗаявки В (&МассивСтатусовЗаявки))
	//|	И (&НеИспользоватьТипыЗаявок
	//|			ИЛИ ЭП_Заявки.ТипЗаявки В (&МассивТиповЗаявки))
	//|	И ЭП_ЗадачиЗаявокЗадачиПоИсполнителю.ТочкаМаршрута <> ЗНАЧЕНИЕ(БизнесПроцесс.ЭП_Заявки.ТочкаМаршрута.ОбратнаяСвязь) 
	//|   И (&ПоказатьВсе
	//|			ИЛИ не ЭП_ЗадачиЗаявокЗадачиПоИсполнителю.Выполнена)
	//|
	//|"; 
	//
	//Список.Параметры.УстановитьЗначениеПараметра("МассивСтатусовЗаявки", ОтборПоСтатусу);
	//Список.Параметры.УстановитьЗначениеПараметра("МассивТиповЗаявки", ОтборПоТипу);
	//
	//Если ОтборПоСтатусу.Количество() = 0 Тогда
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьСтатусыЗаявок", Истина);
	//Иначе
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьСтатусыЗаявок", Ложь);
	//КонецЕсли;
	//
	//Если ОтборПоТипу.Количество() = 0 Тогда
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьТипыЗаявок", Истина);
	//Иначе
	//	Список.Параметры.УстановитьЗначениеПараметра("НеИспользоватьТипыЗаявок", Ложь);
	//КонецЕсли;
	//
	//Если ПоказатьВсе Тогда	
	//	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьВсе", Истина);
	//Иначе
	//	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьВсе", Ложь);	
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеПриИзменении(Элемент)  
	
	  ЗаполнитьСписок(ОтборПоСтатусу, ОтборПоТипу, ПоказатьВсе);  
	  
КонецПроцедуры

#КонецОбласти









