
&НаКлиенте
Процедура ПериодОцениванияПриИзменении(Элемент)
	
	ПериодОценивания = НачалоМесяца(ПериодОценивания);
		
	Если Модифицированность Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииПериодаОценивания", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателей?", РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
			
	КонецЕсли;
	
	//Элементы.РасчетныйПрофиль.СписокВыбора.Очистить();	
	//Элементы.Сотрудник.СписокВыбора.Очистить(); 
	Элементы.Сотрудник.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивСотрудниковДляОценивания(Проект, РасчетныйПрофиль, ПрофильОценивания, Ответственный, ПериодОценивания));
	//Элементы.ПрофильОценивания.СписокВыбора.Очистить();
	ТаблицаОценивания.Очистить();
	
	Сотрудник = ПредопределенноеЗначение("Справочник.ЭП_Сотрудники.ПустаяСсылка");
	ПроверкаПроектаНаУтверждение();
	//РасчетныйПрофиль = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиРасчетаРезультативности.ПустаяСсылка");
	//ПрофильОценивания = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиОценивания.ПустаяСсылка");
	//Проект = ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивПроектов(Ответственный)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПроектыЭП_ТаблицаОценивания.Ссылка КАК Проект
	               |ИЗ
	               |	Справочник.Проекты.ЭП_ТаблицаОценивания КАК ПроектыЭП_ТаблицаОценивания
	               |ГДЕ
	               |	ПроектыЭП_ТаблицаОценивания.Оценивает = &Сотрудник";
	Запрос.УстановитьПараметр("Сотрудник", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный,"ЭП_Сотрудник"));
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
	
		ОбщегоНазначения.СообщитьПользователю("Вы не являетесь ответственным за оценку ни на одном из проектов.");
	
	КонецЕсли;
	МассивПроектов = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Проект");
	Возврат МассивПроектов;

КонецФункции

&НаКлиенте
Процедура ПриИзмененииПериодаОценивания(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьЗначенияПоказателя();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЗначенияПоказателя()
	
	Для каждого СтрокаТаблицы Из ТаблицаОценивания Цикл
		
		МенеджерЗаписиРегистра = РегистрыСведений.ЭП_ЭффективностьСотрудников.СоздатьМенеджерЗаписи(); 
		МенеджерЗаписиРегистра.Период = ПериодОценивания; 
		МенеджерЗаписиРегистра.Ответственный = Ответственный;
		ЗаполнитьЗначенияСвойств(МенеджерЗаписиРегистра, СтрокаТаблицы);
		МенеджерЗаписиРегистра.Записать(Истина);
		
	КонецЦикла;  
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	ЗаполнитьТаблицуПоСотруднику();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьЗначенияПоказателя(); 
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьЗначенияПоказателя();
	Закрыть();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущийОткрытыйМесяц()
	
	НачалоМесяца = НачалоМесяца(ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(МАКСИМУМ(ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних.Период), &ТекущаяДата) КАК Период
	               |ИЗ
	               |	РегистрСведений.ЭП_ДатыЗакрытияРедактированияПоказателей.СрезПоследних КАК ЭП_ДатыЗакрытияРедактированияПоказателейСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоМесяца);
	РезультатЗапроса = Запрос.Выполнить();
		
	Выборка = РезультатЗапроса.Выбрать(); 
	Выборка.Следующий();
	
	Если Выборка.Период = НачалоМесяца Тогда
		Возврат НачалоМесяца;	
	КонецЕсли;	
	
	Возврат ДобавитьМесяц(Выборка.Период, 1);

КонецФункции


&НаКлиенте
Процедура ПриИзмененииПроекта(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьЗначенияПоказателя();
				
	КонецЕсли;
	Модифицированность = Ложь;
	Элементы.РасчетныйПрофиль.СписокВыбора.Очистить();
	Элементы.РасчетныйПрофиль.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивРасчетныхПрофилей(Ответственный, Проект)); 
	
	Элементы.Сотрудник.СписокВыбора.Очистить();
	Элементы.ПрофильОценивания.СписокВыбора.Очистить();
	ТаблицаОценивания.Очистить();
	
	Сотрудник = ПредопределенноеЗначение("Справочник.ЭП_Сотрудники.ПустаяСсылка");
	РасчетныйПрофиль = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиРасчетаРезультативности.ПустаяСсылка");
	ПрофильОценивания = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиОценивания.ПустаяСсылка");
	
    ПроверкаПроектаНаУтверждение();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРасчетногоПрофиля(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьЗначенияПоказателя();
				
	КонецЕсли;  
	Модифицированность = Ложь;
	Элементы.Сотрудник.СписокВыбора.Очистить();
	ТаблицаОценивания.Очистить();
	
	Элементы.ПрофильОценивания.СписокВыбора.Очистить();
	Элементы.ПрофильОценивания.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивПрофилейОценивания(Ответственный, Проект, РасчетныйПрофиль)); 
	Сотрудник = ПредопределенноеЗначение("Справочник.ЭП_Сотрудники.ПустаяСсылка");
	ПрофильОценивания = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиОценивания.ПустаяСсылка"); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПрофиляОценивания(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьЗначенияПоказателя();
				
	КонецЕсли;
	Модифицированность = Ложь;
	ТаблицаОценивания.Очистить();	
	Элементы.Сотрудник.СписокВыбора.Очистить();
	Элементы.Сотрудник.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивСотрудниковДляОценивания(Проект, РасчетныйПрофиль, ПрофильОценивания, Ответственный, ПериодОценивания));
	Сотрудник = ПредопределенноеЗначение("Справочник.ЭП_Сотрудники.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	Если Модифицированность Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииПроекта", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателей?", РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
			
	КонецЕсли;
	
	Элементы.РасчетныйПрофиль.СписокВыбора.Очистить();
	Элементы.РасчетныйПрофиль.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивРасчетныхПрофилей(Ответственный, Проект)); 
	
	Элементы.Сотрудник.СписокВыбора.Очистить();
	Элементы.ПрофильОценивания.СписокВыбора.Очистить();
	ТаблицаОценивания.Очистить();
	
	Сотрудник = ПредопределенноеЗначение("Справочник.ЭП_Сотрудники.ПустаяСсылка");
	РасчетныйПрофиль = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиРасчетаРезультативности.ПустаяСсылка");
	ПрофильОценивания = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиОценивания.ПустаяСсылка");
	
    ПроверкаПроектаНаУтверждение();
	
КонецПроцедуры    

&НаСервереБезКонтекста
Функция ПолучитьМассивРасчетныхПрофилей(Ответственный, Проект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроектыЭП_ТаблицаОценивания.РасчетныйПрофиль КАК РасчетныйПрофиль
	               |ИЗ
	               |	Справочник.Проекты.ЭП_ТаблицаОценивания КАК ПроектыЭП_ТаблицаОценивания
	               |ГДЕ
	               |	ПроектыЭП_ТаблицаОценивания.Оценивает = &Сотрудник
	               |	И ПроектыЭП_ТаблицаОценивания.Ссылка = &Проект";
	Запрос.УстановитьПараметр("Сотрудник", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный,"ЭП_Сотрудник"));
	Запрос.УстановитьПараметр("Проект", Проект);
	РезультатЗапроса = Запрос.Выполнить();
	
	МассивРасчетныхПрофилей = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("РасчетныйПрофиль");
	Возврат МассивРасчетныхПрофилей;

КонецФункции

&НаКлиенте
Процедура РасчетныйПрофильПриИзменении(Элемент)
	
	Если Модифицированность Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииРасчетногоПрофиля", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателей?", РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
			
	КонецЕсли;
	
	Элементы.Сотрудник.СписокВыбора.Очистить();
	ТаблицаОценивания.Очистить();
	
	Элементы.ПрофильОценивания.СписокВыбора.Очистить();
	Элементы.ПрофильОценивания.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивПрофилейОценивания(Ответственный, Проект, РасчетныйПрофиль)); 
	Сотрудник = ПредопределенноеЗначение("Справочник.ЭП_Сотрудники.ПустаяСсылка");
	ПрофильОценивания = ПредопределенноеЗначение("Справочник.ЭП_ПрофилиОценивания.ПустаяСсылка"); 
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьМассивПрофилейОценивания(Ответственный, Проект, РасчетныйПрофиль)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроектыЭП_ТаблицаОценивания.Профиль КАК Профиль
	               |ИЗ
	               |	Справочник.Проекты.ЭП_ТаблицаОценивания КАК ПроектыЭП_ТаблицаОценивания
	               |ГДЕ
	               |	ПроектыЭП_ТаблицаОценивания.Оценивает = &Сотрудник
	               |	И ПроектыЭП_ТаблицаОценивания.Ссылка = &Проект
	               |	И ПроектыЭП_ТаблицаОценивания.РасчетныйПрофиль = &РасчетныйПрофиль";
	Запрос.УстановитьПараметр("Сотрудник", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный,"ЭП_Сотрудник"));
	Запрос.УстановитьПараметр("Проект", Проект); 
	Запрос.УстановитьПараметр("РасчетныйПрофиль", РасчетныйПрофиль);
	РезультатЗапроса = Запрос.Выполнить();

	МассивРасчетныхПрофилей = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Профиль");
	Возврат МассивРасчетныхПрофилей;

КонецФункции

&НаКлиенте
Процедура ПрофильОцениванияПриИзменении(Элемент)
	
	Если Модифицированность Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииПрофиляОценивания", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателей?", РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
			
	КонецЕсли;	
	
	ТаблицаОценивания.Очистить();	
	Элементы.Сотрудник.СписокВыбора.Очистить();
	Элементы.Сотрудник.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивСотрудниковДляОценивания(Проект, РасчетныйПрофиль, ПрофильОценивания, Ответственный, ПериодОценивания));
	Сотрудник = ПредопределенноеЗначение("Справочник.ЭП_Сотрудники.ПустаяСсылка");
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьМассивСотрудниковДляОценивания(Проект, ПрофильРасчета, ПрофильОценивания, Ответственный, ПериодОценивания)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	               |	ЭП_ЗагруженностьСотрудниковСрезПоследних.Проект КАК Проект
	               |ПОМЕСТИТЬ ВТ_СписокСотрудниковТекущегоПроекта
	               |ИЗ
	               |	РегистрСведений.ЭП_ЗагруженностьСотрудников.СрезПоследних(, Проект = &Проект) КАК ЭП_ЗагруженностьСотрудниковСрезПоследних
	               |ГДЕ
	               |	НЕ ЭП_ЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СписокСотрудниковТекущегоПроекта.Сотрудник КАК Сотрудник,
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль КАК Профиль,
	               |	ВТ_СписокСотрудниковТекущегоПроекта.Проект КАК Проект
	               |ПОМЕСТИТЬ ВТ_СотрудникиСНужнымРасчетнымПрофилем
	               |ИЗ
	               |	ВТ_СписокСотрудниковТекущегоПроекта КАК ВТ_СписокСотрудниковТекущегоПроекта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.РасчетныеПрофили КАК ЭП_СотрудникиРасчетныеПрофили
	               |		ПО ВТ_СписокСотрудниковТекущегоПроекта.Сотрудник = ЭП_СотрудникиРасчетныеПрофили.Ссылка
	               |ГДЕ
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль = &ПрофильРасчета
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СотрудникиСНужнымРасчетнымПрофилем.Сотрудник КАК Сотрудник
	               |ПОМЕСТИТЬ ВТ_ДополнениеУчетомВремени
	               |ИЗ
	               |	ВТ_СотрудникиСНужнымРасчетнымПрофилем КАК ВТ_СотрудникиСНужнымРасчетнымПрофилем
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник
	               |ИЗ
	               |	РегистрНакопления.УчетВремени.Обороты(&НачалоПериода, &КонецПериода, , Проект = &Проект) КАК УчетВремениОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.РасчетныеПрофили КАК ЭП_СотрудникиРасчетныеПрофили
	               |		ПО УчетВремениОбороты.Пользователь.ЭП_Сотрудник = ЭП_СотрудникиРасчетныеПрофили.Ссылка
	               |ГДЕ
	               |	УчетВремениОбороты.ДлительностьОборот > 0
	               |	И НЕ УчетВремениОбороты.Пользователь.ЭП_Сотрудник В
	               |				(ВЫБРАТЬ
	               |					ВТ_СотрудникиСНужнымРасчетнымПрофилем.Сотрудник КАК Сотрудник
	               |				ИЗ
	               |					ВТ_СотрудникиСНужнымРасчетнымПрофилем КАК ВТ_СотрудникиСНужнымРасчетнымПрофилем)
	               |	И ЭП_СотрудникиРасчетныеПрофили.Профиль = &ПрофильРасчета
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_ДополнениеУчетомВремени.Сотрудник КАК Сотрудник
	               |ИЗ
	               |	ВТ_ДополнениеУчетомВремени КАК ВТ_ДополнениеУчетомВремени
	               |ГДЕ
	               |	НЕ ВТ_ДополнениеУчетомВремени.Сотрудник = &Сотрудник
	               |	И НЕ ВТ_ДополнениеУчетомВремени.Сотрудник.ДоговорГПХ";
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("ПрофильРасчета", ПрофильРасчета);         
	Запрос.УстановитьПараметр("ПрофильОценивания", ПрофильОценивания); 
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	Запрос.УстановитьПараметр("НачалоПериода", ПериодОценивания);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодОценивания)); 
	Запрос.УстановитьПараметр("Сотрудник", Ответственный.ЭП_Сотрудник);
	
	МассивСотрудников = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");    
	
	Возврат МассивСотрудников
КонецФункции 

&НаСервере
Функция ЗаполнитьТаблицуПоСотруднику()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
	               |	ЭП_ЗагруженностьСотрудниковСрезПоследних.Проект КАК Проект
	               |ПОМЕСТИТЬ ВТ_СписокСотрудниковТекущегоПроекта
	               |ИЗ
	               |	РегистрСведений.ЭП_ЗагруженностьСотрудников.СрезПоследних(
	               |			,
	               |			Проект = &Проект
	               |				И Сотрудник = &Сотрудник) КАК ЭП_ЗагруженностьСотрудниковСрезПоследних
	               |ГДЕ
	               |	НЕ ЭП_ЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	УчетВремениОбороты.Пользователь.ЭП_Сотрудник,
	               |	УчетВремениОбороты.Проект
	               |ИЗ
	               |	РегистрНакопления.УчетВремени.Обороты(
	               |			&ПериодОценивания,
	               |			КОНЕЦПЕРИОДА(&ПериодОценивания, МЕСЯЦ),
	               |			,
	               |			Проект = &Проект
	               |				И Пользователь.ЭП_Сотрудник = &Сотрудник) КАК УчетВремениОбороты
	               |ГДЕ
	               |	УчетВремениОбороты.ДлительностьОборот > 0
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВТ_СписокСотрудниковТекущегоПроекта.Сотрудник КАК Сотрудник,
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль КАК Профиль,
	               |	ВТ_СписокСотрудниковТекущегоПроекта.Проект КАК Проект
	               |ПОМЕСТИТЬ ВТ_СотрудникиСНужнымРасчетнымПрофилем
	               |ИЗ
	               |	ВТ_СписокСотрудниковТекущегоПроекта КАК ВТ_СписокСотрудниковТекущегоПроекта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.РасчетныеПрофили КАК ЭП_СотрудникиРасчетныеПрофили
	               |		ПО ВТ_СписокСотрудниковТекущегоПроекта.Сотрудник = ЭП_СотрудникиРасчетныеПрофили.Ссылка
	               |ГДЕ
	               |	ЭП_СотрудникиРасчетныеПрофили.Профиль = &ПрофильРасчета
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СотрудникиСНужнымРасчетнымПрофилем.Сотрудник КАК Сотрудник,
	               |	&ПрофильОценивания КАК ПрофильОценивания
	               |ПОМЕСТИТЬ ВТ_ПрофилиОцениванияПоСОтрудникам
	               |ИЗ
	               |	ВТ_СотрудникиСНужнымРасчетнымПрофилем КАК ВТ_СотрудникиСНужнымРасчетнымПрофилем
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_ЭффективностьСотрудников.Показатель КАК Показатель,
	               |	ЭП_ЭффективностьСотрудников.Сотрудник КАК Сотрудник,
	               |	ЭП_ЭффективностьСотрудников.ПрофильРасчета КАК ПрофильРасчета,
	               |	ЭП_ЭффективностьСотрудников.Проект КАК Проект,
	               |	ЭП_ЭффективностьСотрудников.Значение КАК Значение,
	               |	ЭП_ЭффективностьСотрудников.Комментарий КАК Комментарий,
	               |	ЭП_ЭффективностьСотрудников.ПериодОценивания КАК ПериодОценивания,
	               |	&ПрофильОценивания КАК ПрофильОценивания
	               |ПОМЕСТИТЬ ВТ_УжеЗаполненныеРанее
	               |ИЗ
	               |	РегистрСведений.ЭП_ЭффективностьСотрудников КАК ЭП_ЭффективностьСотрудников
	               |ГДЕ
	               |	ЭП_ЭффективностьСотрудников.ПериодОценивания = &ПериодОценивания
	               |	И ЭП_ЭффективностьСотрудников.Ответственный = &Ответственный
	               |	И ЭП_ЭффективностьСотрудников.Проект = &Проект
	               |	И ЭП_ЭффективностьСотрудников.ПрофильРасчета = &ПрофильРасчета
	               |	И ЭП_ЭффективностьСотрудников.Сотрудник = &Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭП_ПрофилиОцениванияПоказатели.Показатель КАК Показатель,
	               |	ВТ_ПрофилиОцениванияПоСОтрудникам.Сотрудник КАК Сотрудник,
	               |	ВТ_ПрофилиОцениванияПоСОтрудникам.ПрофильОценивания КАК ПрофильОценивания,
	               |	ЭП_ПоказателиЭффективностиСотрудников.Комментарий КАК ОписаниеПоказателя,
	               |	&ПериодОценивания КАК ПериодОценивания,
	               |	&Проект КАК Проект,
	               |	&ПрофильРасчета КАК ПрофильРасчета,
	               |	ЭП_ПоказателиЭффективностиСотрудников.МаксЗначение КАК МаксЗначение
	               |ПОМЕСТИТЬ ВТ_ВсеПоказатели
	               |ИЗ
	               |	ВТ_ПрофилиОцениванияПоСОтрудникам КАК ВТ_ПрофилиОцениванияПоСОтрудникам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_ПрофилиОценивания.Показатели КАК ЭП_ПрофилиОцениванияПоказатели
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ЭП_ПоказателиЭффективностиСотрудников КАК ЭП_ПоказателиЭффективностиСотрудников
	               |			ПО ЭП_ПрофилиОцениванияПоказатели.Показатель = ЭП_ПоказателиЭффективностиСотрудников.Ссылка
	               |		ПО ВТ_ПрофилиОцениванияПоСОтрудникам.ПрофильОценивания = ЭП_ПрофилиОцениванияПоказатели.Ссылка
	               |ГДЕ
	               |	ЭП_ПрофилиОцениванияПоказатели.Ссылка = &ПрофильОценивания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеПоказатели.Показатель КАК Показатель,
	               |	ВТ_ВсеПоказатели.Сотрудник КАК Сотрудник,
	               |	ВТ_ВсеПоказатели.ПрофильОценивания КАК ПрофильОценивания,
	               |	ВТ_ВсеПоказатели.ОписаниеПоказателя КАК ОписаниеПоказателя,
	               |	ВТ_ВсеПоказатели.ПериодОценивания КАК ПериодОценивания,
	               |	ВТ_ВсеПоказатели.Проект КАК Проект,
	               |	ВТ_ВсеПоказатели.ПрофильРасчета КАК ПрофильРасчета,
	               |	NULL КАК Значение,
	               |	NULL КАК Комментарий,
	               |	ВТ_ВсеПоказатели.МаксЗначение КАК МаксЗначение
	               |ИЗ
	               |	ВТ_ВсеПоказатели КАК ВТ_ВсеПоказатели
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеЗаполненныеРанее КАК ВТ_УжеЗаполненныеРанее
	               |		ПО ВТ_ВсеПоказатели.Показатель = ВТ_УжеЗаполненныеРанее.Показатель
	               |			И ВТ_ВсеПоказатели.Сотрудник = ВТ_УжеЗаполненныеРанее.Сотрудник
	               |			И ВТ_ВсеПоказатели.ПрофильРасчета = ВТ_УжеЗаполненныеРанее.ПрофильРасчета
	               |			И ВТ_ВсеПоказатели.Проект = ВТ_УжеЗаполненныеРанее.Проект
	               |ГДЕ
	               |	ВТ_УжеЗаполненныеРанее.Сотрудник ЕСТЬ NULL
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_УжеЗаполненныеРанее.Показатель,
	               |	ВТ_УжеЗаполненныеРанее.Сотрудник,
	               |	ВТ_УжеЗаполненныеРанее.ПрофильОценивания,
	               |	ЭП_ПоказателиЭффективностиСотрудников.Комментарий,
	               |	ВТ_УжеЗаполненныеРанее.ПериодОценивания,
	               |	ВТ_УжеЗаполненныеРанее.Проект,
	               |	ВТ_УжеЗаполненныеРанее.ПрофильРасчета,
	               |	ВТ_УжеЗаполненныеРанее.Значение,
	               |	ВТ_УжеЗаполненныеРанее.Комментарий,
	               |	ЭП_ПоказателиЭффективностиСотрудников.МаксЗначение
	               |ИЗ
	               |	ВТ_УжеЗаполненныеРанее КАК ВТ_УжеЗаполненныеРанее
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ЭП_ПоказателиЭффективностиСотрудников КАК ЭП_ПоказателиЭффективностиСотрудников
	               |		ПО ВТ_УжеЗаполненныеРанее.Показатель = ЭП_ПоказателиЭффективностиСотрудников.Ссылка"; 
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("ПрофильРасчета", РасчетныйПрофиль);
	Запрос.УстановитьПараметр("ПериодОценивания", ПериодОценивания); 
	Запрос.УстановитьПараметр("ПрофильОценивания", ПрофильОценивания);
	Запрос.УстановитьПараметр("Ответственный", Ответственный); 
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	ТаблицаОценивания.Очистить();
	ТаблицаОценивания.Загрузить(Выгрузка);
	
КонецФункции

&НаКлиенте
Процедура ТаблицаОцениванияПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВремяПоУчетуВремени(Команда)
	ЗаполнитьВремяПоУчетуВремениНаСервере(); 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВремяПоУчетуВремениНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Пользователи.Ссылка КАК Ссылка,
	               |	&Проект КАК Проект
	               |ПОМЕСТИТЬ ВТ_Пользователь
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	Пользователи.ЭП_Сотрудник = &Сотрудник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УчетВремениОбороты.Пользователь КАК Пользователь,
	               |	УчетВремениОбороты.Проект КАК Проект,
	               |	УчетВремениОбороты.ДлительностьОборот / 3600 КАК Длительность
	               |ИЗ
	               |	РегистрНакопления.УчетВремени.Обороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			,
	               |			(Пользователь, Проект) В
	               |				(ВЫБРАТЬ
	               |					ВТ_Пользователь.Ссылка КАК Пользователь,
	               |					ВТ_Пользователь.Проект КАК Проект
	               |				ИЗ
	               |					ВТ_Пользователь КАК ВТ_Пользователь)) КАК УчетВремениОбороты";
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("НачалоПериода", ПериодОценивания);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодОценивания));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПоказательВремени = Константы.ЭП_ПоказательПоУмолчанию.Получить();
	Пока Выборка.Следующий() Цикл
		
		ПараметрыОбхода = Новый Структура;
		ПараметрыОбхода.Вставить("Показатель", ПоказательВремени);
		НайденныеСтроки = ТаблицаОценивания.НайтиСтроки(ПараметрыОбхода);		
		Если НайденныеСтроки.Количество() > 0 Тогда
		
			Для каждого СтрокаТЗ Из НайденныеСтроки Цикл
			
				СтрокаТЗ.Значение = Выборка.Длительность;
			
			КонецЦикла;			
		
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОцениванияЗначениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаОценивания.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекущиеДанные.Значение > ТекущиеДанные.МаксЗначение Тогда
		ТекущиеДанные.Значение = ТекущиеДанные.МаксЗначение;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТабельУчетаВремени(Команда)
	
	Если Не Проект.Пустая() Тогда
		
		Если Не ЗначениеЗаполнено(Ответственный) Тогда
			Ответственный = ПользователиКлиент.ТекущийПользователь();
		КонецЕсли;
       
		МассивПроектов = ПолучитьМассивПроектов(Ответственный);
	
		ПараметрыФормы = Новый Структура("МесяцРегистрации, Проект, МассивПроектов", ПериодОценивания, Проект, МассивПроектов); 
		ОткрытьФорму("Обработка.ЭП_РедактированиеТабеляУчетаВремениПоСотрудникам.Форма.Форма", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);  
		
	Иначе
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран проект";
		Сообщение.Поле = "Проект";
		Сообщение.Сообщить();
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнениеДанныхПриСоздании();
	
КонецПроцедуры

&НаСервере
Функция ПроектыЗаПериод(ПериодОценивания)
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	ЭП_УтвержденныеПроектыСрезПоследних.Проект КАК Проект,
	              |	ЭП_УтвержденныеПроектыСрезПоследних.Утвержден КАК Утвержден
	              |ИЗ
	              |	РегистрСведений.ЭП_УтвержденныеПроекты.СрезПоследних(
	              |			,
	              |			Проект = &Проект
	              |				И Месяц = &Месяц) КАК ЭП_УтвержденныеПроектыСрезПоследних
	              |ГДЕ
	              |	ЭП_УтвержденныеПроектыСрезПоследних.Утвержден";
	Запрос.УстановитьПараметр("Месяц", ПериодОценивания);
	Запрос.УстановитьПараметр("Проект", Проект);
	Результат = Запрос.Выполнить();	
	МассивПроектов  = Результат.Выгрузить().ВыгрузитьКолонку("Проект");
	Возврат МассивПроектов;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьВводПоказателей" Тогда
		ЗаполнениеДанныхПриСоздании();
		ПроверкаПроектаНаУтверждение();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеДанныхПриСоздании()
	
	Элементы.ТабельУчетаВремени.Видимость = Ложь;	
	ПериодОценивания = ПолучитьТекущийОткрытыйМесяц();
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Элементы.Проект.СписокВыбора.Очистить();       
	МассивПроектов = ПолучитьМассивПроектов(Ответственный);
	Элементы.Проект.СписокВыбора.ЗагрузитьЗначения(МассивПроектов);  
	Если МассивПроектов.Количество() = 1 Тогда
		
		Проект = МассивПроектов[0];		
		Элементы.РасчетныйПрофиль.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивРасчетныхПрофилей(Ответственный, Проект));
		Массив = ПроектыЗаПериод(ПериодОценивания);
		
		Если Массив.Количество() = 0 Тогда
			Элементы.ТабельУчетаВремени.Видимость = Истина;
			Элементы.ТаблицаОценивания.Доступность = Ложь;
		Иначе
			Элементы.ТабельУчетаВремени.Видимость = Ложь;
			Элементы.ТаблицаОценивания.Доступность = Истина;
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры 

&НаКлиенте
Процедура ПроверкаПроектаНаУтверждение()
	
	МассивПроектов = ПроектыЗаПериод(ПериодОценивания);
	Если МассивПроектов.Количество() = 0 Тогда
		Элементы.ТабельУчетаВремени.Видимость = Истина;
		Элементы.ТаблицаОценивания.Доступность = Ложь;
	Иначе
		Элементы.ТабельУчетаВремени.Видимость = Ложь;
		Элементы.ТаблицаОценивания.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры 



