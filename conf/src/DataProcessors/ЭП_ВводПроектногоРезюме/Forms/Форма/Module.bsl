#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("Сотрудник", Сотрудник);
КонецПроцедуры

 &НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьПоСотруднику();
	УстановитьВидимость();
	
КонецПроцедуры


#КонецОбласти

#Область СобытияЭлементовШапки

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	ЗаполнитьПоСотруднику();
КонецПроцедуры

&НаКлиенте
Процедура ФайлРезюмеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	Если РаботаСФайламиСлужебныйКлиент.РасширениеРаботыСФайламиПодключено() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораФайла", ЭтотОбъект);
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	Иначе
		Обработчик = Новый ОписаниеОповещения("ПослеПомещенияФайла", ЭтотОбъект);
		НачатьПомещениеФайла(Обработчик, , ДиалогВыбораФайла, , УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФайлРезюме = ВыбранныеФайлы[0];
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПомещенияФайла(Помещен, Адрес, ВыбранноеИмяФайла, ДопПараметры) Экспорт
	
	Если Не Помещен Тогда
		Возврат;
	КонецЕсли; 
	
	ФайлРезюме = ВыбранноеИмяФайла;
	АдресФайла = Адрес;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьФайлРезюмеПриИзменении(Элемент)
	
	Если ОбновитьФайлРезюме Тогда
		УстановитьДатуСледующегоРезюме = Истина;
		ЗаполнитьДатуРезюме();
	КонецЕсли;
	
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДатуСледующегоРезюмеПриИзменении(Элемент)
	ЗаполнитьДатуРезюме();
	УстановитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура КомандаОткрытьФайл(Команда)
	
	Если Не ЗначениеЗаполнено(ТекущийФайлРезюме) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(ТекущийФайлРезюме,	Неопределено, УникальныйИдентификатор);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	ЗаписатьИзменения(Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	ЗаписатьИзменения(Ложь);
КонецПроцедуры

#КонецОбласти

#Область Служебные

&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.ФайлРезюме.Доступность = ОбновитьФайлРезюме;
	Элементы.ДатаРезюме.Доступность = УстановитьДатуСледующегоРезюме;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСотруднику() 
	
	ЗаполнитьФайлРезюме();
	ЗаполнитьДатуРезюме();
	ОповеститьОбИзменении(ТекущийФайлРезюме);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФайлРезюме() 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Файлы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Файлы КАК Файлы
	|ГДЕ
	|	Файлы.ВладелецФайла.Ссылка = &Сотрудник
	|	И Файлы.ЭП_ВидФайла.Ссылка = &ВидФайла
	|
	|УПОРЯДОЧИТЬ ПО
	|	Файлы.ДатаСоздания УБЫВ";
	
 	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ВидФайла", Справочники.ЭП_ВидыФайлов.ПроектноеРезюме);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ТекущийФайлРезюме = Выборка.Ссылка;
	Иначе
		ТекущийФайлРезюме = Неопределено;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуРезюме() 
	
	Если УстановитьДатуСледующегоРезюме Тогда
		ДатаРезюме = ДобавитьМесяц(ТекущаяДатаСеанса(), 6);
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_СобытияСотрудников.ДатаСобытия КАК ДатаСобытия
	|ИЗ
	|	РегистрСведений.ЭП_СобытияСотрудников КАК ЭП_СобытияСотрудников
	|ГДЕ
	|	ЭП_СобытияСотрудников.Сотрудник = &Сотрудник
	|	И ЭП_СобытияСотрудников.ВидСобытия = &ВидСобытия";
	
 	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("ВидСобытия", Справочники.ЭП_ВидыСобытийСотрудников.ПроектноеРезюме);

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ДатаРезюме = Выборка.ДатаСобытия;
	Иначе
		ДатаРезюме = Дата(1,1,1);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьИзменения(Закрыть = Ложь)

	Если Не ПроверитьЗаполнениеРеквизитов() Тогда
		Возврат;
	КонецЕсли; 
	
	ЗаписатьФайл();
	ЗаписатьСобытие();
	
	// Обновить данные формы
	ОбновитьФайлРезюме = Ложь;
	УстановитьДатуСледующегоРезюме = Ложь;

	ЗаполнитьПоСотруднику();
	УстановитьВидимость();
	
	Если Закрыть Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран сотрудник!",, "Сотрудник",,Отказ);
	КонецЕсли;
	
	Если Не ОбновитьФайлРезюме
		И Не УстановитьДатуСледующегоРезюме Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрано действие!",, "Сотрудник",,Отказ);
	КонецЕсли;

	Если ОбновитьФайлРезюме
		И Не ЗначениеЗаполнено(ФайлРезюме) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан файл резюме!",, "ФайлРезюме",,Отказ);
	КонецЕсли;
	
	Если УстановитьДатуСледующегоРезюме Тогда
		Если Не ЗначениеЗаполнено(ДатаРезюме) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена дата следующего резюме!",, "ДатаРезюме",,Отказ);
		ИначеЕсли ДатаРезюме < НачалоДня(ТекущаяДата()) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата следующего резюме меньше текущей!",, "ДатаРезюме",,Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Не Отказ;

КонецФункции

&НаКлиенте
Процедура ЗаписатьФайл()
	
	ОбработчикРезультата = Новый ОписаниеОповещения("ЗаписатьФайлПродолжение", ЭтотОбъект);
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("ПолноеИмяФайла", ФайлРезюме);
	ПараметрыВыполнения.Вставить("ВладелецФайла", Сотрудник);
	ПараметрыВыполнения.Вставить("ФормаВладелец", ЭтотОбъект);
	ПараметрыВыполнения.Вставить("НеОткрыватьКарточкуПослеСозданияИзФайла", Истина);
	ПараметрыВыполнения.Вставить("ОбработчикРезультата", ОбработчикРезультата); 

	Если РаботаСФайламиСлужебныйКлиент.РасширениеРаботыСФайламиПодключено() Тогда
		РаботаСФайламиСлужебныйКлиент.ДобавитьИзФайловойСистемыСРасширением(ПараметрыВыполнения);
	Иначе
		РаботаСФайламиСлужебныйКлиент.ДобавитьИзФайловойСистемыБезРасширенияПослеЗагрузкиФайла(Истина, АдресФайла, ФайлРезюме, ПараметрыВыполнения);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗаписатьФайлПродолжение(Результат, ДопПараметры) Экспорт

	Если Результат.ФайлДобавлен Тогда
		ЗаписатьВидФайла(Результат.ФайлСсылка);
	Иначе
		ВызватьИсключение(Результат.Результат.ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВидФайла(ФайлСсылка)
	
	ФайлОбъект = ФайлСсылка.ПолучитьОбъект();
	ФайлОбъект.Наименование = "Проектное резюме " + ФамилияИО(Сотрудник.Наименование);
	ФайлОбъект.ЭП_ВидФайла = Справочники.ЭП_ВидыФайлов.ПроектноеРезюме;
	ФайлОбъект.ОбменДанными.Загрузка = Истина;
	ФайлОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСобытие()
	
	Если Не УстановитьДатуСледующегоРезюме Тогда
		Возврат;
	КонецЕсли;
	
	РегЗапись = РегистрыСведений.ЭП_СобытияСотрудников.СоздатьМенеджерЗаписи();
	
	РегЗапись.Сотрудник = Сотрудник;
	РегЗапись.ВидСобытия = Справочники.ЭП_ВидыСобытийСотрудников.ПроектноеРезюме;
	РегЗапись.ДатаСобытия = ДатаРезюме;
	
	РегЗапись.Записать();
	
КонецПроцедуры

&НаСервере
Функция ФамилияИО(Знач ФамилияИмяОтчество)
	
	Если ТипЗнч(ФамилияИмяОтчество) = Тип("Строка") Тогда
		ФамилияИмяОтчество = ФизическиеЛицаКлиентСервер.ЧастиИмени(ФамилияИмяОтчество);
	КонецЕсли;
	
	Фамилия = ФамилияИмяОтчество.Фамилия;
	Имя = ФамилияИмяОтчество.Имя;
	Отчество = ФамилияИмяОтчество.Отчество;
	
	Если ПустаяСтрока(Имя) Тогда
		Возврат Фамилия;
	КонецЕсли;
	
	Если ПустаяСтрока(Отчество) Тогда
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1%2", Фамилия, Лев(Имя, 1));
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1%2%3", Фамилия, Лев(Имя, 1), Лев(Отчество, 1));
	
КонецФункции



#КонецОбласти

