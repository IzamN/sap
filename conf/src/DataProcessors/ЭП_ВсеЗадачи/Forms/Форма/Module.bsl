
&НаСервере
Процедура УстановитьОтборыВСписках(ПостфиксСписка)
	
	ИмяСписка = "Список" + ПостфиксСписка;
	
	ЭтотОбъект[ИмяСписка].Отбор.Элементы.Очистить();
	
	Если ЗначениеЗаполнено(ПроектОтбор) Тогда
		
		ЭлементОтбора = ЭтотОбъект[ИмяСписка].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект");
		ЭлементОтбора. ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ПроектОтбор;	        
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтатусЗадачиОтбор) Тогда
		
		ЭлементОтбора = ЭтотОбъект[ИмяСписка].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭП_СтатусЗадачи");
		ЭлементОтбора. ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = СтатусЗадачиОтбор;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИсполнительОтбор) Тогда
		
		ЭлементОтбора = ЭтотОбъект[ИмяСписка].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
		ЭлементОтбора. ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ИсполнительОтбор;	
		
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ВидЗадачиОтбор) Тогда
		
		ЭлементОтбора = ЭтотОбъект[ИмяСписка].Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭП_ВидЗадачи");
		ЭлементОтбора. ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = ВидЗадачиОтбор;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЗадач,"ТекущаяДата", ТекущаяДатаСеанса());
	ПроектОтбор = ПараметрыСеанса.ТекущийПроект; 
	УстановитьОтборыВСписках("Задач");
КонецПроцедуры

&НаКлиенте
Процедура ПроектОтборПриИзменении(Элемент)
	УстановитьОтборыВСписках("Задач");
КонецПроцедуры

&НаКлиенте
Процедура ВидЗадачиОтборПриИзменении(Элемент)
	УстановитьОтборыВСписках("Задач");
КонецПроцедуры

&НаКлиенте
Процедура СтатусЗадачиОтборПриИзменении(Элемент)
	УстановитьОтборыВСписках("Задач");
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОтборПриИзменении(Элемент)
	УстановитьОтборыВСписках("Задач");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУсловноеОформлениеМоиЗадачи(Команда) 
	
	ОткрытьФорму("Обработка.ЭП_ВсеЗадачи.Форма.УсловноеОформлениеМоиЗадачи",,ЭтаФорма,,,,Новый ОписаниеОповещения("ПослеЗакрытияФормы",ЭтаФорма),РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормы(ПараметрЗакрытия, ДополнительныеПараметры) Экспорт   
	
	Если НЕ ПараметрЗакрытия = Неопределено Тогда
		
		Если ЗначениеЗаполнено(ПараметрЗакрытия.БулевоПросрочено) Тогда 
			
			БулевоПросрочено = ПараметрЗакрытия.БулевоПросрочено;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПараметрЗакрытия.ДнейДоЗавершения) Тогда
			
			ДнейДоЗавершения = ПараметрЗакрытия.ДнейДоЗавершения;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПараметрЗакрытия.БулевоДнейДоЗавершения) Тогда
			
			БулевоДнейДоЗавершения = ПараметрЗакрытия.БулевоДнейДоЗавершения;
			
		КонецЕсли;
		
		УстановитьУсловноеОформление();
		
	КонецЕсли;
	
КонецПроцедуры              

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	СписокУсловноеОформление = СписокЗадач.КомпоновщикНастроек.Настройки.УсловноеОформление;
	СписокУсловноеОформление.Элементы.Очистить();
	
	Если БулевоПросрочено = Истина Тогда
		
		Элемент = СписокУсловноеОформление.Элементы.Добавить();  
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КрайняяДатаОкончания");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
		ОтборЭлемента.ПравоеЗначение = НачалоДня(ТекущаяДатаСеанса());
		
		ОтборЭлемента.Использование =  Истина;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.ТусклоРозовый);    
		
	КонецЕсли;
	
	Если БулевоДнейДоЗавершения = Истина  Тогда   
		
		Элемент = СписокУсловноеОформление.Элементы.Добавить();
		
		ГруппаОтбора = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		Отбор = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.ЛевоеЗначение = ДнейДоЗавершения; 
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		Отбор.ПравоеЗначение = Новый ПолеКомпоновкиДанных("ЭП_ОсталосьДней");
		
		
		Отбор = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Отбор.Использование = Истина;
		Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭП_ОсталосьДней");
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
		Отбор.ПравоеЗначение = 0;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Лимонный);
		
	КонецЕсли;
	
КонецПроцедуры
