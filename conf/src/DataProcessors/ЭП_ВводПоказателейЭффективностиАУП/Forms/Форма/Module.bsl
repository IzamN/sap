
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Проект = Справочники.Проекты.АУП;		
	
	// Период оценивания
	ПериодОценивания = НачалоМесяца(ТекущаяДатаСеанса());
	Месяц = Формат(ПериодОценивания, "ДФ = ""ММММ гггг""");
		
	// Ответственный
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
    //ЗаполнитьТаблицуПоСотруднику();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьСписокВыбораМесяца(Год(ПериодОценивания));
	Элементы.ПрофильРасчета.СписокВыбора.ЗагрузитьЗначения(ПолучитьМассивВыбора(Ответственный));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Отказ = Истина; 
		Если ЗавершениеРаботы Тогда
			ТекстПредупреждения = "Изменения не сохранены и будут потеряны!
			|Продолжить?";
			Возврат;
		Иначе
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодтвержденияЗакрытия", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателеей?", РежимДиалогаВопрос.ДаНетОтмена);
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодтвержденияЗакрытия(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьДанные();
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказательЭффективностиПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(БуферныйПоказатель) Тогда
	
		БуферныйПоказатель = ПоказательЭффективности;		
	
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииПоказателяЭффективности", ЭтотОбъект, ТекущийЭлемент);

	Если Модифицированность Тогда
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателеей?", РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофильРасчетаПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(БуферныйПрофиль) Тогда
	
		БуферныйПрофиль = ПрофильРасчета;		
	
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииРасчетногоПрофиля", ЭтотОбъект, ТекущийЭлемент);

	Если Модифицированность Тогда
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателеей?", РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивВыбора(Ответственный)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета КАК ПрофильРасчета
	               |ИЗ
	               |	РегистрСведений.ЭП_ОтветственныеЗаОценкуЭффективностиАУП КАК ЭП_ОтветственныеЗаОценкуЭффективностиАУП
	               |ГДЕ
	               |	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Ответственный = &Ответственный
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПрофильРасчета
	               |АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Ответственный", Ответственный); 
	Возврат	Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПрофильРасчета");
		

КонецФункции


#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ЗаписатьДанные();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные()
	ЗаписатьТаблицуПоСотруднику();
	Модифицированность = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПрошломуМесяцу(Команда)

	ЗаполнитьТаблицуПоСотрудникуПоПрошломуМесяцу();

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыВыбораМесяца

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	ПриИзмененииМесяца();
КонецПроцедуры

&НаКлиенте
Процедура МесяцДополнительныйВыбор (Результат, Параметры) Экспорт
	
	Если Результат = Неопределено ТОгда
	    Возврат;
	КонецЕсли;
	
    Месяц = Результат.Значение;
	ПриИзмененииМесяца();

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМесяца()
	
    Если СтрДлина(Месяц) = 4 Тогда // Выбран год, показать выбор месяца 
        СформироватьСписокВыбораМесяца(Число(Месяц));
    	Оповещение = Новый ОписаниеОповещения("МесяцДополнительныйВыбор", ЭтаФорма);
    	ЭтаФорма.ПоказатьВыборИзМеню(Оповещение, Элементы.Месяц.СписокВыбора, Элементы.Месяц);
		Возврат;
	КонецЕсли;
	
	// Выбран месяц
	ПизицияМесяца = Найти("янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек",Нрег(Лев(Месяц,3))); //1,5,9...
	Если ПизицияМесяца = 0 Тогда
		// Что-то недопустимое, очистить период
		Месяц = "";
		ПериодОценивания = Дата(1, 1, 1);
	Иначе
		НомерМесяца = (ПизицияМесяца - 1)/4 + 1;
		ГодЧислом = Число(Прав(Месяц, 4));
		ПериодОценивания = Дата(ГодЧислом, НомерМесяца, 1);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(БуферныйПериод) Тогда
	
		БуферныйПериод = ПериодОценивания;		
	
	КонецЕсли;
	
	ПриИзмененииНастроекВвода("Месяц");
		
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСписокВыбораМесяца(Год)
    
    Элементы.Месяц.СписокВыбора.Очистить();
	
	Элементы.Месяц.СписокВыбора.Добавить(Формат(Год-1, "ЧГ=0")); // Предыдущий год
	Для ТекМесяц = 1 По 12  Цикл
        ТекДата = Дата(Год, ТекМесяц, 1);
        Значение = Формат(ТекДата, "ДФ = ""ММММ гггг""");
        Элементы.Месяц.СписокВыбора.Добавить(Значение);    
    КонецЦикла; 
    Элементы.Месяц.СписокВыбора.Добавить(Формат(Год+1, "ЧГ=0")); // Следующий год

КонецПроцедуры     

#КонецОбласти

#Область ЗаполнениеСписковВыбора

&НаКлиенте
Процедура ПриИзмененииНастроекВвода(ТекущийЭлемент = Неопределено)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриИзмененииНастроекВводаПродолжение", ЭтотОбъект, ТекущийЭлемент);

	Если Модифицированность Тогда
		ПоказатьВопрос(ОписаниеОповещения, "Сохранить изменения показателеей?", РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНастроекВводаПродолжение(Результат, ТекущийЭлемент) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да И Модифицированность Тогда
		
		ЗаписатьДанные();

	КонецЕсли;
	
	ЗаполнитьТаблицуПоСотруднику();
	СформироватьСписокВыбораМесяца(Год(ПериодОценивания));
	БуферныйПериод = ПериодОценивания;
КонецПроцедуры

#КонецОбласти

#Область ТаблицаПоСотруднику

&НаКлиенте
Процедура ТаблицаПоСотрудникуПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаПоСотруднику.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ОписаниеПоказателя = "";
	Иначе
		ОписаниеПоказателя = ПолучитьЗначениеРеквизита(ПоказательЭффективности, "Комментарий");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПоСотрудникуЗначениеПриИзменении(Элемент, Отказ)

	ТекущиеДанные = Элементы.ТаблицаПоСотруднику.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекущиеДанные.Значение > ТекущиеДанные.МаксЗначение Тогда
		ТекущиеДанные.Значение = ТекущиеДанные.МаксЗначение;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоСотруднику()
	
	Если ЗначениеЗаполнено(ПоказательЭффективности) И НЕ ПроверитьЗаполнение() Тогда
	
		Возврат;		
	
	КонецЕсли;
	
	Запрос = ЗапросПоказателейСотрудников(ПериодОценивания);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	ТаблицаПоСотруднику.Загрузить(Выгрузка);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоСотрудникуПоПрошломуМесяцу();
	
	Если НЕ ПроверитьЗаполнение() Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Запрос = ЗапросПоказателейСотрудниковПоПрошломуМесяцу(ДобавитьМесяц(ПериодОценивания, -1));	
	ВыборкаПоказателей = Запрос.Выполнить().Выбрать();
	ПризнакНаличияНеЗаполненных = Ложь;
	Для Каждого СтрокаТаблицы Из ТаблицаПоСотруднику Цикл
		
		Отбор = Новый Структура("Сотрудник", СтрокаТаблицы.Сотрудник); 
		
		Если ВыборкаПоказателей.НайтиСледующий(Отбор) Тогда 
			СтрокаТаблицы.Значение = ВыборкаПоказателей.Значение;
			СтрокаТаблицы.Комментарий = ВыборкаПоказателей.Комментарий;
			ВыборкаПоказателей.Сбросить();
		Иначе 
			Если ВыборкаПоказателей.Значение = 0 Тогда
				ПризнакНаличияНеЗаполненных = Истина;				
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПризнакНаличияНеЗаполненных Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В прошлом периоде присутствуют сотрудники с пустым значением выбранного показателя.";        
		Сообщение.Сообщить();		
	
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ЗапросПоказателейСотрудников(Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета КАК ПрофильРасчета,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель КАК Показатель,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель.ТипЗначения КАК ТипЗначения,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель.МинЗначение КАК МинЗначение,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель.МаксЗначение КАК МаксЗначение
	|ПОМЕСТИТЬ втОтветственныеЗаОценкуЭффективностиАУП
	|ИЗ
	|	РегистрСведений.ЭП_ОтветственныеЗаОценкуЭффективностиАУП КАК ЭП_ОтветственныеЗаОценкуЭффективностиАУП
	|ГДЕ
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Ответственный = &Ответственный
	|	И ЭП_ОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета = &ПрофильРасчета
	|	И ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель = &Показатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПрофильРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭП_СотрудникиРасчетныеПрофили.Ссылка КАК Сотрудник,
	|	ЭП_СотрудникиРасчетныеПрофили.Ссылка.Департамент КАК Департамент,
	|	втОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета КАК ПрофильРасчета,
	|	втОтветственныеЗаОценкуЭффективностиАУП.Показатель КАК Показатель,
	|	втОтветственныеЗаОценкуЭффективностиАУП.ТипЗначения КАК ТипЗначения,
	|	втОтветственныеЗаОценкуЭффективностиАУП.МинЗначение КАК МинЗначение,
	|	втОтветственныеЗаОценкуЭффективностиАУП.МаксЗначение КАК МаксЗначение
	|ПОМЕСТИТЬ втПрофилиРасчетаСотрудников
	|ИЗ
	|	втОтветственныеЗаОценкуЭффективностиАУП КАК втОтветственныеЗаОценкуЭффективностиАУП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.РасчетныеПрофили КАК ЭП_СотрудникиРасчетныеПрофили
	|		ПО втОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета = ЭП_СотрудникиРасчетныеПрофили.Профиль
	|ГДЕ
	|	НЕ ЭП_СотрудникиРасчетныеПрофили.Ссылка = &СсылкаСотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПрофильРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПрофилиРасчетаСотрудников.Сотрудник КАК Сотрудник,
	|	втПрофилиРасчетаСотрудников.Департамент КАК Департамент,
	|	втПрофилиРасчетаСотрудников.ПрофильРасчета КАК ПрофильРасчета,
	|	втПрофилиРасчетаСотрудников.Показатель КАК Показатель,
	|	втПрофилиРасчетаСотрудников.ТипЗначения КАК ТипЗначения,
	|	втПрофилиРасчетаСотрудников.МинЗначение КАК МинЗначение,
	|	втПрофилиРасчетаСотрудников.МаксЗначение КАК МаксЗначение,
	|	ЭП_ЭффективностьСотрудников.Значение КАК Значение,
	|	ЭП_ЭффективностьСотрудников.Комментарий КАК Комментарий
	|ИЗ
	|	втПрофилиРасчетаСотрудников КАК втПрофилиРасчетаСотрудников
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ЭффективностьСотрудников КАК ЭП_ЭффективностьСотрудников
	|		ПО втПрофилиРасчетаСотрудников.Показатель = ЭП_ЭффективностьСотрудников.Показатель
	|			И втПрофилиРасчетаСотрудников.Сотрудник = ЭП_ЭффективностьСотрудников.Сотрудник
	|			И (ЭП_ЭффективностьСотрудников.ПериодОценивания = &ПериодОценивания)
	|			И (ЭП_ЭффективностьСотрудников.Ответственный = &Ответственный)
	|			И (ЭП_ЭффективностьСотрудников.Проект = &Проект)
	|			И втПрофилиРасчетаСотрудников.ПрофильРасчета = ЭП_ЭффективностьСотрудников.ПрофильРасчета
	|ГДЕ
	|	втПрофилиРасчетаСотрудников.Сотрудник.СтатусСотрудника В(&СтатусСотрудникаРаботает)";
	
	СтатусСотрудникаРаботает = Новый Массив;
	СтатусСотрудникаРаботает.Добавить(Перечисления.ЭП_СтатусыСотрудников.Работает);
	СтатусСотрудникаРаботает.Добавить(Перечисления.ЭП_СтатусыСотрудников.ИспытательныйСрок);
	Запрос.УстановитьПараметр("ПериодОценивания",			Период);
	Запрос.УстановитьПараметр("Ответственный",				Ответственный);
	Запрос.УстановитьПараметр("Проект",						Проект);
	Запрос.УстановитьПараметр("СтатусСотрудникаРаботает",	СтатусСотрудникаРаботает);
	Запрос.УстановитьПараметр("ПрофильРасчета",				ПрофильРасчета);
	Запрос.УстановитьПараметр("Показатель",					ПоказательЭффективности);
	СотрудникТекущий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный, "ЭП_Сотрудник");
	Запрос.УстановитьПараметр("СсылкаСотрудник",			СотрудникТекущий);
	
	Возврат Запрос;

КонецФункции
  
&НаСервере
Функция ЗапросПоказателейСотрудниковПоПрошломуМесяцу(Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник КАК Сотрудник,
	|	ТаблицаСотрудников.Значение КАК Значение
	|ПОМЕСТИТЬ ВТ_СотрудникиДляОтбора
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников
	|ГДЕ
	|	ТаблицаСотрудников.Значение = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета КАК ПрофильРасчета,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель КАК Показатель,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель.ТипЗначения КАК ТипЗначения,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель.МинЗначение КАК МинЗначение,
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель.МаксЗначение КАК МаксЗначение
	|ПОМЕСТИТЬ втОтветственныеЗаОценкуЭффективностиАУП
	|ИЗ
	|	РегистрСведений.ЭП_ОтветственныеЗаОценкуЭффективностиАУП КАК ЭП_ОтветственныеЗаОценкуЭффективностиАУП
	|ГДЕ
	|	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Ответственный = &Ответственный
	|	И ЭП_ОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета = &ПрофильРасчета
	|	И ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель = &Показатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПрофильРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭП_СотрудникиРасчетныеПрофили.Ссылка КАК Сотрудник,
	|	ЭП_СотрудникиРасчетныеПрофили.Ссылка.Департамент КАК Департамент,
	|	втОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета КАК ПрофильРасчета,
	|	втОтветственныеЗаОценкуЭффективностиАУП.Показатель КАК Показатель,
	|	втОтветственныеЗаОценкуЭффективностиАУП.ТипЗначения КАК ТипЗначения,
	|	втОтветственныеЗаОценкуЭффективностиАУП.МинЗначение КАК МинЗначение,
	|	втОтветственныеЗаОценкуЭффективностиАУП.МаксЗначение КАК МаксЗначение
	|ПОМЕСТИТЬ втПрофилиРасчетаСотрудников
	|ИЗ
	|	втОтветственныеЗаОценкуЭффективностиАУП КАК втОтветственныеЗаОценкуЭффективностиАУП
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.РасчетныеПрофили КАК ЭП_СотрудникиРасчетныеПрофили
	|		ПО втОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета = ЭП_СотрудникиРасчетныеПрофили.Профиль
	|ГДЕ
	|	ЭП_СотрудникиРасчетныеПрофили.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_СотрудникиДляОтбора.Сотрудник КАК Сотрудник
	|			ИЗ
	|				ВТ_СотрудникиДляОтбора КАК ВТ_СотрудникиДляОтбора)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ПрофильРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПрофилиРасчетаСотрудников.Сотрудник КАК Сотрудник,
	|	втПрофилиРасчетаСотрудников.Департамент КАК Департамент,
	|	втПрофилиРасчетаСотрудников.ПрофильРасчета КАК ПрофильРасчета,
	|	втПрофилиРасчетаСотрудников.Показатель КАК Показатель,
	|	втПрофилиРасчетаСотрудников.ТипЗначения КАК ТипЗначения,
	|	втПрофилиРасчетаСотрудников.МинЗначение КАК МинЗначение,
	|	втПрофилиРасчетаСотрудников.МаксЗначение КАК МаксЗначение,
	|	ЕСТЬNULL(ЭП_ЭффективностьСотрудников.Значение, 0) КАК Значение,
	|	ЕСТЬNULL(ЭП_ЭффективностьСотрудников.Комментарий, """") КАК Комментарий
	|ИЗ
	|	втПрофилиРасчетаСотрудников КАК втПрофилиРасчетаСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ЭффективностьСотрудников КАК ЭП_ЭффективностьСотрудников
	|		ПО втПрофилиРасчетаСотрудников.Показатель = ЭП_ЭффективностьСотрудников.Показатель
	|			И втПрофилиРасчетаСотрудников.Сотрудник = ЭП_ЭффективностьСотрудников.Сотрудник
	|			И (ЭП_ЭффективностьСотрудников.ПериодОценивания = &ПериодОценивания)
	|			И (ЭП_ЭффективностьСотрудников.Ответственный = &Ответственный)
	|			И (ЭП_ЭффективностьСотрудников.Проект = &Проект)
	|			И втПрофилиРасчетаСотрудников.ПрофильРасчета = ЭП_ЭффективностьСотрудников.ПрофильРасчета
	|ГДЕ
	|	втПрофилиРасчетаСотрудников.Сотрудник.СтатусСотрудника В(&СтатусСотрудникаРаботает)";
	
	СтатусСотрудникаРаботает = Новый Массив;
	СтатусСотрудникаРаботает.Добавить(Перечисления.ЭП_СтатусыСотрудников.Работает);
	СтатусСотрудникаРаботает.Добавить(Перечисления.ЭП_СтатусыСотрудников.ИспытательныйСрок);
	Запрос.УстановитьПараметр("ПериодОценивания",			Период);
	Запрос.УстановитьПараметр("Ответственный",				Ответственный);
	Запрос.УстановитьПараметр("Проект",						Проект);
	Запрос.УстановитьПараметр("СтатусСотрудникаРаботает",	СтатусСотрудникаРаботает);
	Запрос.УстановитьПараметр("ПрофильРасчета",				ПрофильРасчета);
	Запрос.УстановитьПараметр("Показатель",					ПоказательЭффективности);
	Запрос.УстановитьПараметр("ТаблицаСотрудников",			ТаблицаПоСотруднику.Выгрузить(,"Сотрудник, Значение"));

	Возврат Запрос;

КонецФункции

&НаСервере
Процедура ЗаписатьТаблицуПоСотруднику()
	
	Для Каждого СтрокаТаблицы Из ТаблицаПоСотруднику Цикл
		Если СтрокаТаблицы.Значение = 0 Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		ЗаписатьПоказательЭффективности(СтрокаТаблицы, Проект, ПериодОценивания); 
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Служебные

&НаСервере
Функция ПолучитьЗначениеРеквизита(ВладелецРеквизита, ИмяРеквизита)
	
	СтруктураРеквизита = Новый Структура(ИмяРеквизита);
	ЗаполнитьЗначенияСвойств(СтруктураРеквизита, ВладелецРеквизита);
	Возврат СтруктураРеквизита[ИмяРеквизита];
	
КонецФункции

&НаСервере
Процедура ЗаписатьПоказательЭффективности(ОписаниеЗаписи, Проект, Период)
	
	РегЗапись = РегистрыСведений.ЭП_ЭффективностьСотрудников.СоздатьМенеджерЗаписи();
	РегЗапись.Ответственный = Ответственный;
	
	РегЗапись.ПериодОценивания =	Период;
	РегЗапись.Проект =				Проект;
	РегЗапись.Сотрудник =			ОписаниеЗаписи.Сотрудник;
	РегЗапись.Показатель =			ОписаниеЗаписи.Показатель;
	РегЗапись.ПрофильРасчета = БуферныйПрофиль;
	
	РегЗапись.Значение =			ОписаниеЗаписи.Значение;
	РегЗапись.Комментарий =			ОписаниеЗаписи.Комментарий;
	РегЗапись.Записать(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиЗначенияДляПустыхПоказателей(Команда)
	
	ОписаниеОповещенияОЗавершенииВыбора = Новый ОписаниеОповещения("ВыборЗначенияДляЗаполненияЗавершение", ЭтотОбъект,);
	ПоказатьВводЧисла(ОписаниеОповещенияОЗавершенииВыбора,0,"Введите значение показателя для заполнения не заполненных значений",0);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначенияДляЗаполненияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из ТаблицаПоСотруднику Цикл
		Если ЗначениеЗаполнено(Строка.Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Строка.Значение = Результат;
		Модифицированность = Истина;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРасчетногоПрофиля(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да И Модифицированность Тогда
		
		ЗаписатьДанные();

	КонецЕсли;
		
	ЗаполнитьТаблицуПоСотруднику(); 
	ЗаполнитьСписокВыбораПоказателей();	
    БуферныйПрофиль = ПрофильРасчета;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораПоказателей()
	
	Элементы.ПоказательЭффективности.СписокВыбора.Очистить();
	
	ТаблицаПрофилей = ПолучитьЗначенияПоказателейПоПрофилю(ПрофильРасчета, Ответственный);
	Для каждого СтрокаТаблицы Из ТаблицаПрофилей Цикл
	
		Элементы.ПоказательЭффективности.СписокВыбора.Добавить(СтрокаТаблицы.Показатель, СтрокаТаблицы.ПоказательПредставление);		
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияПоказателейПоПрофилю(ПрофильРасчетаРезультативности, Ответственный)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель КАК Показатель,
	               |	ПРЕДСТАВЛЕНИЕ(ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Показатель) КАК ПоказательПредставление
	               |ИЗ
	               |	РегистрСведений.ЭП_ОтветственныеЗаОценкуЭффективностиАУП КАК ЭП_ОтветственныеЗаОценкуЭффективностиАУП
	               |ГДЕ
	               |	ЭП_ОтветственныеЗаОценкуЭффективностиАУП.ПрофильРасчета = &Ссылка
	               |	И ЭП_ОтветственныеЗаОценкуЭффективностиАУП.Ответственный = &Ответственный";
	Запрос.УстановитьПараметр("Ссылка", ПрофильРасчетаРезультативности);   
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	МассивПрофилей = ОбщегоНазначения.ТаблицаЗначенийВМассив(Выгрузка);
	
	Возврат МассивПрофилей;

КонецФункции

&НаКлиенте
Процедура ПриИзмененииПоказателяЭффективности(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да  И Модифицированность Тогда
		
		ЗаписатьДанные();

	КонецЕсли;
		
	ЗаполнитьТаблицуПоСотруднику(); 	
    БуферныйПоказатель = ПоказательЭффективности;
	
КонецПроцедуры

#КонецОбласти