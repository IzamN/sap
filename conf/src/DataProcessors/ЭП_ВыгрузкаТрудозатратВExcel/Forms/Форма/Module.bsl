&НаКлиенте
Процедура ВыгрузкаВExcel(ПараметрыВыполнения)
	
	Если НЕ ПроверитьЗаполнение() Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Каталог = "";
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Заголовок = "Выберите каталог"; 
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ПриВыбореКаталога", ЭтотОбъект);
	
	Диалог.Показать(ОповещениеЗавершения);
	
КонецПроцедуры 
  
&НаСервере
Функция ЗаполнитьТаблицуНаСервере(ТабДок) 
	
	ОбъектВнешнейОбработки = РеквизитФормыВЗначение("Объект");
	НовыйМакет = ОбъектВнешнейОбработки.ПолучитьМакет("Макет");
	ОбластьСтрока = НовыйМакет.ПолучитьОбласть("Строка");
	ОбластьШапкаТаблицы = НовыйМакет.ПолучитьОбласть("ШапкаТаблицы");

	Запрос = Новый Запрос(ТекстЗапросаДанныхПоСотрудникам()); 	
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("СписокПроектов", СписокПроектов.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ВИРВ", "ЯД");
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ПроверкаПроекта", НЕ СписокПроектов.Количество()> 0);
    УстановитьПривилегированныйРежим(Истина);
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ТабДок.Вывести(ОбластьСтрока);	
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция ТекстЗапросаДанныхПоСотрудникам()

	Возврат "ВЫБРАТЬ
	        |	ЭП_Сотрудники.Ссылка КАК Ссылка
	        |ПОМЕСТИТЬ ВТ_ДоступныеСотрудники
	        |ИЗ
	        |	Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	        |ГДЕ
	        |	ЭП_Сотрудники.Организация В(&СписокОрганизаций)
	        |	И НЕ ЭП_Сотрудники.ДоговорГПХ
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ЭП_ОкладыСотрудников.Сотрудник КАК Сотрудник,
	        |	ЭП_ТаблицаГрейдов.Грейд КАК Грейд,
	        |	ЭП_ОкладыСотрудников.Период КАК Период
	        |ПОМЕСТИТЬ ВТ_ГрейдыСотрудниковПоПериодам
	        |ИЗ
	        |	РегистрСведений.ЭП_ОкладыСотрудников КАК ЭП_ОкладыСотрудников
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ТаблицаГрейдов КАК ЭП_ТаблицаГрейдов
	        |		ПО ЭП_ОкладыСотрудников.Оклад >= ЭП_ТаблицаГрейдов.От
	        |			И ЭП_ОкладыСотрудников.Оклад <= ЭП_ТаблицаГрейдов.До
	        |ГДЕ
	        |	ЭП_ОкладыСотрудников.Сотрудник В
	        |			(ВЫБРАТЬ
	        |				ВТ_ДоступныеСотрудники.Ссылка КАК Ссылка
	        |			ИЗ
	        |				ВТ_ДоступныеСотрудники КАК ВТ_ДоступныеСотрудники)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВТ_ГрейдыСотрудниковПоПериодамСлева.Сотрудник КАК Сотрудник,
	        |	ВТ_ГрейдыСотрудниковПоПериодамСлева.Грейд КАК Грейд,
	        |	ВТ_ГрейдыСотрудниковПоПериодамСлева.Период КАК ПериодНачало,
	        |	МИНИМУМ(ЕСТЬNULL(ВТ_ГрейдыСотрудниковПоПериодамСправа.Период, ДАТАВРЕМЯ(3999, 12, 31))) КАК ПериодОкончание
	        |ПОМЕСТИТЬ ВТ_ИнтервалыСГрейдамиПоСотрудникам
	        |ИЗ
	        |	ВТ_ГрейдыСотрудниковПоПериодам КАК ВТ_ГрейдыСотрудниковПоПериодамСлева
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ГрейдыСотрудниковПоПериодам КАК ВТ_ГрейдыСотрудниковПоПериодамСправа
	        |		ПО ВТ_ГрейдыСотрудниковПоПериодамСлева.Период < ВТ_ГрейдыСотрудниковПоПериодамСправа.Период
	        |			И ВТ_ГрейдыСотрудниковПоПериодамСлева.Сотрудник = ВТ_ГрейдыСотрудниковПоПериодамСправа.Сотрудник
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ВТ_ГрейдыСотрудниковПоПериодамСлева.Сотрудник,
	        |	ВТ_ГрейдыСотрудниковПоПериодамСлева.Грейд,
	        |	ВТ_ГрейдыСотрудниковПоПериодамСлева.Период
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	УчетВремени.Период КАК Период,
	        |	УчетВремени.Пользователь КАК Пользователь,
	        |	УчетВремени.Проект КАК Проект,
	        |	УчетВремени.НомерСтроки КАК НомерСтроки,
	        |	ВЫБОР
	        |		КОГДА УчетВремени.ТехническийПроект = ЗНАЧЕНИЕ(Справочник.ТехническиеПроекты.ПустаяСсылка)
	        |			ТОГДА УчетВремени.Задача.Предмет.Владелец
	        |		ИНАЧЕ УчетВремени.ТехническийПроект.Владелец
	        |	КОНЕЦ КАК ПроектИзПредмета,
	        |	УчетВремени.Длительность / 3600 КАК Длительность,
	        |	УчетВремени.ОписаниеРаботы КАК ОписаниеРаботы,
	        |	ЭП_Сотрудники.Ссылка КАК Сотрудник,
	        |	ЭП_Сотрудники.ГрейдСотрудника КАК ГрейдСотрудника,
	        |	ЭП_Сотрудники.ТабельныйНомер КАК ТабельныйНомер,
	        |	ВЫБОР
	        |		КОГДА УчетВремени.ТехническийПроект = ЗНАЧЕНИЕ(Справочник.ТехническиеПроекты.ПустаяСсылка)
	        |			ТОГДА УчетВремени.Задача.Предмет
	        |		ИНАЧЕ УчетВремени.ТехническийПроект
	        |	КОНЕЦ КАК Предмет,
	        |	ЭП_Сотрудники.Наименование КАК ФИО
	        |ПОМЕСТИТЬ ВТ_ПодготовленныеДанныеУчетаВремени
	        |ИЗ
	        |	РегистрНакопления.УчетВремени КАК УчетВремени
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	        |		ПО УчетВремени.Пользователь.ЭП_Сотрудник = ЭП_Сотрудники.Ссылка
	        |ГДЕ
	        |	(&ПроверкаПроекта
	        |			ИЛИ УчетВремени.Проект В (&СписокПроектов))
	        |	И УчетВремени.Период МЕЖДУ &НачалоПериода И &КонецПериода
	        |	И ЭП_Сотрудники.Ссылка В
	        |			(ВЫБРАТЬ
	        |				ВТ_ДоступныеСотрудники.Ссылка КАК Ссылка
	        |			ИЗ
	        |				ВТ_ДоступныеСотрудники КАК ВТ_ДоступныеСотрудники)
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	ВЫБОР
	        |		КОГДА ЭП_ВиртуальныеЭтапыПроектов.КодБИ ЕСТЬ NULL
	        |			ТОГДА ВЫБОР
	        |					КОГДА ВТ_ПодготовленныеДанныеУчетаВремени.Предмет.РазделПроекта.ЭП_КодBI = """"
	        |						ТОГДА ВТ_ПодготовленныеДанныеУчетаВремени.ПроектИзПредмета.ЭП_КодBI
	        |					ИНАЧЕ ВТ_ПодготовленныеДанныеУчетаВремени.Предмет.РазделПроекта.ЭП_КодBI
	        |				КОНЕЦ
	        |		ИНАЧЕ ЭП_ВиртуальныеЭтапыПроектов.КодБИ
	        |	КОНЕЦ КАК Проект,
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.Период КАК ДатаУчета,
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.ТабельныйНомер КАК EMPLOYEE_ID,
	        |	ЕСТЬNULL(ВТ_ИнтервалыСГрейдамиПоСотрудникам.Грейд, ВТ_ПодготовленныеДанныеУчетаВремени.ГрейдСотрудника) КАК Грейд,
	        |	СУММА(ВТ_ПодготовленныеДанныеУчетаВремени.Длительность) КАК ЧасыРаботы,
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.ФИО КАК ФИО_Сотрудника,
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.ОписаниеРаботы КАК Описание_Задач,
	        |	&ВИРВ КАК ВИРВ,
	        |	ЭП_Сотрудники.Организация.КодBI КАК Компания
	        |ИЗ
	        |	ВТ_ПодготовленныеДанныеУчетаВремени КАК ВТ_ПодготовленныеДанныеУчетаВремени
	        |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИнтервалыСГрейдамиПоСотрудникам КАК ВТ_ИнтервалыСГрейдамиПоСотрудникам
	        |		ПО ВТ_ПодготовленныеДанныеУчетаВремени.Период >= ВТ_ИнтервалыСГрейдамиПоСотрудникам.ПериодНачало
	        |			И ВТ_ПодготовленныеДанныеУчетаВремени.Период < ВТ_ИнтервалыСГрейдамиПоСотрудникам.ПериодОкончание
	        |			И ВТ_ПодготовленныеДанныеУчетаВремени.Сотрудник = ВТ_ИнтервалыСГрейдамиПоСотрудникам.Сотрудник
	        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ВиртуальныеЭтапыПроектов КАК ЭП_ВиртуальныеЭтапыПроектов
	        |		ПО ВТ_ПодготовленныеДанныеУчетаВремени.ПроектИзПредмета = ЭП_ВиртуальныеЭтапыПроектов.Проект
	        |			И (ВТ_ПодготовленныеДанныеУчетаВремени.Период >= НАЧАЛОПЕРИОДА(ЭП_ВиртуальныеЭтапыПроектов.ДатаС, ДЕНЬ))
	        |			И (ВТ_ПодготовленныеДанныеУчетаВремени.Период <= КОНЕЦПЕРИОДА(ЭП_ВиртуальныеЭтапыПроектов.ДатаПо, ДЕНЬ))
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники КАК ЭП_Сотрудники
	        |		ПО ВТ_ПодготовленныеДанныеУчетаВремени.Сотрудник = ЭП_Сотрудники.Ссылка
	        |ГДЕ
	        |	НЕ ВТ_ПодготовленныеДанныеУчетаВремени.ПроектИзПредмета.ЭП_НеУчаствуетВBI
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	ЭП_Сотрудники.Организация.КодBI,
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.ОписаниеРаботы,
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.ФИО,
	        |	ЕСТЬNULL(ВТ_ИнтервалыСГрейдамиПоСотрудникам.Грейд, ВТ_ПодготовленныеДанныеУчетаВремени.ГрейдСотрудника),
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.ТабельныйНомер,
	        |	ВТ_ПодготовленныеДанныеУчетаВремени.Период,
	        |	ВЫБОР
	        |		КОГДА ЭП_ВиртуальныеЭтапыПроектов.КодБИ ЕСТЬ NULL
	        |			ТОГДА ВЫБОР
	        |					КОГДА ВТ_ПодготовленныеДанныеУчетаВремени.Предмет.РазделПроекта.ЭП_КодBI = """"
	        |						ТОГДА ВТ_ПодготовленныеДанныеУчетаВремени.ПроектИзПредмета.ЭП_КодBI
	        |					ИНАЧЕ ВТ_ПодготовленныеДанныеУчетаВремени.Предмет.РазделПроекта.ЭП_КодBI
	        |				КОНЕЦ
	        |		ИНАЧЕ ЭП_ВиртуальныеЭтапыПроектов.КодБИ
	        |	КОНЕЦ";	

КонецФункции

&НаКлиенте
Процедура ПриВыбореКаталога(ВыбКаталог, ДополнительныеПараметры) Экспорт
	
	Если НЕ ВыбКаталог = Неопределено Тогда
	   
	   ПапкаЗагрузки = ВыбКаталог[0];
	   
	   ИмяФайла = СтрШаблон("Выгрузка_данных_по_сотрудникам %1", Формат(ТекущаяДата(),"ДФ=yyyy-MM-dd-hh-mm; ДЛФ=DT"));  
	   
	   ТабДок = Новый ТабличныйДокумент;
	   
	   ПолноеИмяФайла = ПапкаЗагрузки + ПолучитьРазделительПути() + ИмяФайла + ".xlsx"; 
	   
	   ЗаполнитьТаблицуНаСервере(ТабДок);
	   
	   ТабДок.Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.xlsx);
	   
	   ОбщегоНазначенияКлиент.СообщитьПользователю("Выгрузка данных успешно завершена");
	   
   КонецЕсли;
   
КонецПроцедуры
                                                                         