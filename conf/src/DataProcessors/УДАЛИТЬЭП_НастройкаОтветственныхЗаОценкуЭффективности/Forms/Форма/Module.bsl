
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Руководитель = Пользователи.ТекущийПользователь();
	ЗаполнитьШапку();
	УстановитьТекущийРежимНаСервере();
	ЗаполнитьСпискиНаСервере();
	
	ОтборДляОтображенияВСписках = Новый ФиксированнаяСтруктура("ПометкаУдаления", Ложь);
	Элементы.СписокСотрудников.ОтборСтрок =		ОтборДляОтображенияВСписках;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	ПользователиПроекта = СписокПользователейПроекта(Проект);
	Элементы.Ответственный.СписокВыбора.ЗагрузитьЗначения(ПользователиПроекта);
	
	Если ТекущийРежим = "НастройкаОценкиСотрудников" Тогда
		Если СписокСотрудников.Количество() Тогда
			ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ПриИзмененииПроектаЗавершение", ЭтотОбъект);
			ПоказатьВопрос(
				ОписаниеОповещенияОЗавершении,
				НСтр("ru = 'Текущий список будет перезаполнен. Продолжить?'"),
				РежимДиалогаВопрос.ДаНет,,
				КодВозвратаДиалога.Нет);
		Иначе
				
			ЗаполнитьСпискиНаСервере();
		КонецЕсли;
	Иначе
		
		ЗаполнитьСпискиНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
    Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьСпискиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСотрудников

&НаКлиенте
Процедура СписокСотрудниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковСотрудникАвтоПодбор(Элемент, Текст, ДанныеВыбора,
	ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Сотрудники = СотрудникиПроекта(Проект, Ответственный, Текст);
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(Сотрудники);
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковСотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Сотрудники = СотрудникиПроекта(Проект, Ответственный);
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(Сотрудники);
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковСотрудникПриИзменении(Элемент)
	ТекущиеДанные = Элементы.СписокСотрудников.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Сотрудник) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ДепартаментСотрудника = ЗначениеРеквизитаОбъекта(ТекущиеДанные.Сотрудник, "Департамент");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	Если СписокСотрудников.Количество() Тогда
		ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ПриИзмененииПроектаЗавершение", ЭтотОбъект);
		ПоказатьВопрос(
			ОписаниеОповещенияОЗавершении,
			НСтр("ru = 'Список сотрудников будет перезаполнен. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет,,
			КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьСпискиНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	ВыполнитьСохранениеИзменений(Истина);
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ВыполнитьСохранениеИзменений();
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	ТекущиеДанные = Элементы.СписокСотрудников.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ПометкаУдаления = Истина;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьШапку()
	УстановитьДоступныеПроектыНаСервере();
	УстановитьДоступныхОтветственныхНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокПользователейПроекта(Проект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь
	|ИЗ
	|	РегистрСведений.ЭП_ЗагруженностьСотрудников.СрезПоследних(, Проект = &Проект) КАК ЭП_ЗагруженностьСотрудниковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник = Пользователи.ЭП_Сотрудник
	|ГДЕ
	|	НЕ ЭП_ЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Проект",	Проект);
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	СписокОтветственных = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокОтветственных.Добавить(ВыборкаДетальныеЗаписи.Пользователь);
	КонецЦикла;
	
	Возврат СписокОтветственных;
КонецФункции

&НаСервереБезКонтекста
Функция СписокПроектовПользователя(Пользователь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Проекты.Ссылка КАК Проект
		|ИЗ
		|	Справочник.Проекты КАК Проекты
		|ГДЕ
		|	Проекты.Ответственный = &Ответственный";
	
	Запрос.УстановитьПараметр("Ответственный", Пользователь);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокПроектов = Новый Массив;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокПроектов.Добавить(ВыборкаДетальныеЗаписи.Проект);
	КонецЦикла;
	
	Возврат СписокПроектов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСпискиНаСервере()
	Если ТекущийРежим = "НастройкаОценкиСотрудников" Тогда
		ЗаполнитьСписокСотрудников();
	КонецЕсли;
    Если ТекущийРежим = "НастройкаДоступаОтчетаРасчетРезультатов" Тогда
		ЗаполнитьСписокОтветственных2();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСотрудников()
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		СписокСотрудников.Очистить();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь,
	|	ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ втПользователиПроекта
	|ИЗ
	|	РегистрСведений.ЭП_ЗагруженностьСотрудников.СрезПоследних(, Проект = &Проект) КАК ЭП_ЗагруженностьСотрудниковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЭП_Сотрудники.РасчетныеПрофили КАК ЭП_СотрудникиРасчетныеПрофили
	|			ПО Пользователи.ЭП_Сотрудник = ЭП_СотрудникиРасчетныеПрофили.Ссылка
	|		ПО ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник = Пользователи.ЭП_Сотрудник
	|ГДЕ
	|	НЕ ЭП_ЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления
	|	И ЭП_СотрудникиРасчетныеПрофили.Профиль = &РасчетныйПрофиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ втВсеСотрудникиПроекта
	|ИЗ
	|	РегистрСведений.ЭП_ЗагруженностьСотрудников.СрезПоследних(, Проект = &Проект) КАК ЭП_ЗагруженностьСотрудниковСрезПоследних
	|ГДЕ
	|	НЕ ЭП_ЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭП_ОтветственныеЗаОценкуЭффективности.Ответственный КАК Ответственный,
	|	ЭП_ОтветственныеЗаОценкуЭффективности.Сотрудник КАК Сотрудник,
	|	ЭП_ОтветственныеЗаОценкуЭффективности.ПрофильОценивания КАК ПрофильОценивания,
	|	ЭП_ОтветственныеЗаОценкуЭффективности.РасчетныйПрофиль КАК РасчетныйПрофиль
	|ПОМЕСТИТЬ втНастройкиОцениванияИзРегистра
	|ИЗ
	|	РегистрСведений.ЭП_ОтветственныеЗаОценкуЭффективности КАК ЭП_ОтветственныеЗаОценкуЭффективности
	|ГДЕ
	|	ЭП_ОтветственныеЗаОценкуЭффективности.Проект = &Проект
	|	И НЕ ЭП_ОтветственныеЗаОценкуЭффективности.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНастройкиОцениванияИзРегистра.Ответственный КАК Ответственный,
	|	втНастройкиОцениванияИзРегистра.Сотрудник КАК Сотрудник,
	|	втНастройкиОцениванияИзРегистра.ПрофильОценивания КАК ПрофильОценивания,
	|	втНастройкиОцениванияИзРегистра.РасчетныйПрофиль КАК РасчетныйПрофиль
	|ПОМЕСТИТЬ втНастройкиОцениванияПоОтветственному
	|ИЗ
	|	втНастройкиОцениванияИзРегистра КАК втНастройкиОцениванияИзРегистра
	|ГДЕ
	|	втНастройкиОцениванияИзРегистра.Ответственный = &Ответственный
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ответственный,
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНастройкиОцениванияИзРегистра.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ втСписокСотрудниковВнеПроекта
	|ИЗ
	|	втНастройкиОцениванияИзРегистра КАК втНастройкиОцениванияИзРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеСотрудникиПроекта КАК втВсеСотрудникиПроекта
	|		ПО втНастройкиОцениванияИзРегистра.Сотрудник = втВсеСотрудникиПроекта.Сотрудник
	|ГДЕ
	|	втВсеСотрудникиПроекта.Сотрудник ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНастройкиОцениванияИзРегистра.Ответственный КАК Ответственный,
	|	втНастройкиОцениванияИзРегистра.Сотрудник КАК Сотрудник,
	|	втНастройкиОцениванияИзРегистра.ПрофильОценивания КАК ПрофильОценивания
	|ПОМЕСТИТЬ втСписокОтветственныхВнеПроекта
	|ИЗ
	|	втНастройкиОцениванияИзРегистра КАК втНастройкиОцениванияИзРегистра,
	|	втВсеСотрудникиПроекта КАК втВсеСотрудникиПроекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ОтветственныйДляУстановки КАК Ответственный,
	|	втПользователиПроекта.Сотрудник КАК Сотрудник,
	|	NULL КАК ПрофильОценивания,
	|	ЛОЖЬ КАК СотрудникВнеПроекта,
	|	&ОтветственныйДляУстановкиВнеПроекта КАК ОтветственныйВнеПроекта,
	|	4 КАК Порядок
	|ПОМЕСТИТЬ втСписокНаВывод
	|ИЗ
	|	втПользователиПроекта КАК втПользователиПроекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНастройкиОцениванияИзРегистра КАК втНастройкиОцениванияИзРегистра
	|		ПО втПользователиПроекта.Сотрудник = втНастройкиОцениванияИзРегистра.Сотрудник
	|			И (втНастройкиОцениванияИзРегистра.Ответственный = &ОтветственныйДляУстановки)
	|ГДЕ
	|	втНастройкиОцениванияИзРегистра.Сотрудник ЕСТЬ NULL
	|	И втПользователиПроекта.Сотрудник <> &СотрудникОтветственногоДляУстановки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втНастройкиОцениванияПоОтветственному.Ответственный,
	|	втНастройкиОцениванияПоОтветственному.Сотрудник,
	|	втНастройкиОцениванияПоОтветственному.ПрофильОценивания,
	|	ЛОЖЬ,
	|	втПользователиПроекта.Пользователь ЕСТЬ NULL,
	|	3
	|ИЗ
	|	втНастройкиОцениванияПоОтветственному КАК втНастройкиОцениванияПоОтветственному
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПользователиПроекта КАК втПользователиПроекта
	|		ПО втНастройкиОцениванияПоОтветственному.Ответственный = втПользователиПроекта.Пользователь
	|ГДЕ
	|	втНастройкиОцениванияПоОтветственному.РасчетныйПрофиль = &РасчетныйПрофиль
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втНастройкиОцениванияИзРегистра.Ответственный,
	|	втНастройкиОцениванияИзРегистра.Сотрудник,
	|	втНастройкиОцениванияИзРегистра.ПрофильОценивания,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	2
	|ИЗ
	|	втНастройкиОцениванияИзРегистра КАК втНастройкиОцениванияИзРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСписокСотрудниковВнеПроекта КАК втСписокСотрудниковВнеПроекта
	|		ПО втНастройкиОцениванияИзРегистра.Сотрудник = втСписокСотрудниковВнеПроекта.Сотрудник
	|ГДЕ
	|	втНастройкиОцениванияИзРегистра.РасчетныйПрофиль = &РасчетныйПрофиль
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСписокОтветственныхВнеПроекта.Ответственный,
	|	втСписокОтветственныхВнеПроекта.Сотрудник,
	|	втСписокОтветственныхВнеПроекта.ПрофильОценивания,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	1
	|ИЗ
	|	втСписокОтветственныхВнеПроекта КАК втСписокОтветственныхВнеПроекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНастройкиОцениванияПоОтветственному КАК втНастройкиОцениванияПоОтветственному
	|		ПО втСписокОтветственныхВнеПроекта.Ответственный = втНастройкиОцениванияПоОтветственному.Ответственный
	|			И втСписокОтветственныхВнеПроекта.Сотрудник = втНастройкиОцениванияПоОтветственному.Сотрудник
	|ГДЕ
	|	втНастройкиОцениванияПоОтветственному.Сотрудник ЕСТЬ NULL
	|	И втНастройкиОцениванияПоОтветственному.РасчетныйПрофиль = &РасчетныйПрофиль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПодготовленныеДанные.Ответственный КАК Ответственный,
	|	втПодготовленныеДанные.Сотрудник КАК Сотрудник,
	|	втПодготовленныеДанные.Сотрудник.Департамент КАК ДепартаментСотрудника,
	|	втПодготовленныеДанные.Сотрудник.ДоговорГПХ КАК ДоговорГПХ,
	|	втПодготовленныеДанные.ПрофильОценивания КАК ПрофильОценивания,
	|	МАКСИМУМ(втПодготовленныеДанные.СотрудникВнеПроекта) КАК СотрудникВнеПроекта,
	|	МАКСИМУМ(втПодготовленныеДанные.ОтветственныйВнеПроекта) КАК ПользовательВнеПроекта,
	|	МАКСИМУМ(втПодготовленныеДанные.Порядок) КАК Порядок
	|ИЗ
	|	втСписокНаВывод КАК втПодготовленныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втПодготовленныеДанные.Ответственный,
	|	втПодготовленныеДанные.Сотрудник,
	|	втПодготовленныеДанные.ПрофильОценивания,
	|	втПодготовленныеДанные.Сотрудник.Департамент,
	|	втПодготовленныеДанные.Сотрудник.ДоговорГПХ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Ответственный";
	
	ОтветственныйДляУстановки = Справочники.Пользователи.ПустаяСсылка();
	Если ЗначениеЗаполнено(Ответственный) Тогда
		ОтветственныйДляУстановки = Ответственный;
	КонецЕсли;
	
	ПользователиИЗПроекта = ПользователиПроекта(Проект);
	ОтветственныйДляУстановкиВнеПроекта = ПользователиИЗПроекта.Найти(ОтветственныйДляУстановки) = Неопределено;
		
	СотрудникОтветственногоДляУстановки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтветственныйДляУстановки, "ЭП_Сотрудник");
	
	Запрос.УстановитьПараметр("Ответственный",							Ответственный);		
	Запрос.УстановитьПараметр("ОтветственныйДляУстановки",				ОтветственныйДляУстановки);		
	Запрос.УстановитьПараметр("СотрудникОтветственногоДляУстановки",	СотрудникОтветственногоДляУстановки);		
	Запрос.УстановитьПараметр("ОтветственныйДляУстановкиВнеПроекта",	ОтветственныйДляУстановкиВнеПроекта);
	Запрос.УстановитьПараметр("Проект",									Проект); 
	Запрос.УстановитьПараметр("РасчетныйПрофиль", РасчетныйПрофиль);
	
	Результат = Запрос.Выполнить();
	
	СписокСотрудников.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокОтветственных2()
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		СписокОтветственных2.Очистить();
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЭП_ОтветственныеЗаЭффективностьПроекта.Ответственный КАК Ответственный
	|ИЗ
	|	РегистрСведений.ЭП_ОтветственныеЗаЭффективностьПроекта КАК ЭП_ОтветственныеЗаЭффективностьПроекта
	|ГДЕ
	|	ЭП_ОтветственныеЗаЭффективностьПроекта.Проект = &Проект";
	
	Запрос.УстановитьПараметр("Проект", Проект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СписокОтветственных2.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СотрудникиПроекта(Проект, Ответственный, Текст = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.ЭП_ЗагруженностьСотрудников.СрезПоследних КАК ЭП_ЗагруженностьСотрудниковСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник = Пользователи.ЭП_Сотрудник
		|			И (Пользователи.Ссылка = &Ответственный)
		|ГДЕ
		|	ЭП_ЗагруженностьСотрудниковСрезПоследних.Проект = &Проект
		|	И ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник.Наименование ПОДОБНО &Текст + ""%""
		|	И НЕ ЭП_ЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления
		|	И Пользователи.Ссылка ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Ответственный",	Ответственный);	
	Запрос.УстановитьПараметр("Проект",			Проект);
	Запрос.УстановитьПараметр("Текст",			Текст);
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"И ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник.Наименование ПОДОБНО &Текст + ""%""
			|",
			"");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");

КонецФункции

&НаСервереБезКонтекста
Функция ПользователиПроекта(Проект, Текст = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь
		|ИЗ
		|	РегистрСведений.ЭП_ЗагруженностьСотрудников.СрезПоследних КАК ЭП_ЗагруженностьСотрудниковСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|		ПО ЭП_ЗагруженностьСотрудниковСрезПоследних.Сотрудник = Пользователи.ЭП_Сотрудник
		|ГДЕ
		|	ЭП_ЗагруженностьСотрудниковСрезПоследних.Проект = &Проект
		|	И Пользователи.Наименование ПОДОБНО &Текст + ""%""
		|	И НЕ ЭП_ЗагруженностьСотрудниковСрезПоследних.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Проект",	Проект);
	Запрос.УстановитьПараметр("Текст", 	Текст);
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"И Пользователи.Наименование ПОДОБНО &Текст + ""%""
			|",
			"");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");

КонецФункции

&НаСервереБезКонтекста
Функция ПрофилиДепартамента(РасчетныйПрофиль, Текст = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭП_ПрофилиОценивания.Ссылка КАК Профиль
		|ИЗ
		|	Справочник.ЭП_ПрофилиОценивания КАК ЭП_ПрофилиОценивания
		|ГДЕ
		|	НЕ ЭП_ПрофилиОценивания.ПометкаУдаления
		|	И ЭП_ПрофилиОценивания.Владелец = &Владелец
		|	И ЭП_ПрофилиОценивания.Наименование ПОДОБНО ""%"" + &Текст + ""%""";
	Запрос.УстановитьПараметр("Владелец",	РасчетныйПрофиль);
	Запрос.УстановитьПараметр("Текст", 			Текст);
	
	Если Не ЗначениеЗаполнено(Текст) Тогда
		Запрос.Текст = СтрЗаменить(
			Запрос.Текст,
			"И ЭП_ПрофилиОценивания.Наименование ПОДОБНО ""%"" + &Текст + ""%""",
			"");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Профиль");

КонецФункции

&НаКлиенте
Процедура ПриИзмененииПроектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Не ЗначениеЗаполненО(Результат)
		Или Результат = КодВозвратаДиалога.Нет Тогда
		
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСпискиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьИзменения(Отказ = Ложь)
    Если ТекущийРежим = "НастройкаОценкиСотрудников" Тогда
		ЗаписатьСписокСотрудников();
	КонецЕсли;
    Если ТекущийРежим = "НастройкаДоступаОтчетаРасчетРезультатов" Тогда
		ЗаписатьСписокОтветственных2();
	КонецЕсли;
КонецПроцедуры

&НаСервере	
Процедура ЗаписатьСписокСотрудников(Отказ = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокНастроекОценки.Ответственный КАК Ответственный,
	|	СписокНастроекОценки.ПрофильОценивания КАК ПрофильОценивания,
	|	СписокНастроекОценки.Сотрудник КАК Сотрудник,
	|	СписокНастроекОценки.ПометкаУдаления КАК ПометкаУдаления,
	|	&РасчетныйПрофиль КАК РасчетныйПрофиль
	|ПОМЕСТИТЬ втСписокТекущихНастроекОценки
	|ИЗ
	|	&СписокНастроекОценки КАК СписокНастроекОценки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСписокТекущихНастроекОценки.Ответственный КАК Ответственный,
	|	&Проект КАК Проект,
	|	втСписокТекущихНастроекОценки.ПрофильОценивания КАК ПрофильОценивания,
	|	втСписокТекущихНастроекОценки.Сотрудник КАК Сотрудник,
	|	втСписокТекущихНастроекОценки.ПометкаУдаления КАК ПометкаУдаления,
	|	втСписокТекущихНастроекОценки.РасчетныйПрофиль КАК РасчетныйПрофиль
	|ПОМЕСТИТЬ втСписокТекущихНастроекОценки_ДляОбработки
	|ИЗ
	|	втСписокТекущихНастроекОценки КАК втСписокТекущихНастроекОценки
	|ГДЕ
	|	втСписокТекущихНастроекОценки.ПрофильОценивания <> &ПрофильОцениванияПустой
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСписокТекущихНастроекОценки_ДляОбработки.Ответственный КАК Ответственный,
	|	втСписокТекущихНастроекОценки_ДляОбработки.Проект КАК Проект,
	|	втСписокТекущихНастроекОценки_ДляОбработки.ПрофильОценивания КАК ПрофильОценивания,
	|	втСписокТекущихНастроекОценки_ДляОбработки.Сотрудник КАК Сотрудник,
	|	КОЛИЧЕСТВО(1) КАК КоличествоЗаписей,
	|	втСписокТекущихНастроекОценки_ДляОбработки.РасчетныйПрофиль КАК РасчетныйПрофиль
	|ПОМЕСТИТЬ втУдаляемыеФизическиЗаписи
	|ИЗ
	|	втСписокТекущихНастроекОценки_ДляОбработки КАК втСписокТекущихНастроекОценки_ДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭП_ОтветственныеЗаОценкуЭффективности КАК ЭП_ОтветственныеЗаОценкуЭффективности
	|		ПО втСписокТекущихНастроекОценки_ДляОбработки.Ответственный = ЭП_ОтветственныеЗаОценкуЭффективности.Ответственный
	|			И втСписокТекущихНастроекОценки_ДляОбработки.Проект = ЭП_ОтветственныеЗаОценкуЭффективности.Проект
	|			И втСписокТекущихНастроекОценки_ДляОбработки.ПрофильОценивания = ЭП_ОтветственныеЗаОценкуЭффективности.ПрофильОценивания
	|			И втСписокТекущихНастроекОценки_ДляОбработки.Сотрудник = ЭП_ОтветственныеЗаОценкуЭффективности.Сотрудник
	|			И втСписокТекущихНастроекОценки_ДляОбработки.РасчетныйПрофиль = ЭП_ОтветственныеЗаОценкуЭффективности.РасчетныйПрофиль
	|ГДЕ
	|	втСписокТекущихНастроекОценки_ДляОбработки.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	втСписокТекущихНастроекОценки_ДляОбработки.Ответственный,
	|	втСписокТекущихНастроекОценки_ДляОбработки.Проект,
	|	втСписокТекущихНастроекОценки_ДляОбработки.ПрофильОценивания,
	|	втСписокТекущихНастроекОценки_ДляОбработки.Сотрудник,
	|	втСписокТекущихНастроекОценки_ДляОбработки.РасчетныйПрофиль
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(1) <= 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСписокТекущихНастроекОценки.Ответственный КАК Ответственный,
	|	ПРЕДСТАВЛЕНИЕ(втСписокТекущихНастроекОценки.Сотрудник) КАК Сотрудник
	|ИЗ
	|	втСписокТекущихНастроекОценки КАК втСписокТекущихНастроекОценки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСписокТекущихНастроекОценки.Ответственный,
	|	ПРЕДСТАВЛЕНИЕ(втСписокТекущихНастроекОценки.Сотрудник)
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСписокТекущихНастроекОценки_ДляОбработки.Ответственный КАК Ответственный,
	|	втСписокТекущихНастроекОценки_ДляОбработки.Проект КАК Проект,
	|	втСписокТекущихНастроекОценки_ДляОбработки.ПрофильОценивания КАК ПрофильОценивания,
	|	втСписокТекущихНастроекОценки_ДляОбработки.Сотрудник КАК Сотрудник,
	|	втСписокТекущихНастроекОценки_ДляОбработки.ПометкаУдаления КАК ПометкаУдаления,
	|	втУдаляемыеФизическиЗаписи.Ответственный ЕСТЬ НЕ NULL  КАК УдалитьЗапись,
	|	ЕСТЬNULL(втУдаляемыеФизическиЗаписи.КоличествоЗаписей, 0) КАК КоличествоЗаписей,
	|	втСписокТекущихНастроекОценки_ДляОбработки.РасчетныйПрофиль КАК РасчетныйПрофиль
	|ИЗ
	|	втСписокТекущихНастроекОценки_ДляОбработки КАК втСписокТекущихНастроекОценки_ДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУдаляемыеФизическиЗаписи КАК втУдаляемыеФизическиЗаписи
	|		ПО втСписокТекущихНастроекОценки_ДляОбработки.Ответственный = втУдаляемыеФизическиЗаписи.Ответственный
	|			И втСписокТекущихНастроекОценки_ДляОбработки.Проект = втУдаляемыеФизическиЗаписи.Проект
	|			И втСписокТекущихНастроекОценки_ДляОбработки.ПрофильОценивания = втУдаляемыеФизическиЗаписи.ПрофильОценивания
	|			И втСписокТекущихНастроекОценки_ДляОбработки.Сотрудник = втУдаляемыеФизическиЗаписи.Сотрудник
	|			И втСписокТекущихНастроекОценки_ДляОбработки.РасчетныйПрофиль = втУдаляемыеФизическиЗаписи.РасчетныйПрофиль";
	
	СписокНастроекОценки = СписокСотрудников.Выгрузить();
	
	Запрос.УстановитьПараметр("Проект",						Проект);	
	Запрос.УстановитьПараметр("Ответственный",				Ответственный);	
	Запрос.УстановитьПараметр("СписокНастроекОценки",		СписокНастроекОценки);	
	Запрос.УстановитьПараметр("ПрофильОцениванияПустой",	Справочники.ЭП_ПрофилиОценивания.ПустаяСсылка());
	Запрос.УстановитьПараметр("РасчетныйПрофиль", РасчетныйПрофиль);
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.ВГраница() - 1].Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрШаблон(НСтр("ru = 'Обнаружен дубль по сотруднику ""%1""'"), Выборка.Сотрудник),,,, Отказ);
	КонецЦикла;
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Выборка = ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.ВГраница()].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.УдалитьЗапись 
			И Не Выборка.КоличествоЗаписей Тогда
			Продолжить;
		КонецЕсли;
		
		НЗ = РегистрыСведений.ЭП_ОтветственныеЗаОценкуЭффективности.СоздатьНаборЗаписей();
		
		// НЗ.Отбор.Период.Установить(Выборка.Период);		
		НЗ.Отбор.Ответственный.Установить(Выборка.Ответственный);		
		НЗ.Отбор.Проект.Установить(Проект);		
		НЗ.Отбор.Сотрудник.Установить(Выборка.Сотрудник);
		НЗ.Отбор.РасчетныйПрофиль.Установить(РасчетныйПрофиль);
		// НЗ.Отбор.ПрофильОценивания.Установить(Выборка.ПрофильОценивания);
		
		Если Не Выборка.УдалитьЗапись Тогда
			Запись = НЗ.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка); 
		КонецЕсли;
		
		НЗ.Записать();
	КонецЦикла;
	
	ЗаполнитьСписокСотрудников();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСписокОтветственных2()
	
	Если Не ЗначениеЗаполнено(Проект) Тогда
		СписокОтветственных2.Очистить();
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
	
		НЗ = РегистрыСведений.ЭП_ОтветственныеЗаЭффективностьПроекта.СоздатьНаборЗаписей();
		НЗ.Отбор.Проект.Установить(Проект);
		НЗ.Записать();
		
		Для Каждого Элемент Из СписокОтветственных2 Цикл
		
			НЗ = РегистрыСведений.ЭП_ОтветственныеЗаЭффективностьПроекта.СоздатьНаборЗаписей();
					
			НЗ.Отбор.Проект.Установить(Проект);
			НЗ.Отбор.Ответственный.Установить(Элемент.Ответственный);
			Запись = НЗ.Добавить();
			Запись.Проект = Проект;
			Запись.Ответственный = Элемент.Ответственный;
			
			НЗ.Записать();
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
		ВызватьИсключение КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
	
	ЗаполнитьСписокОтветственных2();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступныеПроекты()
	Если Не ЗначениеЗаполнено(Руководитель) Тогда
		Возврат;
	КонецЕсли;
	УстановитьДоступныеПроектыНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступныеПроектыНаСервере()
	
	СписокПроектов = СписокПроектовПользователя(Руководитель);
	Элементы.Проект.СписокВыбора.ЗагрузитьЗначения(СписокПроектов);
	Элементы.Проект1.СписокВыбора.ЗагрузитьЗначения(СписокПроектов);
	Если СписокПроектов.Количество() = 1 Тогда
		Проект = СписокПроектов[0];
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступныхОтветственныхНаСервере()
	
	СписокПользователей = СписокПользователейПроекта(Проект);
	Элементы.Ответственный.СписокВыбора.ЗагрузитьЗначения(СписокПользователей);
	Если СписокПользователей.Количество() = 1 Тогда
		Ответственный = СписокПользователей[0];
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗначениеРеквизитаОбъекта(Объект, ИмяРеквизита)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, ИмяРеквизита);
КонецФункции

&НаКлиенте
Процедура СписокСотрудниковПрофильОцениванияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.СписокСотрудников.ТекущиеДанные;
	
	Профили = ПрофилиДепартамента(РасчетныйПрофиль);
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(Профили);
КонецПроцедуры

&НаКлиенте
Процедура СписокСотрудниковПрофильОцениванияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
		
	ТекущиеДанные = Элементы.СписокСотрудников.ТекущиеДанные;

	Профили = ПрофилиДепартамента(РасчетныйПрофиль, Текст);
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(Профили);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСохранениеИзменений(ЗакрытьФорму = Ложь)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Ошибка = Ложь;
	ЗаписатьИзменения(Ошибка);
	Если Ошибка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗакрытьФорму Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСпискиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыРежимовПриСменеСтраницы(Элемент, ТекущаяСтраница)
	УстановитьТекущийРежим();
	ЗаполнитьСпискиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущийРежим()
	Если Элементы.ГруппаСтраницыРежимов.ТекущаяСтраница = Элементы.СтраницаРежимНастройкиДоступаКОценке Тогда
		ТекущийРежим = "НастройкаОценкиСотрудников";
	КонецЕсли;
	Если Элементы.ГруппаСтраницыРежимов.ТекущаяСтраница = Элементы.СтраницаНастройкиДоступаКОтчетуПрофилиРасчетаРезультатов Тогда
		ТекущийРежим = "НастройкаДоступаОтчетаРасчетРезультатов";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущийРежимНаСервере()
	Если Элементы.ГруппаСтраницыРежимов.ТекущаяСтраница = Элементы.СтраницаРежимНастройкиДоступаКОценке Тогда
		ТекущийРежим = "НастройкаОценкиСотрудников";
	КонецЕсли;
	Если Элементы.ГруппаСтраницыРежимов.ТекущаяСтраница = Элементы.СтраницаНастройкиДоступаКОтчетуПрофилиРасчетаРезультатов Тогда
		ТекущийРежим = "НастройкаДоступаОтчетаРасчетРезультатов";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокОтветственных2ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не ЗначениеЗаполнено(Проект) Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасчетныйПрофильПриИзменении(Элемент)
	ЗаполнитьСпискиНаСервере();
КонецПроцедуры

#КонецОбласти
